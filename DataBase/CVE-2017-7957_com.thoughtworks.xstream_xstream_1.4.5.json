{
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object readFile(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)",
            "com.thoughtworks.xstream.io.binary.Token:long readId(java.io.DataInput,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:long readId(java.io.DataInput,byte)",
            "com.thoughtworks.xstream.io.binary.Token:java.lang.String readString(java.io.DataInput)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:long readId(java.io.DataInput,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:long readId(java.io.DataInput,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:java.lang.String readString(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[])"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object readFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object remove(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:com.thoughtworks.xstream.io.binary.Token readToken()"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token:long readId(java.io.DataInput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void readFrom(java.io.DataInput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$StartNode:void readFrom(java.io.DataInput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Attribute:void readFrom(java.io.DataInput,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.Token:java.lang.String readString(java.io.DataInput)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void readFrom(java.io.DataInput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Attribute:void readFrom(java.io.DataInput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Value:void readFrom(java.io.DataInput,byte)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:java.lang.String readString(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object getValue()"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:com.thoughtworks.xstream.io.binary.Token readToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveDown()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveUp()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:com.thoughtworks.xstream.io.binary.Token readToken()"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void readFrom(java.io.DataInput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$StartNode:void readFrom(java.io.DataInput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$Attribute:void readFrom(java.io.DataInput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$Value:void readFrom(java.io.DataInput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object setValue(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:int accept(java.lang.reflect.Method)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String get(java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:java.lang.String get(long)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.QNameMap:java.lang.String getJavaClassName(javax.xml.namespace.QName)",
            "com.thoughtworks.xstream.io.xml.QNameMap:javax.xml.namespace.QName getQName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:boolean getFeature(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:java.lang.Object getProperty(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTracker:java.lang.String peekElement(int)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:java.lang.Object lookupId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:java.lang.Object get(java.lang.String)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class box(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class unbox(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class primitiveType(java.lang.String)",
            "com.thoughtworks.xstream.core.util.Primitives:char representingChar(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:void <init>(java.io.InputStream)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String aliasForAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String attributeForAlias(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:java.lang.String aliasForSystemAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Class defaultImplementationOf(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:void add(int,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object get(int)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object remove(int)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void removeId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void cleanup()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object remove(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object remove(int)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object getValue()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void <init>(java.io.InputStream)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void <init>()",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void init()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:void registerFieldOrder(java.lang.Class,java.lang.String[])",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:void put(long,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void setAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setFeature(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setProperty(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void associateId(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.Primitives:void <clinit>()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void addPackageAlias(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addTypeAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:void addAliasFor(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaultImplementation(java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void ensureCache(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object set(int,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:void add(int,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object remove(int)",
            "com.thoughtworks.xstream.persistence.XmlSet:boolean add(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.DomReader:void reassignCurrentElement(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.PresortedSet:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:void <init>(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:boolean fieldDefinedInClass(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator fieldsFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFields()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object newInstance(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:int accept(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator propertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:java.lang.String get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:void <init>(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:int accept(java.lang.reflect.Method)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.xml.StaxReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.xml.XppReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:java.lang.String get(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveDown()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.QNameMap:java.lang.String getJavaClassName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String pullElementName()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.QNameMap:javax.xml.namespace.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void startNode(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:boolean getFeature(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(org.xml.sax.InputSource)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveDown()",
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTracker:java.lang.String peekElement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTracker:java.lang.String peekElement()",
            "com.thoughtworks.xstream.io.path.PathTracker:com.thoughtworks.xstream.io.path.Path getPath()"
        ]
    },
    "com.thoughtworks.xstream.core.util.ObjectIdDictionary:java.lang.Object lookupId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.lang.Object lookupReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:java.lang.Object get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:byte get(java.lang.String,byte)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:char get(java.lang.String,char)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:double get(java.lang.String,double)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:float get(java.lang.String,float)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:int get(java.lang.String,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:long get(java.lang.String,long)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:short get(java.lang.String,short)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:boolean get(java.lang.String,boolean)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:java.lang.Object get(java.lang.String,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class box(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class unbox(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class primitiveType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.Class realClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Primitives:char representingChar(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String arrayType(int,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:int accept(java.lang.reflect.Method)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String get(java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:java.lang.String get(long)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.QNameMap:java.lang.String getJavaClassName(javax.xml.namespace.QName)",
            "com.thoughtworks.xstream.io.xml.QNameMap:javax.xml.namespace.QName getQName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:boolean getFeature(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:java.lang.Object getProperty(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String decodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTracker:java.lang.String peekElement(int)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:java.lang.Object lookupId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:java.lang.Object get(java.lang.String)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class box(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class unbox(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class primitiveType(java.lang.String)",
            "com.thoughtworks.xstream.core.util.Primitives:char representingChar(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:void <init>(java.io.InputStream)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String aliasForAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String attributeForAlias(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:java.lang.String aliasForSystemAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Class defaultImplementationOf(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:com.thoughtworks.xstream.converters.Converter getConverter()",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:com.thoughtworks.xstream.converters.Converter getConverter()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.MapBackedDataHolder:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object get(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.Class getItemTypeForItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass access$000(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String aliasForAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String attributeForAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String attributeForAlias(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:java.lang.String aliasForSystemAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForSystemAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Class defaultImplementationOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object createCollection(java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class defaultImplementationOf(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processLocalConverterAnnotation(java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlArrayList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(int)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(int)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void flushStartTag()",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.Object getChild(int)",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttribute(int)",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.Object getChild(int)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.Object getChild(int)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttribute(int)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:com.thoughtworks.xstream.io.xml.xppdom.XppDom getConfiguration()",
            "com.thoughtworks.xstream.io.xml.DomReader:java.lang.Object getChild(int)",
            "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object first()",
            "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object last()",
            "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.List hierarchyFor(java.lang.Class)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void endNode()",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void removeId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void associateId(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void removeId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:int size()"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void removeId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void cleanup()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:void <init>(java.lang.Class,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.Object readResolve()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator fieldsFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator propertiesFor(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object getValue()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache:boolean containsValue(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache:int size()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set entrySet()"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache$1:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:boolean isEquals(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.io.ObjectInputStream$GetField readFields()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void defaultReadObject()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.Object readObjectOverride()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:boolean readBoolean()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:byte readByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedByte()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readInt()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:char readChar()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:float readFloat()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:double readDouble()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:long readLong()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:short readShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int readUnsignedShort()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.lang.String readUTF()",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void readFully(byte[],int,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:int read(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveDown()",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveUp()",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache$4$1:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object readResolve()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void <init>(com.thoughtworks.xstream.converters.reflection.FieldKeySorter)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.Object readResolve()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:void registerFieldOrder(java.lang.Class,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.DomReader:void reassignCurrentElement(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.PresortedSet:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:void put(long,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:com.thoughtworks.xstream.io.binary.Token readToken()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void setAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:java.lang.Object createNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void setFeature(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void configureXMLReader()"
        ]
    },
    "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void associateId(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void replace(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void registerImplicit(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,byte)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,char)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,double)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,float)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,long)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,short)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,boolean)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Primitives:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class box(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class unbox(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:boolean isBoxed(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:java.lang.Class primitiveType(java.lang.String)",
            "com.thoughtworks.xstream.core.util.Primitives:char representingChar(java.lang.Class)",
            "com.thoughtworks.xstream.core.util.Primitives:void <clinit>()",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String arrayType(int,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String boxedTypeName(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void <init>()",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void init()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:void registerFieldOrder(java.lang.Class,java.lang.String[])",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:void put(long,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void setAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setFeature(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setProperty(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void associateId(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.Primitives:void <clinit>()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void addPackageAlias(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addTypeAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:void addAliasFor(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaultImplementation(java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void ensureCache(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.MapBackedDataHolder:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void addPackageAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void aliasPackage(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAlias(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAttributeAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)",
            "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addTypeAlias(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasTypeAnnotation(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void aliasType(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processFieldAliasAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.XStream:void aliasField(java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:void addAliasFor(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void aliasSystemAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaultImplementation(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaults()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)",
            "com.thoughtworks.xstream.XStream:void addDefaultImplementation(java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.LocalConversionMapper:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processLocalConverterAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.XStream:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void ensureCache(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlArrayList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.XmlSet:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:void <init>(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void reassignCurrentElement(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveUp()",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void <init>()",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void init()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:long getFieldOffset(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:void registerFieldOrder(java.lang.Class,java.lang.String[])",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.ConversionException:void add(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:void put(long,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void setAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)",
            "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setFeature(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setProperty(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.io.path.PathTracker:void pushElement(java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void associateId(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.Primitives:void <clinit>()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:java.util.Map getHeader(java.io.PushbackInputStream[])",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void addPackageAlias(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addTypeAlias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:void addAliasFor(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaultImplementation(java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void ensureCache(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callReadResolve(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callWriteReplace(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:boolean supportsReadObject(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:boolean supportsWriteObject(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.TextAttributeConverter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:boolean fieldDefinedInClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:boolean fieldDefinedInClass(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator fieldsFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator serializableFieldsFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void writeProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:boolean propertyDefinedInClass(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:boolean propertyWriteable(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator propertiesFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.Throwable)",
            "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.String,java.lang.Throwable)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2:boolean add(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.UUIDConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.String getName(java.text.AttributedCharacterIterator$Attribute)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToStringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object createCollection(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.Throwable)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.XStreamer:java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void registerImplicit(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compare(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String pullElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void move()",
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String encodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:java.lang.String escapeName(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.String decodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:java.lang.String unescapeName(java.lang.String)",
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.XppReader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getAttributeName(int)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String decodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:java.lang.String decodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXmlReader:java.lang.String unescapeXmlName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String peekNextChild()",
            "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:java.lang.Object getReferenceKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XppReader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XomWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.NameCoderWrapper:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeNode(java.lang.String)",
            "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:java.lang.String encodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXmlReader:java.lang.String escapeXmlName(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractWriter:java.lang.String encodeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:java.lang.String escapeXmlName(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XomWriter:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.DomWriter:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:java.lang.Object createNode(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void startNode(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingReader:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTracker:java.lang.String peekElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.path.PathTracker:com.thoughtworks.xstream.io.path.Path getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:com.thoughtworks.xstream.io.path.Path currentPath()",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:java.lang.Object getReferenceKey(java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.lang.Object lookupReference(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:byte get(java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:char get(java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:double get(java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:float get(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:int get(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:long get(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:short get(java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:boolean get(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:java.lang.Object get(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[])"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.XStream:void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class lookupType(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String arrayType(int,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.Class realClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ThrowableConverter:com.thoughtworks.xstream.converters.Converter getConverter()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:com.thoughtworks.xstream.converters.Converter getConverter()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:boolean containsKey(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object get(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object get(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.Class getItemTypeForItemFieldName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.Class getItemTypeForItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass access$000(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.Class getItemTypeForItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void write(java.io.ObjectOutput)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeObjectOverride(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeBoolean(boolean)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeByte(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeInt(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChar(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeDouble(double)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFloat(float)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeLong(long)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeShort(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[])",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChars(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeUTF(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void defaultWriteObject()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void write(java.io.ObjectOutput)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeObjectOverride(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeBoolean(boolean)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeByte(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeInt(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChar(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeDouble(double)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFloat(float)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeLong(long)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeShort(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[])",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChars(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeUTF(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.CGLIBMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DynamicProxyMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.CGLIBMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.DynamicProxyMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.mapper.CachingMapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String aliasForAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:java.lang.String aliasForSystemAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String attributeForAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String attributeForAlias(java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeAliasingMapper:java.lang.String attributeForAlias(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForSystemAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String aliasForSystemAttribute(java.lang.String)",
            "com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:java.lang.String aliasForSystemAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object createCollection(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:java.lang.Object createCollection(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:java.lang.Object createCollection(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class defaultImplementationOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object createCollection(java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class defaultImplementationOf(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Class defaultImplementationOf(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.Class defaultImplementationOf(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processLocalConverterAnnotation(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <init>()",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void add(java.lang.ClassLoader)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttributeName(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.Object getChild(int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void flushStartTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void endNode()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.Object getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.Object getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.Object getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:com.thoughtworks.xstream.io.xml.xppdom.XppDom getConfiguration()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomReader:java.lang.Object getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object first()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object last()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.List hierarchyFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.ConversionException:void set(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void removeId(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:void cleanup()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ObjectIdDictionary:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:void <init>(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.WeakCache:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:int size()",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:int size()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.ObjectIdDictionary:int size()",
            "com.thoughtworks.xstream.core.util.WeakCache:int size()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set entrySet()",
            "com.thoughtworks.xstream.mapper.EnumMapper:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator fieldsFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator propertiesFor(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache$1:java.lang.Object visit(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:boolean isEquals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:java.io.ObjectInputStream$GetField readFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void defaultReadObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.ReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void <init>(com.thoughtworks.xstream.converters.reflection.FieldKeySorter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void <init>()",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.InputStream,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.QNameMap:void registerMapping(javax.xml.namespace.QName,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void configureXMLReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void setXStream(com.thoughtworks.xstream.XStream)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void setSourceAsList(java.util.List)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void createXMLReader(org.xml.sax.XMLReader)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void replace(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void registerImplicit(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void put(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.Primitives:boolean isBoxed(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String boxedTypeName(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String boxedTypeName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String serializedClass(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void aliasPackage(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.ClassAliasingMapper:void addClassAttributeAlias(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void aliasDynamically(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasTypeAnnotation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void aliasType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupAliases()"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processFieldAliasAnnotation(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void aliasField(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void aliasSystemAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addDefaultImplementation(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupDefaultImplementations()",
            "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addCompletionCallback(java.lang.Runnable,int)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void ignoreUnknownElements(java.util.regex.Pattern)"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processOmitFieldAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.XStream:void omitField(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAsAttributeAnnotation(java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void addImmutableType(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.ClassLoader,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.JVM)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAnnotations(java.lang.Class[])",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAnnotations(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:void <init>(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element)",
            "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>()",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,org.jdom2.JDOMFactory)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void endNode()",
            "com.thoughtworks.xstream.io.StatefulWriter:void endNode()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:void <init>(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:java.util.Map getHeader(java.io.PushbackInputStream[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:void <init>(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callReadResolve(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callWriteReplace(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:boolean supportsReadObject(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:boolean isSerializable(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:boolean supportsWriteObject(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:boolean isSerializable(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.TextAttributeConverter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.FontConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:boolean fieldDefinedInClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:boolean fieldDefinedInClass(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Iterator serializableFieldsFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:void writeProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:boolean propertyDefinedInClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:boolean propertyWriteable(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.URIConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.basic.URLConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.ObjectAccessException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.mapper.CannotResolveClassException:void <init>(java.lang.String,java.lang.Throwable)",
            "com.thoughtworks.xstream.XStreamException:void <init>()",
            "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.Throwable)",
            "com.thoughtworks.xstream.XStream$InitializationException:void <init>(java.lang.String,java.lang.Throwable)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.UUIDConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.String getName(java.text.AttributedCharacterIterator$Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.String toString(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ToStringConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void convertAnother(java.lang.Object)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:void move()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void moveDown()",
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void moveUp()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.path.PathTrackingWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:java.lang.String escapeName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:java.lang.String unescapeName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlReader:java.lang.String unescapeXmlName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String getNodeName()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:java.lang.Object getReferenceKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void handleCheckedStateTransition(int,java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlReader:java.lang.String escapeXmlName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:java.lang.String escapeXmlName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:java.lang.Object createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:void <init>(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:com.thoughtworks.xstream.io.path.Path currentPath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:java.lang.Object getCurrentReferenceKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper:com.thoughtworks.xstream.mapper.Mapper createEnumMapper(com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider(com.thoughtworks.xstream.converters.reflection.FieldDictionary)",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitCollectionAnnotation(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitAnnotation(java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitAnnotation(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void addImplicitMap(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class lookupType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:java.lang.Object get(java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object get(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void write(java.io.ObjectOutput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeObjectOverride(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeBoolean(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeByte(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeId(java.io.DataOutput,long,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeInt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeId(java.io.DataOutput,long,byte)",
            "com.thoughtworks.xstream.io.binary.Token:void writeString(java.io.DataOutput,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeDouble(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFloat(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeLong(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeId(java.io.DataOutput,long,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeShort(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeId(java.io.DataOutput,long,byte)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeString(java.io.DataOutput,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChars(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeUTF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token:void writeString(java.io.DataOutput,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void defaultWriteObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.ArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.mapper.CGLIBMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.EnumMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ArrayMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DynamicProxyMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String serializedClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.mapper.CGLIBMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.DynamicProxyMapper:java.lang.Class realClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaClassConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class realClass(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.OuterClassMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.OuterClassMapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.EnumMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.LocalConversionMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:java.lang.Object createCollection(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:java.lang.Object createCollection(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.MapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.Class defaultImplementationOf(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:java.lang.Object createCollection(java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.Class defaultImplementationOf(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.core.ClassLoaderReference:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader:void add(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(int)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.Object getChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void moveDown()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttributeName(int)",
            "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()"
        ]
    },
    "com.thoughtworks.xstream.io.AttributeNameIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.String joinEnumValues(java.util.EnumSet)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState$1:java.lang.Object next()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:java.lang.Object next()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.util.Set entrySet()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader$1:boolean addAll(java.util.Collection)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.naming.StaticNameCoder:void <init>(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.List hierarchyFor(java.lang.Class)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDomReader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDomReader:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.DomReader:int getChildCount()",
            "com.thoughtworks.xstream.core.util.PresortedSet:int size()",
            "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object last()",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.List hierarchyFor(java.lang.Class)",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDomReader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDomReader:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.DomReader:int getChildCount()",
            "com.thoughtworks.xstream.core.util.PresortedSet:int size()",
            "com.thoughtworks.xstream.core.util.PresortedSet:java.lang.Object last()",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.EnumMapper:void flushCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.WeakCache$1:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:boolean isEquals(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:boolean equals(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.MapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.annotations.AnnotationProvider)",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void <init>()",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void setXStream(com.thoughtworks.xstream.XStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.lang.Object,com.thoughtworks.xstream.XStream)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.util.List,com.thoughtworks.xstream.XStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void setSourceAsList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.util.List)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.util.List,com.thoughtworks.xstream.XStream)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void setSource(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void createXMLReader(org.xml.sax.XMLReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void setXMLReader(org.xml.sax.XMLReader)",
            "com.thoughtworks.xstream.io.xml.TraxSource:org.xml.sax.XMLReader getXMLReader()"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void put(java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:void put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void setupAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void aliasDynamically(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupAliases()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapper()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void setupDefaultImplementations()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:void addCompletionCallback(java.lang.Runnable,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void registerValidation(java.io.ObjectInputValidation,int)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void ignoreUnknownElements(java.util.regex.Pattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void ignoreUnknownElements()",
            "com.thoughtworks.xstream.XStream:void ignoreUnknownElements(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processOmitFieldAnnotation(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void omitField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAsAttributeAnnotation(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImmutableType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupImmutableTypes()",
            "com.thoughtworks.xstream.XStream:void addImmutableTypeDynamically(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.PrioritizedList:void add(java.lang.Object,int)",
            "com.thoughtworks.xstream.core.util.WeakCache$3:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.WeakCache$4:java.lang.Object visit(java.lang.Object)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void addFieldsToIgnore(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.ImmutableTypesMapper:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper$1:boolean add(java.lang.reflect.Type)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.ClassLoader,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.JVM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAnnotations(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class[])"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAnnotations(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String realMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.Class defaultImplementationOf(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.String joinEnumValues(java.util.EnumSet)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState$1:java.lang.Object next()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:java.lang.Object next()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.util.Set entrySet()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader$1:boolean addAll(java.util.Collection)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory)",
            "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XomWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,org.jdom.JDOMFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory)",
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,org.jdom2.JDOMFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.JDOMFactory)",
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.JDOMFactory,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.ColorConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.path.PathTrackingWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.XStream$1:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom)",
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element)",
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document)",
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element)",
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Element)",
            "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Document)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element)",
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:boolean isSerializable(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:boolean canConvert(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.FontConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.FontConverter:void <init>()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void setupConverters()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AttributeMapper:void addAttributeFor(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.URIConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.URLConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ObjectAccessException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callReadResolve(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:java.lang.Object callWriteReplace(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1:void run()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object instantiateUsingSerialization(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Map buildMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void writeProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.Object clone()",
            "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1:java.lang.Object newInstance()",
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)",
            "com.thoughtworks.xstream.core.util.Cloneables:java.lang.Object clone(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.Fields:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.core.util.Fields:java.lang.Object read(java.lang.reflect.Field,java.lang.Object)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLInputFactory createInputFactory()",
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()",
            "com.thoughtworks.xstream.io.xml.SjsxpDriver:javax.xml.stream.XMLInputFactory createInputFactory()",
            "com.thoughtworks.xstream.io.xml.SjsxpDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()",
            "com.thoughtworks.xstream.io.xml.XppReader:org.xmlpull.v1.XmlPullParser createParser()"
        ]
    },
    "com.thoughtworks.xstream.mapper.CannotResolveClassException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamException:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.ObjectAccessException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.mapper.CannotResolveClassException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.XStream$InitializationException:void <init>(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStreamException:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.Throwable)"
        ]
    },
    "com.thoughtworks.xstream.XStream$InitializationException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.InitializationException:void <init>(java.lang.String,java.lang.Throwable)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:void convertAnother(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:void moveDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveDown()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:void moveUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:java.lang.Object readFromStream()",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.SingletonMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:void moveUp()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:boolean hasMoreChildren()",
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void move()",
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String getValue()",
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker)",
            "com.thoughtworks.xstream.io.path.PathTrackingReader:void moveDown()",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getNodeName()",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void handleCheckedStateTransition(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void endNode()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper:com.thoughtworks.xstream.mapper.Mapper createEnumMapper(com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider(com.thoughtworks.xstream.converters.reflection.FieldDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <clinit>()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void validateFieldAccess(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:boolean canConvert(java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void <clinit>()",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLInputFactory createInputFactory()",
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <clinit>()",
            "com.thoughtworks.xstream.core.JVM:float getMajorJavaVersion()",
            "com.thoughtworks.xstream.core.JVM:boolean is14()",
            "com.thoughtworks.xstream.core.JVM:boolean is15()",
            "com.thoughtworks.xstream.core.JVM:boolean is16()",
            "com.thoughtworks.xstream.core.JVM:boolean is17()",
            "com.thoughtworks.xstream.core.JVM:boolean is18()",
            "com.thoughtworks.xstream.core.JVM:boolean isIBM()",
            "com.thoughtworks.xstream.core.JVM:boolean isAndroid()",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClassForName(java.lang.String)",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClass(java.lang.String,boolean)",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider(com.thoughtworks.xstream.converters.reflection.FieldDictionary)",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxInputFactory()",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxOutputFactory()",
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:boolean canUseSun14ReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:boolean isAWTAvailable()",
            "com.thoughtworks.xstream.core.JVM:boolean supportsAWT()",
            "com.thoughtworks.xstream.core.JVM:boolean isSwingAvailable()",
            "com.thoughtworks.xstream.core.JVM:boolean supportsSwing()",
            "com.thoughtworks.xstream.core.JVM:boolean isSQLAvailable()",
            "com.thoughtworks.xstream.core.JVM:boolean supportsSQL()",
            "com.thoughtworks.xstream.core.JVM:boolean hasOptimizedTreeSetAddAll()",
            "com.thoughtworks.xstream.core.JVM:boolean hasOptimizedTreeMapPutAll()",
            "com.thoughtworks.xstream.core.JVM:boolean canParseUTCDateFormat()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterRegistry,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)",
            "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapper()",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void aliasDynamically(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void setupImmutableTypes()",
            "com.thoughtworks.xstream.XStream:void addImmutableTypeDynamically(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitAnnotation(java.lang.reflect.Field)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitCollectionAnnotation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitMap(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.Token:void writeId(java.io.DataOutput,long,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void writeTo(java.io.DataOutput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$StartNode:void writeTo(java.io.DataOutput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Attribute:void writeTo(java.io.DataOutput,byte)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token:void writeString(java.io.DataOutput,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void writeTo(java.io.DataOutput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Attribute:void writeTo(java.io.DataOutput,byte)",
            "com.thoughtworks.xstream.io.binary.Token$Value:void writeTo(java.io.DataOutput,byte)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void write(com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)"
        ]
    },
    "com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.OuterClassMapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.XmlFriendlyMapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.OuterClassMapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.AnnotationMapper:java.lang.String realMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String realMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.MapperWrapper:com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.ClassLoaderReference:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>()",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.String joinEnumValues(java.util.EnumSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.String joinEnumValues(java.util.EnumSet)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState$1:java.lang.Object next()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:java.lang.Object next()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.util.Set entrySet()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader$1:boolean addAll(java.util.Collection)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttribute(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.Map extractStringMap(java.lang.Class)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.String joinEnumValues(java.util.EnumSet)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.util.Iterator serializablePropertiesFor(java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState$1:java.lang.Object next()",
            "com.thoughtworks.xstream.io.binary.ReaderDepthState:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:java.lang.Object next()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Collection values()",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.util.Set entrySet()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader$1:boolean addAll(java.util.Collection)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void addInternal(java.lang.ClassLoader)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.FieldAliasingMapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processTypes(java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void addParametrizedTypes(java.lang.reflect.Type,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void flushCache()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.ConversionException:java.util.Iterator keys()",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String[] getAttributeNames()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:java.util.Iterator keys()",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()"
        ]
    },
    "com.thoughtworks.xstream.core.util.OrderRetainingMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.naming.StaticNameCoder:java.util.Map invertMap(java.util.Map)",
            "com.thoughtworks.xstream.core.util.PresortedMap:void putAll(java.util.Map)",
            "com.thoughtworks.xstream.core.util.WeakCache:java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader$1:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)",
            "com.thoughtworks.xstream.core.util.PresortedSet:boolean addAll(java.util.Collection)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ClassLoaderReference:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.mapper.FieldAliasingMapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:boolean shouldVisit(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.ReaderDepthState:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:int getAttributeCount()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:int getChildCount()",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()",
            "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()",
            "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.util.Map buildMap(java.lang.Class,boolean)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.annotations.AnnotationProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.core.ClassLoaderReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppFactory:com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.lang.Object,com.thoughtworks.xstream.XStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.util.List,com.thoughtworks.xstream.XStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void setSource(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.lang.Object)",
            "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.lang.Object,com.thoughtworks.xstream.XStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void setXMLReader(org.xml.sax.XMLReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:org.xml.sax.XMLReader getXMLReader()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapper()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[])",
            "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[])",
            "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void registerValidation(java.io.ObjectInputValidation,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void registerValidation(java.io.ObjectInputValidation,int)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void ignoreUnknownElements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void ignoreUnknownElements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void setupImmutableTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImmutableTypeDynamically(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupImmutableTypes()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.annotations.Annotations:void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[])",
            "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>(org.dom4j.DocumentFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.JDOMFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>(org.jdom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomWriter:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.JDOMFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>(org.jdom2.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:void <init>(com.thoughtworks.xstream.io.xml.xppdom.XppDom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Reader:void <init>(org.jdom2.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomReader:void <init>(nu.xom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomReader:void <init>(org.jdom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Element,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:boolean canConvert(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.FontConverter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.BeanProvider:java.lang.Object newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.Cloneables:java.lang.Object clone(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1:java.lang.Object newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.Pool:java.lang.Object fetchFromPool()"
        ]
    },
    "com.thoughtworks.xstream.core.util.Cloneables:java.lang.Object clone(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.Cloneables:java.lang.Object cloneIfPossible(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Fields:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Fields:java.lang.Object read(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:void ensureCache(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLInputFactory createInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLInputFactory getInputFactory()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLOutputFactory getOutputFactory()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SjsxpDriver:javax.xml.stream.XMLInputFactory createInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLInputFactory getInputFactory()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SjsxpDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLOutputFactory getOutputFactory()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:org.xmlpull.v1.XmlPullParser createParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ObjectAccessException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.MissingFieldException:void <init>(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:java.lang.Object newInstance(java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void validateFieldAccess(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.core.util.DependencyInjectionFactory:java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet)"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:void <init>(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:boolean add(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:int accept(java.lang.reflect.Method)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumToStringConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:void <init>(java.lang.String)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:int compare(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token contructToken(byte)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:java.lang.String get(long)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveDown()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void moveUp()",
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(java.lang.String,boolean)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.mapper.CannotResolveClassException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.DefaultMapper:java.lang.Class realClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream$InitializationException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.InitializationException:void <init>(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void flush()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void close()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void write(com.thoughtworks.xstream.io.binary.Token)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:com.thoughtworks.xstream.io.binary.Token readToken()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void close()",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void flush()",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void close()",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.StaxReader:int pullNextEvent()",
            "com.thoughtworks.xstream.io.xml.StaxReader:void close()",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void flush()",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void close()",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource)",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.XppReader:int pullNextEvent()",
            "com.thoughtworks.xstream.io.xml.XppReader:void close()",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.io.StatefulWriter:void startNodeCommon()",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void endNode()",
            "com.thoughtworks.xstream.io.StatefulWriter:void checkClosed()",
            "com.thoughtworks.xstream.core.util.QuickWriter:void flush()",
            "com.thoughtworks.xstream.core.util.QuickWriter:void close()",
            "com.thoughtworks.xstream.core.util.QuickWriter:void raw(char[])",
            "com.thoughtworks.xstream.core.util.QuickWriter:void raw(char)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:void writeFile(java.io.File,java.lang.Object)",
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object readFile(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.InitializationException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[])",
            "com.thoughtworks.xstream.XStream:void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader)",
            "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader)",
            "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:boolean hasMoreChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:boolean hasMoreChildren()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getValue()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.lang.String peekNextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String peekNextChild()"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void startNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.core.ReferenceByIdMarshaller:void fireValidReference(java.lang.Object)",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.util.TimeZone)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(boolean)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],boolean)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],java.util.TimeZone,boolean)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <clinit>()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void validateFieldAccess(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)",
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CollectionConverter:boolean canConvert(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void <clinit>()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.core.ClassLoaderReference:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:float getMajorJavaVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:void <clinit>()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean is14()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:boolean canConvert(java.lang.Class)",
            "com.thoughtworks.xstream.core.JVM:boolean canUseSun14ReflectionProvider()",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void setupImmutableTypes()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean is15()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void validateFieldAccess(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)",
            "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapper()",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean is16()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxInputFactory()",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxOutputFactory()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean is17()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <clinit>()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean is18()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:boolean isIBM()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxInputFactory()",
            "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxOutputFactory()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean isAndroid()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:float getMajorJavaVersion()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClassForName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void aliasDynamically(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void addImmutableTypeDynamically(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:java.lang.Class loadClass(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLInputFactory createInputFactory()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:java.lang.Class getStaxOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StandardStaxDriver:javax.xml.stream.XMLOutputFactory createOutputFactory()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean canUseSun14ReflectionProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean isAWTAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void setupConverters()",
            "com.thoughtworks.xstream.XStream:void setupImmutableTypes()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean supportsAWT()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:boolean isSwingAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean supportsSwing()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:boolean isSQLAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])",
            "com.thoughtworks.xstream.XStream:void setupAliases()",
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean supportsSQL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.JVM:boolean hasOptimizedTreeSetAddAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:void <clinit>()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean hasOptimizedTreeMapPutAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:boolean canParseUTCDateFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <clinit>()",
            "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.core.JVM:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.Token$MapIdToValue:void writeTo(java.io.DataOutput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$StartNode:void writeTo(java.io.DataOutput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$Attribute:void writeTo(java.io.DataOutput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$Value:void writeTo(java.io.DataOutput,byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void write(com.thoughtworks.xstream.io.binary.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void endNode()",
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void access$100(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.XStream$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void parse()",
            "com.thoughtworks.xstream.persistence.FileStreamStrategy:void <init>(java.io.File)",
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:void <init>(java.io.File)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumMapConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getAttribute(java.lang.String)",
            "com.thoughtworks.xstream.core.util.HierarchicalStreams:java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:java.lang.Object getCurrentReferenceKey()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void flushCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void flushCache()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.converters.ConversionException:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.ConversionException:java.lang.String getMessage()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String[] getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttribute(int)",
            "com.thoughtworks.xstream.io.xml.XppDomReader:int getAttributeCount()",
            "com.thoughtworks.xstream.io.xml.XppDomReader:java.lang.String getAttributeName(int)"
        ]
    },
    "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:void flushCache()",
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:java.util.Map sort(java.lang.Class,java.util.Map)",
            "com.thoughtworks.xstream.converters.ConversionException:java.util.Iterator keys()",
            "com.thoughtworks.xstream.io.xml.xppdom.XppDom:java.lang.String[] getAttributeNames()",
            "com.thoughtworks.xstream.core.util.WeakCache:java.util.Set keySet()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void registerConverter(com.thoughtworks.xstream.converters.Converter,int)",
            "com.thoughtworks.xstream.core.MapBackedDataHolder:java.util.Iterator keys()",
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.PackageAliasingMapper:void readObject(java.io.ObjectInputStream)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.String serializedClass(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.ClassAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:java.lang.Object readResolve()",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:java.lang.Object readResolve()"
        ]
    },
    "com.thoughtworks.xstream.core.MapBackedDataHolder:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:java.util.Iterator keys()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.util.Iterator keys()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.PresortedSet:void <init>(java.util.Comparator,java.util.Collection)",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()"
        ]
    },
    "com.thoughtworks.xstream.core.util.ClassLoaderReference:java.lang.Class loadClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ClassLoaderReference:java.lang.Class loadClass(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CompositeClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:boolean shouldVisit(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.BeanProvider:void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor)"
        ]
    },
    "com.thoughtworks.xstream.mapper.MapperWrapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:boolean shouldVisit(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.mapper.MapperWrapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()",
            "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:boolean hasMoreChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:boolean hasMoreChildren()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()",
            "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)"
        ]
    },
    "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.util.Iterator getAttributeNames()",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:java.util.Iterator getAttributeNames()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)"
        ]
    },
    "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.TraxSource:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.Converter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void registerValidation(java.io.ObjectInputValidation,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.annotations.Annotations:void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Writer:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JReader:void <init>(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomReader:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.core.util.Pool:java.lang.Object fetchFromPool()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.beans.PropertyEditor fetchFromPool()",
            "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.text.DateFormat fetchFromPool()"
        ]
    },
    "com.thoughtworks.xstream.core.util.Cloneables:java.lang.Object cloneIfPossible(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.AbstractWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLInputFactory getInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(javax.xml.transform.Source)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLOutputFactory getOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:boolean isRepairingNamespace()",
            "com.thoughtworks.xstream.io.xml.StaxDriver:void setRepairingNamespace(boolean)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.MissingFieldException:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.PropertyDictionary:java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:int compare(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token contructToken(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.Token$Formatter:com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.InitializationException:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:void addDefaultImplementation(java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processConverterAnnotations(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasAnnotation(java.lang.Class,java.util.Set)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAliasTypeAnnotation(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitCollectionAnnotation(java.lang.Class)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processFieldAliasAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processAsAttributeAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processImplicitAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processOmitFieldAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.mapper.AnnotationMapper:void processLocalConverterAnnotation(java.lang.reflect.Field)",
            "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void aliasType(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void aliasPackage(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void aliasField(java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void aliasAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void aliasSystemAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void addDefaultImplementation(java.lang.Class,java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void addImmutableType(java.lang.Class)",
            "com.thoughtworks.xstream.XStream:void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter)",
            "com.thoughtworks.xstream.XStream:void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void omitField(java.lang.Class,java.lang.String)",
            "com.thoughtworks.xstream.XStream:void ignoreUnknownElements(java.util.regex.Pattern)",
            "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class[])"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamReader:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:int pullNextEvent()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:int pullNextEvent()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void startNodeCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void startNode(java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void checkClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.StatefulWriter:void startNodeCommon()",
            "com.thoughtworks.xstream.io.StatefulWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.StatefulWriter:void endNode()",
            "com.thoughtworks.xstream.io.StatefulWriter:void flush()"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void flush()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void flush()",
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(java.lang.String)",
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(char)",
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(char[])"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void close()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void close()"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void raw(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(java.lang.String)",
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(char[])"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void raw(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.QuickWriter:void write(char)"
        ]
    },
    "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:void writeFile(java.io.File,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:com.thoughtworks.xstream.mapper.Mapper buildMapper()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:boolean hasMoreChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:java.util.Map readFieldsFromStream()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:void defaultReadObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CollectionConverter:void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.ArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:boolean hasMoreChildren()",
            "com.thoughtworks.xstream.XStream$2:java.lang.Object readFromStream()"
        ]
    },
    "com.thoughtworks.xstream.converters.enums.EnumConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.CharArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.converters.collections.BitSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.ThrowableConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.lang.String getValue()"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void startNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.AbstractWriter:void startNode(java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.io.WriterWrapper:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.converters.ConverterLookup,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(java.lang.Class,com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,boolean,boolean,com.thoughtworks.xstream.converters.ConverterLookup)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(boolean)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[])"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],java.util.TimeZone,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],java.util.TimeZone)",
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],boolean)"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void addImplicitArray(java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.binary.BinaryStreamWriter:void access$100(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:long getId(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream$1:void writeToStream(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:void write(java.io.ObjectOutput)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeObjectOverride(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeBoolean(boolean)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeByte(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeInt(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChar(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeDouble(double)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeFloat(float)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeLong(long)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeShort(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[])",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeChars(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void writeUTF(java.lang.String)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(int)",
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void write(byte[],int,int)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:void writeFile(java.io.File,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.lang.String toXML(java.lang.Object)",
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.persistence.FileStreamStrategy:void <init>(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:void <init>(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:void flushCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.FieldDictionary:void flushCache()",
            "com.thoughtworks.xstream.core.DefaultConverterLookup:void flushCache()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XppDomReader:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.ReaderWrapper:int getAttributeCount()",
            "com.thoughtworks.xstream.io.AttributeNameIterator:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader)"
        ]
    },
    "com.thoughtworks.xstream.core.TreeMarshaller:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:java.util.Iterator keys()",
            "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.util.Iterator keys()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.util.Iterator keys()"
        ]
    },
    "com.thoughtworks.xstream.core.TreeUnmarshaller:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:java.util.Iterator keys()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.util.Iterator keys()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:void <init>(java.util.Comparator,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.PresortedSet:void <init>(java.util.Comparator)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:java.util.Iterator getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.util.Iterator getAttributeNames()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:java.util.Iterator getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.util.Iterator getAttributeNames()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver)",
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader)"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.Reader)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.AbstractDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream)",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.InputStream,java.lang.Object)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.beans.PropertyEditor fetchFromPool()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.lang.String getAsText(java.lang.Object)",
            "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.lang.Object setAsText(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.text.DateFormat fetchFromPool()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.lang.String format(java.util.Date)",
            "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.util.Date parse(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.AbstractReader:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(int,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.AbstractWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:javax.xml.stream.XMLStreamReader createParser(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:boolean isRepairingNamespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:void setRepairingNamespace(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void flush()"
        ]
    },
    "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void flush()"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.io.StatefulWriter:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.QuickWriter:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.WriterWrapper:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()",
            "com.thoughtworks.xstream.io.StatefulWriter:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver$1:void close()",
            "com.thoughtworks.xstream.io.xml.StaxDriver$2:void close()",
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.XStream$2:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream$1:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.NullConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void writeFieldsToStream(java.util.Map)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void defaultWriteObject()",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter:void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void writeToStream(java.lang.Object)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)",
            "com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.TreeMapConverter:void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.MapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.PropertiesConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void endNode()",
            "com.thoughtworks.xstream.core.TreeMarshaller:void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:void flush()",
            "com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:void flush()",
            "com.thoughtworks.xstream.io.WriterWrapper:void flush()",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endOfLine()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addLabel(java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void startArray()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void nextElement()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void endArray()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void endObject()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void writeText(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void write(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void addAttribute(java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void finishTag()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void startObject()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addLabel(java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void writeText(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.QuickWriter:void write(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(java.lang.String,boolean)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endOfLine()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void writeNewLine()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void setupConverters()"
        ]
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.lang.String,java.lang.String[],java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:void <init>(java.util.TimeZone)"
        ]
    },
    "com.thoughtworks.xstream.XStream:java.lang.String toXML(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.TreeMarshaller:java.util.Iterator keys()",
            "com.thoughtworks.xstream.core.TreeUnmarshaller:java.util.Iterator keys()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:void <init>(java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.collections.TreeSetConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.core.util.PresortedSet:void <init>()",
            "com.thoughtworks.xstream.core.JVM:void <clinit>()"
        ]
    },
    "com.thoughtworks.xstream.io.ReaderWrapper:java.util.Iterator getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.io.ReaderWrapper:java.util.Iterator getAttributeNames()"
        ]
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.lang.String getAsText(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:java.lang.String toString(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:java.lang.Object setAsText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.lang.String format(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:java.lang.String toString(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:java.util.Date parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.DateConverter:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>()",
            "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentReader:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractReader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>()",
            "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:void <init>(java.lang.Object,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(int,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format,int)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(int)",
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.AbstractWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.basic.CharConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.enums.EnumSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.RegexPatternConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ColorConverter:void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.SubjectConverter:void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.converters.collections.CharArrayConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.collections.BitSetConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter)",
            "com.thoughtworks.xstream.io.WriterWrapper:void setValue(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStreamer:void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.StatefulWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.Dom4JDriver$1:void close()",
            "com.thoughtworks.xstream.io.WriterWrapper:void close()",
            "com.thoughtworks.xstream.XStream$1:void close()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver$2:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.ReaderWrapper:void close()",
            "com.thoughtworks.xstream.XStream$2:void close()",
            "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File,java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.core.util.CustomObjectInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver$1:void close()",
            "com.thoughtworks.xstream.io.xml.StaxDriver$2:void close()",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL)",
            "com.thoughtworks.xstream.XStreamer:java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.Dom4JDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.XStream$1:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.core.util.CustomObjectOutputStream:void flush()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endOfLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void finishTag()"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void addLabel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void startArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void endArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void endObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void writeText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void addLabel(java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void finishTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void setValue(java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void endNode()"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void startObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:int handleStateTransition(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void writeNewLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void startObject()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addLabel(java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void startArray()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void nextElement()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void endNewLine()"
        ]
    },
    "com.thoughtworks.xstream.core.util.PresortedSet:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.String toString(java.lang.Object)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.String getName(java.lang.Object)"
        ]
    },
    "com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.JavaFieldConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.FontConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)",
            "com.thoughtworks.xstream.converters.extended.JavaMethodConverter:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)",
            "com.thoughtworks.xstream.converters.SingleValueConverterWrapper:java.lang.Object fromString(java.lang.String)",
            "com.thoughtworks.xstream.persistence.FilePersistenceStrategy:java.lang.Object extractKey(java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractPullReader:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,org.xmlpull.v1.XmlPullParser,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlReader:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXmlWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[],java.lang.String,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)",
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.StaxDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void endNewLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void endArray()",
            "com.thoughtworks.xstream.io.json.JsonWriter:void endObject()"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractPullReader:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter)",
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,org.codehaus.jettison.mapped.MappedNamespaceConvention)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer,org.codehaus.jettison.mapped.MappedNamespaceConvention)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[],java.lang.String,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[],java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[])",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[],com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)",
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>()"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.json.JsonWriter$Format)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[],java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[])",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[],java.lang.String,int)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int)",
            "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.json.JsonWriter$Format)"
        ]
    },
    "com.thoughtworks.xstream.io.json.AbstractJsonWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,com.thoughtworks.xstream.io.naming.NameCoder,org.codehaus.jettison.mapped.MappedNamespaceConvention)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)",
            "com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,org.codehaus.jettison.mapped.MappedNamespaceConvention)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,org.codehaus.jettison.mapped.MappedNamespaceConvention)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer,org.codehaus.jettison.mapped.MappedNamespaceConvention)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[])",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.XomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.DomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.SaxWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.TraxSource:void createXMLReader(org.xml.sax.XMLReader)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,char[],java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,char[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.json.JsonWriter$Format)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JettisonStaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,org.codehaus.jettison.mapped.MappedNamespaceConvention)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,java.lang.String)",
            "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.naming.NameCoder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.AbstractXppDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,char[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,char[])",
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)",
            "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer)",
            "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,java.lang.String)",
            "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDom2Driver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.xml.JDomDriver:com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream)",
            "com.thoughtworks.xstream.XStream:java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String)"
        ]
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode buildImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGImageElementBridge:void rebuildImageNode()"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:void rebuildImageNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.CursorManager:org.apache.batik.ext.awt.image.renderable.Filter cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)",
            "org.apache.batik.bridge.MultiResGraphicsNode:org.apache.batik.gvt.GraphicsNode getGraphicsNode(int)",
            "org.apache.batik.bridge.SVGClipPathElementBridge:org.apache.batik.ext.awt.image.renderable.ClipRable createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGDocumentBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGFeImageElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeImageElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGGElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGGlyphElementBridge:org.apache.batik.gvt.font.Glyph createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)",
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)",
            "org.apache.batik.bridge.SVGMarkerElementBridge:org.apache.batik.gvt.Marker createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGMaskElementBridge:org.apache.batik.gvt.filter.Mask createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGPatternElementBridge:org.apache.batik.gvt.RootGraphicsNode extractLocalPatternContent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGSwitchElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGSwitchElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGSwitchElementBridge:void handleChildElementRemoved(org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGUseElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.svg12.BindableElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.svg12.BindableElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.svg12.XBLContentElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:void buildComposite(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.CursorManager:org.apache.batik.ext.awt.image.renderable.Filter cursorHrefToFilter(org.w3c.dom.Element,org.apache.batik.util.ParsedURL,java.awt.geom.Point2D)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertSVGCursorElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.MultiResGraphicsNode:org.apache.batik.gvt.GraphicsNode getGraphicsNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.MultiResGraphicsNode:void primitivePaint(java.awt.Graphics2D)"
        ]
    },
    "org.apache.batik.bridge.SVGClipPathElementBridge:org.apache.batik.ext.awt.image.renderable.ClipRable createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.ClipRable convertClipPath(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGDocumentBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGFeImageElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeImageElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createSVGFeImage(org.apache.batik.bridge.BridgeContext,java.awt.geom.Rectangle2D,org.w3c.dom.Element,boolean,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGGElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGGElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGSVGElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGGlyphElementBridge:org.apache.batik.gvt.font.Glyph createGlyph(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,int,float,org.apache.batik.gvt.font.GVTFontFace,org.apache.batik.gvt.text.TextPaintInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)",
            "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)",
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)",
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createBrokenImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGMarkerElementBridge:org.apache.batik.gvt.Marker createMarker(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.Marker convertMarker(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGMaskElementBridge:org.apache.batik.gvt.filter.Mask createMask(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.gvt.filter.Mask convertMask(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGPatternElementBridge:org.apache.batik.gvt.RootGraphicsNode extractLocalPatternContent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGPatternElementBridge:org.apache.batik.gvt.RootGraphicsNode extractPatternContent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGSwitchElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGSwitchElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGGElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGSwitchElementBridge:void handleChildElementRemoved(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleDOMNodeRemovedEvent(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.SVGUseElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGUseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.svg12.BindableElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.BindableElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.BindableElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.BindableElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.svg12.BindableElementBridge:void handleBindingEvent(org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.svg12.XBLContentElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.XBLContentElementBridge$ContentChangedListener:void contentSelectionChanged(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)",
            "org.apache.batik.bridge.svg12.XBLContentElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge:void handleElementAdded(org.apache.batik.gvt.CompositeGraphicsNode,org.w3c.dom.Node,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.GVTBuilder:void buildComposite(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertSVGCursorElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertSVGCursor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value)"
        ]
    },
    "org.apache.batik.bridge.MultiResGraphicsNode:void primitivePaint(java.awt.Graphics2D)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.ClipRable convertClipPath(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGClipPathElementBridge:org.apache.batik.ext.awt.image.renderable.ClipRable createClip(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGGElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGSVGElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph[] createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)"
        ]
    },
    "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GlyphLayout:void <init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)",
            "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])",
            "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,int[],java.text.CharacterIterator)",
            "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode buildImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createRasterImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.util.ParsedURL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createBrokenImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.Marker convertMarker(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertMarkers(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.CSSUtilities:org.apache.batik.gvt.filter.Mask convertMask(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGSVGElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGPatternElementBridge:org.apache.batik.gvt.RootGraphicsNode extractPatternContent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGPatternElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleDOMNodeRemovedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeRemovedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.svg12.BindableElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.svg12.BindableElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.BindableElementBridge:void handleBindingEvent(org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener:void bindingChanged(org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.XBLContentElementBridge$ContentChangedListener:void contentSelectionChanged(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager:void dispatchContentSelectionChangedEvent(org.apache.batik.anim.dom.XBLOMContentElement)"
        ]
    },
    "org.apache.batik.bridge.svg12.XBLContentElementBridge:org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertSVGCursor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertCursor(org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.SVGAElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGUseElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleGeometryChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleOtherAnimationChanged(java.lang.String)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.SVGUseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGImageElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph[] createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAltGlyphHandler:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,float,java.text.AttributedCharacterIterator)"
        ]
    },
    "org.apache.batik.bridge.GlyphLayout:void <init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextLayoutFactory:org.apache.batik.bridge.TextSpanLayout createTextLayout(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)",
            "org.apache.batik.bridge.FlowGlyphLayout:void <init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)"
        ]
    },
    "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,int[],java.text.CharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGGVTFont:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertMarkers(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createMarkerPainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.SVGSVGElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGPatternElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$DOMNodeRemovedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLBindingListener:void bindingChanged(org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void dispatchBindingChangedEvent(org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager:void dispatchContentSelectionChangedEvent(org.apache.batik.anim.dom.XBLOMContentElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager:boolean update(boolean,org.w3c.dom.Node)"
        ]
    },
    "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertCursor(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CSSUtilities:java.awt.Cursor convertCursor(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGCircleElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGEllipseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGImageElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGLineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPathElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPolygonElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPolylineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGRectElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGSVGElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGUseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleOtherAnimationChanged(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void otherAnimationChanged(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleOtherAnimationChanged(java.lang.String)",
            "org.apache.batik.bridge.SVGCircleElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGEllipseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGLineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPathElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPathElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGPolygonElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPolygonElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGPolylineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGPolylineElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGRectElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGImageElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.Filter convertFilter(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAltGlyphHandler:org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,float,java.text.AttributedCharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GlyphLayout:void <init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)"
        ]
    },
    "org.apache.batik.bridge.ConcreteTextLayoutFactory:org.apache.batik.bridge.TextSpanLayout createTextLayout(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.StrokingTextPainter$TextChunk getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)"
        ]
    },
    "org.apache.batik.bridge.FlowGlyphLayout:void <init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.FlowTextLayoutFactory:org.apache.batik.bridge.TextSpanLayout createTextLayout(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)"
        ]
    },
    "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createMarkerPainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:java.awt.Paint convertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:java.awt.Paint silentConvertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void dispatchBindingChangedEvent(org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void setXblShadowTree(org.apache.batik.anim.dom.BindableElement,org.apache.batik.anim.dom.XBLOMShadowTreeElement)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager:boolean update(boolean,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager:void update(boolean)",
            "org.apache.batik.bridge.svg12.ContentManager:boolean update(boolean,org.w3c.dom.Node)"
        ]
    },
    "org.apache.batik.bridge.CSSUtilities:java.awt.Cursor convertCursor(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMMouseOutEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.BridgeContext$DOMMouseOverEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.SVGUseElementBridge$CursorMouseOverListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGCircleElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGEllipseElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGLineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGPathElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGPolygonElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGPolylineElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGRectElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void otherAnimationChanged(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGPathElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGPolygonElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGPolylineElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:void handleCSSPropertyChanged(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.SVGPathElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGPolygonElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGPolylineElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.Filter convertFilter(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGSVGElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.StrokingTextPainter$TextChunk getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:java.util.List computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[],int[][])"
        ]
    },
    "org.apache.batik.bridge.FlowTextLayoutFactory:org.apache.batik.bridge.TextSpanLayout createTextLayout(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.StrokingTextPainter$TextChunk getTextChunk(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,int[],java.util.List,org.apache.batik.bridge.StrokingTextPainter$TextChunk)"
        ]
    },
    "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:void handleCSSPropertyChanged(int)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:java.awt.Paint convertPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertStrokePaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertFillPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGAnimationEngine$AnimatableColorValueFactory:org.apache.batik.anim.values.AnimatableValue createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)",
            "org.apache.batik.bridge.SVGAnimationEngine$AnimatablePaintValueFactory:org.apache.batik.anim.values.AnimatableValue createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:java.awt.Paint silentConvertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void setXblShadowTree(org.apache.batik.anim.dom.BindableElement,org.apache.batik.anim.dom.XBLOMShadowTreeElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void setActiveDefinition(org.apache.batik.anim.dom.BindableElement,org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager:void update(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager$ContentElementDOMAttrModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager$DOMAttrModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager$ShadowTreeNodeInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager$ShadowTreeSubtreeModifiedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.ContentManager:void <init>(org.apache.batik.anim.dom.XBLOMShadowTreeElement,org.apache.batik.dom.xbl.XBLManager)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$DOMMouseOutEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$DOMMouseOverEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGUseElementBridge$CursorMouseOverListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$CSSPropertiesChangedListener:void propertiesChanged(org.apache.batik.css.engine.CSSEngineEvent)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.util.List computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[],int[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:java.util.List computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[])"
        ]
    },
    "org.apache.batik.bridge.PaintServer:java.awt.Paint convertStrokePaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertFillAndStroke(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertStrokePainter(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGTextElementBridge:void setBaseTextPaintInfo(org.apache.batik.gvt.text.TextPaintInfo,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:java.awt.Paint convertFillPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertFillAndStroke(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGTextElementBridge:void setBaseTextPaintInfo(org.apache.batik.gvt.text.TextPaintInfo,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine$AnimatableColorValueFactory:org.apache.batik.anim.values.AnimatableValue createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationEngine$CSSValueFactory:org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine$AnimatablePaintValueFactory:org.apache.batik.anim.values.AnimatableValue createAnimatableValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationEngine$CSSValueFactory:org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void setActiveDefinition(org.apache.batik.anim.dom.BindableElement,org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void unbind(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void bind(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void rebind(java.lang.String,java.lang.String,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$ContentElementDOMAttrModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$DOMAttrModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$ShadowTreeNodeInsertedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager$ShadowTreeSubtreeModifiedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.ContentManager:void <init>(org.apache.batik.anim.dom.XBLOMShadowTreeElement,org.apache.batik.dom.xbl.XBLManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void setXblShadowTree(org.apache.batik.anim.dom.BindableElement,org.apache.batik.anim.dom.XBLOMShadowTreeElement)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.util.List computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.FlowTextPainter:java.util.List getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)",
            "org.apache.batik.bridge.StrokingTextPainter:java.util.List getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)"
        ]
    },
    "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getFilterSource(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertFillAndStroke(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.ShapePainter convertStrokePainter(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGLineElementBridge:org.apache.batik.gvt.ShapePainter createFillStrokePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void setBaseTextPaintInfo(org.apache.batik.gvt.text.TextPaintInfo,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void rebuildACI()",
            "org.apache.batik.bridge.SVGTextElementBridge:org.apache.batik.gvt.text.TextPaintInfo getTextPaintInfo(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine$CSSValueFactory:org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,org.apache.batik.css.engine.value.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationEngine$CSSValueFactory:org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)",
            "org.apache.batik.bridge.SVGAnimationEngine:org.apache.batik.anim.values.AnimatableValue getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void unbind(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void unbind(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void shadowTreeSelectedContentChanged(java.util.Set,java.util.Set)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void bind(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void startProcessing()",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void bind(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void setXblShadowTree(org.apache.batik.anim.dom.BindableElement,org.apache.batik.anim.dom.XBLOMShadowTreeElement)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void shadowTreeSelectedContentChanged(java.util.Set,java.util.Set)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void rebind(java.lang.String,java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DefNodeInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DefNodeRemovedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeDefinition(org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void rebind(java.lang.String,java.lang.String,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.FlowTextPainter:java.util.List getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:void paint(org.apache.batik.bridge.TextNode,java.awt.Graphics2D)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getOutline(org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.geom.Rectangle2D getBounds2D(org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.Mark hitTest(double,double,org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:int[] getSelected(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.util.List getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.StrokingTextPainter:void paint(org.apache.batik.bridge.TextNode,java.awt.Graphics2D)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getOutline(org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.geom.Rectangle2D getBounds2D(org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.Mark hitTest(double,double,org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.StrokingTextPainter:int[] getSelected(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)",
            "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)"
        ]
    },
    "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFeBlendElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeColorMatrixElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeComponentTransferElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeCompositeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeDiffuseLightingElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeDisplacementMapElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeGaussianBlurElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)",
            "org.apache.batik.bridge.SVGFeMorphologyElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeOffsetElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeSpecularLightingElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeTileElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeTurbulenceElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)"
        ]
    },
    "org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:org.apache.batik.ext.awt.image.renderable.Filter getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFeBlendElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeCompositeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)",
            "org.apache.batik.bridge.SVGFeDisplacementMapElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)"
        ]
    },
    "org.apache.batik.bridge.SVGShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGCircleElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)",
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createFillStrokePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)",
            "org.apache.batik.bridge.SVGEllipseElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)",
            "org.apache.batik.bridge.SVGRectElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.SVGLineElementBridge:org.apache.batik.gvt.ShapePainter createFillStrokePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$TRefBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge$TspanBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMSubtreeModifiedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleContentSelectionChangedEvent(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void rebuildACI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:org.apache.batik.gvt.text.TextPaintInfo getTextPaintInfo(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void rebuildACI()",
            "org.apache.batik.bridge.SVGTextElementBridge:void addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine$CSSValueFactory:org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationEngine:org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine:org.apache.batik.anim.values.AnimatableValue getUnderlyingCSSValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:org.apache.batik.anim.values.AnimatableValue getUnderlyingValue()"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void shadowTreeSelectedContentChanged(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager:void update(boolean)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$DocInsertedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void startProcessing()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.UpdateManager:void dispatchSVGLoadEvent(org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.ScriptingEnvironment)",
            "org.apache.batik.bridge.svg12.SVG12BridgeContext:org.apache.batik.bridge.BridgeContext createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$DefNodeInsertedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$DefNodeRemovedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$TemplateMutationListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void addDefinition(java.lang.String,java.lang.String,org.apache.batik.anim.dom.XBLOMDefinitionElement,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$RefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void startProcessing()",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addDefinitionRef(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImportedDefinitions(org.w3c.dom.Element,org.w3c.dom.Node)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeDefinition(org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocSubtreeListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportSubtreeListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void stopProcessing()",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeDefinitionRef(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeImport(org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:void paint(org.apache.batik.bridge.TextNode,java.awt.Graphics2D)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:void primitivePaint(java.awt.Graphics2D)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getOutline(org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BasicTextPainter:java.awt.geom.Rectangle2D getGeometryBounds(org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.TextNode:java.awt.Shape getOutline()"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.awt.geom.Rectangle2D getBounds2D(org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getPrimitiveBounds()"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:org.apache.batik.bridge.Mark hitTest(double,double,org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BasicTextPainter:org.apache.batik.bridge.Mark selectAt(double,double,org.apache.batik.bridge.TextNode)",
            "org.apache.batik.bridge.BasicTextPainter:org.apache.batik.bridge.Mark selectTo(double,double,org.apache.batik.bridge.Mark)"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:int[] getSelected(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:java.lang.Object getSelection()"
        ]
    },
    "org.apache.batik.bridge.StrokingTextPainter:java.awt.Shape getHighlightShape(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:java.awt.Shape getHighlightShape()"
        ]
    },
    "org.apache.batik.bridge.SVGFeBlendElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeColorMatrixElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeComponentTransferElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeCompositeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeDiffuseLightingElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeDisplacementMapElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeGaussianBlurElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeMergeElementBridge$SVGFeMergeNodeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFeMergeElementBridge:java.util.List extractFeMergeNode(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeMorphologyElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeOffsetElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeSpecularLightingElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeTileElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGFeTurbulenceElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGCircleElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createFillStrokePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGDecoratedShapeElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)"
        ]
    },
    "org.apache.batik.bridge.SVGEllipseElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGRectElementBridge:org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGShapeElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleGeometryChanged()",
            "org.apache.batik.bridge.SVGShapeElementBridge:void handleCSSPropertyChanged(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$TRefBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$TspanBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$AnimatedAttrListener:void animatedAttributeChanged(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimatedLiveAttributeValue)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMSubtreeModifiedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleContentSelectionChangedEvent(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener:void contentSelectionChanged(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$TRefBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge$TspanBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleDOMSubtreeModifiedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleAnimatedAttributeChanged(org.apache.batik.anim.dom.AnimatedLiveAttributeValue)",
            "org.apache.batik.bridge.SVGTextElementBridge:void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)",
            "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.svg12.SVG12TextElementBridge:void handleContentSelectionChangedEvent(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge$RegionChangeListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine:org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.anim.dom.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimateElementBridge:org.apache.batik.anim.values.AnimatableValue[] parseValues()",
            "org.apache.batik.bridge.SVGAnimationElementBridge:org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationElementBridge:org.apache.batik.anim.values.AnimatableValue getUnderlyingValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.UpdateManager:void dispatchSVGLoadEvent(org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.ScriptingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.UpdateManager:void dispatchSVGLoadEvent()"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12BridgeContext:org.apache.batik.bridge.BridgeContext createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext:org.w3c.dom.Node getReferencedNode(org.w3c.dom.Element,java.lang.String)",
            "org.apache.batik.bridge.SVGImageElementBridge:org.apache.batik.gvt.GraphicsNode createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$DefAttrListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportInsertedListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$RefAttrListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void addDefinitionRef(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$RefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void startProcessing()"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImportedDefinitions(org.w3c.dom.Element,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImport(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImportedDefinitions(org.w3c.dom.Element,org.w3c.dom.Node)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$DocSubtreeListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportSubtreeListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void stopProcessing()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeDefinitionRef(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocSubtreeListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$RefAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void stopProcessing()"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void removeImport(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocSubtreeListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void stopProcessing()"
        ]
    },
    "org.apache.batik.bridge.TextNode:void primitivePaint(java.awt.Graphics2D)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.BasicTextPainter:java.awt.geom.Rectangle2D getGeometryBounds(org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getGeometryBounds()"
        ]
    },
    "org.apache.batik.bridge.TextNode:java.awt.Shape getOutline()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getPrimitiveBounds()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:java.util.List getTextRuns(org.apache.batik.bridge.TextNode)"
        ]
    },
    "org.apache.batik.bridge.BasicTextPainter:org.apache.batik.bridge.Mark selectAt(double,double,org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:boolean selectAt(double,double)"
        ]
    },
    "org.apache.batik.bridge.BasicTextPainter:org.apache.batik.bridge.Mark selectTo(double,double,org.apache.batik.bridge.Mark)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:boolean selectTo(double,double)"
        ]
    },
    "org.apache.batik.bridge.TextNode:java.lang.Object getSelection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:java.lang.Object getSelection()"
        ]
    },
    "org.apache.batik.bridge.TextNode:java.awt.Shape getHighlightShape()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:void changeCompleted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void setSelection(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)",
            "org.apache.batik.bridge.ConcreteTextSelector:void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGFeMergeElementBridge:java.util.List extractFeMergeNode(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFeMergeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildBridgeUpdateHandler:void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMCharacterDataModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12BridgeContext$XBLContentListener:void contentSelectionChanged(org.apache.batik.bridge.svg12.ContentSelectionChangedEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.ContentManager:void dispatchContentSelectionChangedEvent(org.apache.batik.anim.dom.XBLOMContentElement)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge$RegionChangeListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)",
            "org.apache.batik.bridge.SVGTextElementBridge:void addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateElementBridge:org.apache.batik.anim.values.AnimatableValue[] parseValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimateColorElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)",
            "org.apache.batik.bridge.SVGAnimateElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationElementBridge:org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimateColorElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)",
            "org.apache.batik.bridge.SVGAnimateElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)",
            "org.apache.batik.bridge.SVGSetElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)"
        ]
    },
    "org.apache.batik.bridge.UpdateManager:void dispatchSVGLoadEvent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.BridgeContext:org.w3c.dom.Node getReferencedNode(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext:org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImport(org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager:void addImport(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.DefaultXBLManager$DocInsertedListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportAttrListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void startProcessing()"
        ]
    },
    "org.apache.batik.bridge.svg12.DefaultXBLManager$ImportAttrListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getGeometryBounds()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getSensitiveBounds()"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.util.List getTextRuns(org.apache.batik.bridge.TextNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Rectangle2D getExtentOfChar(org.w3c.dom.Element,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getStartPositionOfChar(org.w3c.dom.Element,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getEndPositionOfChar(org.w3c.dom.Element,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:float getRotationOfChar(org.w3c.dom.Element,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:float getSubStringLength(org.w3c.dom.Element,int,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:void selectSubString(org.w3c.dom.Element,int,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:int getCharNumAtPosition(org.w3c.dom.Element,float,float)"
        ]
    },
    "org.apache.batik.bridge.TextNode:boolean selectAt(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)"
        ]
    },
    "org.apache.batik.bridge.TextNode:boolean selectTo(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)"
        ]
    },
    "org.apache.batik.bridge.ConcreteTextSelector:java.lang.Object getSelection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:void changeCompleted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void setSelection(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)",
            "org.apache.batik.bridge.ConcreteTextSelector:void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:boolean isEmpty()"
        ]
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void changeCompleted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void setSelection(org.apache.batik.bridge.Mark,org.apache.batik.bridge.Mark)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void checkSelectGesture(org.apache.batik.gvt.event.GraphicsNodeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.ConcreteTextSelector:void mouseClicked(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void mouseDragged(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void mouseEntered(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void mouseExited(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void mousePressed(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)",
            "org.apache.batik.bridge.ConcreteTextSelector:void mouseReleased(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)"
        ]
    },
    "org.apache.batik.bridge.SVGFeMergeElementBridge:org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVG12TextElementBridge$DOMSubtreeModifiedEventListener:void handleEvent(org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVG12BridgeContext$EventListenerWrapper:void handleEvent(org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateColorElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()"
        ]
    },
    "org.apache.batik.bridge.SVGSetElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()"
        ]
    },
    "org.apache.batik.bridge.BridgeContext:org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractSVGGradientElementBridge:java.util.List extractStop(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.Filter convertFilter(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.ext.awt.image.renderable.ClipRable convertClipPath(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.CSSUtilities:org.apache.batik.gvt.filter.Mask convertMask(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.CursorManager:java.awt.Cursor convertSVGCursor(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value)",
            "org.apache.batik.bridge.FontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)",
            "org.apache.batik.bridge.PaintServer:org.apache.batik.gvt.Marker convertMarker(org.w3c.dom.Element,org.apache.batik.css.engine.value.Value,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph[] createAltGlyphArray(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)",
            "org.apache.batik.bridge.SVGAltGlyphElementBridge:org.apache.batik.gvt.font.Glyph getGlyph(org.apache.batik.bridge.BridgeContext,java.lang.String,org.w3c.dom.Element,float,java.text.AttributedCharacterIterator)",
            "org.apache.batik.bridge.SVGAnimateMotionElementBridge:org.apache.batik.ext.awt.geom.ExtendedGeneralPath parsePath()",
            "org.apache.batik.bridge.SVGAnimateMotionElementBridge:void initializeAnimation()",
            "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()",
            "org.apache.batik.bridge.SVGFilterElementBridge:org.apache.batik.ext.awt.image.renderable.Filter buildFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGPatternElementBridge:org.apache.batik.gvt.RootGraphicsNode extractPatternContent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)",
            "org.apache.batik.bridge.SVGTextPathElementBridge:org.apache.batik.gvt.text.TextPath createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGUseElementBridge:org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.svg12.DefaultXBLManager:void addDefinitionRef(org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)",
            "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:float extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:java.awt.Color extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.TextNode:java.awt.geom.Rectangle2D getSensitiveBounds()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Rectangle2D getExtentOfChar(org.w3c.dom.Element,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Rectangle2D getExtentOfChar(int)",
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Rectangle2D getExtentOfChar(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getStartPositionOfChar(org.w3c.dom.Element,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Point2D getStartPositionOfChar(int)",
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getStartPositionOfChar(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getEndPositionOfChar(org.w3c.dom.Element,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Point2D getEndPositionOfChar(int)",
            "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getEndPositionOfChar(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getRotationOfChar(org.w3c.dom.Element,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getRotationOfChar(int)",
            "org.apache.batik.bridge.SVGTextElementBridge:float getRotationOfChar(int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getSubStringLength(org.w3c.dom.Element,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getSubStringLength(int,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:float getSubStringLength(int,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:float getComputedTextLength(org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void selectSubString(org.w3c.dom.Element,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:void selectSubString(int,int)",
            "org.apache.batik.bridge.SVGTextElementBridge:void selectSubString(int,int)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:int getCharNumAtPosition(org.w3c.dom.Element,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:int getCharNumAtPosition(float,float)",
            "org.apache.batik.bridge.SVGTextElementBridge:int getCharNumAtPosition(float,float)"
        ]
    },
    "org.apache.batik.bridge.ConcreteTextSelector:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mouseClicked(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mouseDragged(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mouseEntered(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mouseExited(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mousePressed(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.ConcreteTextSelector:void mouseReleased(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:void handleElement(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGAnimationEngine:void start(long)"
        ]
    },
    "org.apache.batik.bridge.AbstractSVGGradientElementBridge:java.util.List extractStop(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractSVGGradientElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)"
        ]
    },
    "org.apache.batik.bridge.FontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext,org.apache.batik.util.ParsedURL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.FontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateMotionElementBridge:org.apache.batik.ext.awt.geom.ExtendedGeneralPath parsePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimateMotionElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateMotionElementBridge:void initializeAnimation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimationElementBridge:void handleElement(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGAnimationEngine:void start(long)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:java.text.AttributedString buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)"
        ]
    },
    "org.apache.batik.bridge.SVGTextPathElementBridge:org.apache.batik.gvt.text.TextPath createTextPath(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:float extractOpacity(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:java.awt.Color extractColor(org.w3c.dom.Element,float,org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Rectangle2D getExtentOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Rectangle2D getExtentOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Point2D getStartPositionOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getStartPositionOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:java.awt.geom.Point2D getEndPositionOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.awt.geom.Point2D getEndPositionOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getRotationOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getRotationOfChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getSubStringLength(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getSubStringLength(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getComputedTextLength(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getComputedTextLength()",
            "org.apache.batik.bridge.SVGTextElementBridge:float getComputedTextLength()"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:void selectSubString(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:void selectSubString(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:int getCharNumAtPosition(float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:int getCharNumAtPosition(float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGAnimationElementBridge:void handleElement(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)",
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.GVTBuilder:void handleGenericBridges(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimationEngine:void start(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BaseScriptingEnvironment:void dispatchSVGLoadEvent()"
        ]
    },
    "org.apache.batik.bridge.AbstractSVGGradientElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.FontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.CSSFontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)",
            "org.apache.batik.bridge.SVGFontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGAnimateMotionElementBridge:org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.anim.dom.AnimationTarget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGAnimateMotionElementBridge:void initializeAnimation()",
            "org.apache.batik.bridge.SVGAnimationElementBridge:void initializeAnimation()"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.text.AttributedString buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGSolidColorElementBridge:java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.PaintServer:java.awt.Paint convertURIPaint(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.css.engine.value.Value,float,org.apache.batik.bridge.BridgeContext)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:float getComputedTextLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.SVGTextElementBridge:float getComputedTextLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.batik.bridge.AbstractGraphicsNodeBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.BridgeContext$DOMNodeInsertedEventListener:void handleEvent(org.w3c.dom.events.Event)",
            "org.apache.batik.bridge.SVGGElementBridge:void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)"
        ]
    },
    "org.apache.batik.bridge.GVTBuilder:void handleGenericBridges(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.GVTBuilder:org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)",
            "org.apache.batik.bridge.GVTBuilder:void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)",
            "org.apache.batik.bridge.GVTBuilder:void handleGenericBridges(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.BaseScriptingEnvironment:void dispatchSVGLoadEvent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.UpdateManager:void dispatchSVGLoadEvent(org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.ScriptingEnvironment)",
            "org.apache.batik.bridge.svg12.SVG12BridgeContext:org.apache.batik.bridge.BridgeContext createSubBridgeContext(org.apache.batik.anim.dom.SVGOMDocument)"
        ]
    },
    "org.apache.batik.bridge.CSSFontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFontUtilities:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.SVGFontFace:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGFontUtilities:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.SVGFontUtilities:org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:java.util.List getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void computeLaidoutText(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.util.List getFontList(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:java.util.Map getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:org.apache.batik.gvt.flow.BlockInfo makeBlockInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.SVGTextElementBridge:java.util.Map getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.util.Map getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:org.apache.batik.gvt.flow.BlockInfo makeBlockInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.text.AttributedString gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)"
        ]
    },
    "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:java.util.Map getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.batik.bridge.SVGTextElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer)",
            "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge:void fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)"
        ]
    }
}
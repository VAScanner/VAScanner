{
    "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser create()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARP:void <init>()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void <init>()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:boolean isValid(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:void mainEh(java.lang.String[],org.xml.sax.ErrorHandler,org.apache.jena.rdfxml.xmlinput.ARPEventHandler)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:boolean isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple:void mainEh(java.lang.String[],org.xml.sax.ErrorHandler,org.apache.jena.rdfxml.xmlinput.ARPEventHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.NTriple:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_1(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_1(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createTypedLiteral(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:java.util.List parseNodeList()"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createLiteralLabel(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createTypedLiteral(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeIntNode(int)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeLongNode(long)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeDoubleNode(double)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NotDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:java.util.List parseNodeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.ClauseEntry parseClause()"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createLiteralLabel(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node makeFunctorNode(org.apache.jena.reasoner.rulesys.Functor)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode asObject(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeIntNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeLongNode(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeDoubleNode(double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean shouldFire(boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean shouldStillFire()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean shouldFire(boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.ClauseEntry parseClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Rule doParseRule(boolean)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:void <init>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralInteger(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDouble(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDecimal(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph:org.apache.jena.graph.Node fixupNode(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createStringLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createLangLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.SimpleSelector:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node makeFunctorNode(org.apache.jena.reasoner.rulesys.Functor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node makeFunctorNode(java.lang.String,org.apache.jena.graph.Node[])",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.graph.Node cloneNode(org.apache.jena.graph.Node,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode asObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(boolean)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(boolean)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(boolean)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void setCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean hasCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void removeCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void setCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:boolean hasCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void removeCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void setMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean hasMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void removeMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void setMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:boolean hasMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void removeMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void setMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean hasMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void removeMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void setMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:boolean hasMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void removeMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(long)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(long)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(long)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(long)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(char)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(char)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(char)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(char)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(float)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(float)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(float)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(float)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(double)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(double)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(double)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(double)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterState)",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void moveForward()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchRuleBody(int,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean shouldFire(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETETerminal:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean shouldStillFire()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:boolean fireOne()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.reasoner.ValidityReport validate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.reasoner.ValidityReport validate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Rule doParseRule(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.ClauseEntry parseClause()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Rule parseRule()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Triple convert(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.RDFNode readNode()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.InputStream,java.lang.String)",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.Reader)",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(org.apache.jena.ttl.turtle.parser.TurtleParserTokenManager)"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralInteger(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node NumericLiteral()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDouble(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node NumericLiteral()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDecimal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node NumericLiteral()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node RDFLiteral()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.graph.impl.CollectionGraph:org.apache.jena.graph.Node fixupNode(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createStringLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory$Interface:org.apache.jena.rdf.model.Literal createPlainLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createPlainLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createStringLiteral(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createLangLiteral(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createLangLiteral(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Node getGroundVersion(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Node getBinding(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Node getGroundVersion(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node makeFunctorNode(java.lang.String,org.apache.jena.graph.Node[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.graph.Node derefPossFunctor(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.graph.Node cloneNode(org.apache.jena.graph.Node,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.ClauseEntry cloneClause(org.apache.jena.reasoner.rulesys.ClauseEntry,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Functor cloneFunctor(org.apache.jena.reasoner.rulesys.Functor,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void setCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean hasCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void removeCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void setCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:boolean hasCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void removeCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void setMaxCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean hasMaxCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void removeMaxCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void setMaxCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:boolean hasMaxCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void removeMaxCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void setMinCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean hasMinCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void removeMinCardinalityQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void setMinCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:boolean hasMinCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void removeMinCardinality(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,long)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,float)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,double)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:void pump()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void pump()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void moveForward()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void moveForward()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:org.apache.jena.graph.Triple next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchRuleBody(int,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void init(boolean,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETETerminal:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:boolean fireOne()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void runAll()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Rule parseRule()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule parseRule(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)",
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(org.apache.jena.reasoner.rulesys.Rule$Parser)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Triple convert(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.RDFNode readNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.ParserTurtle:void parse(org.apache.jena.graph.Graph,java.lang.String,java.io.Reader)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(org.apache.jena.ttl.turtle.parser.TurtleParserTokenManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node NumericLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node RDFLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph:boolean tripleContained(org.apache.jena.graph.Triple,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Interface:org.apache.jena.rdf.model.Literal createPlainLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createPlainLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createStringLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Literal createLangLiteral(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Node getGroundVersion(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:org.apache.jena.graph.Node getArg(int,org.apache.jena.graph.Node[],org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean isGround(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node[] getBoundArgs(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.graph.Node cloneNode(org.apache.jena.graph.Node,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Node getGroundVersion(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:org.apache.jena.graph.Node getArg(int,org.apache.jena.graph.Node[],org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.reasoner.TriplePattern partInstantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean isGround(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node[] getBoundArgs(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.graph.Node cloneNode(org.apache.jena.graph.Node,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.graph.Node derefPossFunctor(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation:org.apache.jena.graph.Triple getResult()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.ClauseEntry cloneClause(org.apache.jena.reasoner.rulesys.ClauseEntry,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.ClauseEntry[] cloneClauseArray(org.apache.jena.reasoner.rulesys.ClauseEntry[],java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Functor cloneFunctor(org.apache.jena.reasoner.rulesys.Functor,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.ClauseEntry cloneClause(org.apache.jena.reasoner.rulesys.ClauseEntry,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.graph.Node cloneNode(org.apache.jena.graph.Node,java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:void pump()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void pump()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void init(boolean,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void runAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:boolean delete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule parseRule(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule parseRule(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(org.apache.jena.reasoner.rulesys.Rule$Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:java.util.List loadRules(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)",
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void readRDF()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.ParserTurtle:void parse(org.apache.jena.graph.Graph,java.lang.String,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.ParserTurtle:void parse(org.apache.jena.graph.Graph,java.lang.String,java.io.InputStream)",
            "org.apache.jena.ttl.turtle.TurtleReader:void readWorker(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node VarOrTerm()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.CollectionGraph:boolean tripleContained(org.apache.jena.graph.Triple,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph:boolean lambda$graphBaseFind$0(org.apache.jena.graph.Triple,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:org.apache.jena.graph.Node getArg(int,org.apache.jena.graph.Node[],org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Bound:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Equal:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.GE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.GreaterThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.LE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.LessThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Print:void print(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Unbound:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchRuleBody(int,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:boolean isGround(org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.reasoner.rulesys.impl.BindingVector unify(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.TriplePattern,int)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node[] getBoundArgs(org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.reasoner.TriplePattern partInstantiate(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation:org.apache.jena.graph.Triple getResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.ClauseEntry[] cloneClauseArray(org.apache.jena.reasoner.rulesys.ClauseEntry[],java.util.Map,org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule instantiate(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule cloneRule()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void moveForward()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource oneLevelClone(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String toString()"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void addContent(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Content)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.Content:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.Content:boolean isEmpty()"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.validation.ConfigurableValidationState:java.lang.String checkIDRefID()"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:void <init>(java.util.Iterator)"
        ]
    },
    "org.apache.jena.graph.compose.Polyadic:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String myExpandPrefix(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String substitutedAttribute(java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Node,java.util.Set,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$print$5(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$print$4(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils$getNsURIPrefix__111:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String myExpandPrefix(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrintUtil:java.lang.String expandQname(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.Node_URI:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String qnameFor(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:boolean checkBinding(org.apache.jena.graph.impl.GraphMatcher$AnonResource)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:boolean bind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:int rehash(int)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$lambda_scanBuckets_0__73:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void notifyAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.Iterator)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void notifyDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager$1:void remove()",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.StoreTripleIterator:void remove()"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.Iterator)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopSrc(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void clear()",
            "org.apache.jena.graph.impl.GraphBase:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.impl.WrappedGraph:void clear()",
            "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.GraphMem:void clear()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model notifyEvent(java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,org.xml.sax.InputSource,java.lang.String,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena newIRIxJena(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.irix.IRIProviderJenaIRI:void check(java.lang.String)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.ObjectIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:org.apache.jena.graph.Node next()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.ObjectIterator:void refillPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.SetBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(org.apache.jena.rdf.model.Resource,java.util.Iterator,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void remove()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)"
        ]
    },
    "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools:java.util.List namedHierarchyRoots(org.apache.jena.ontology.OntModel)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(org.apache.jena.rdf.model.RDFNode[])"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NsIterator listNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:void removeAllReifications(org.apache.jena.graph.FrontsTriple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:void removeReification(org.apache.jena.rdf.model.ReifiedStatement)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.Taint initTaint(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,boolean)",
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromQName(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void afterParse()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupNamespaces(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void workOutNamespaces()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void workOutNamespaces()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFHeader(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void printNameSpaceDefn()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void set11(java.lang.Object,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void set1N(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void set11(java.lang.Object,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void setN1(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchRuleBody(int,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:org.apache.jena.reasoner.rulesys.impl.RETENode clone(java.util.Map,org.apache.jena.reasoner.rulesys.impl.RETERuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void init(boolean,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void init(boolean,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void init(boolean,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterState)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterState)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void reset()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void addRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void deleteRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:java.util.List getAllRules()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void deleteAllRules()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void rebind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void rebind()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void reset()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void printLPProfile()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:java.util.List codeFor(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void pump(org.apache.jena.reasoner.rulesys.impl.LPInterpreterContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void requestRuleFiring(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngineIFactory:org.apache.jena.reasoner.rulesys.impl.FRuleEngineI createFRuleEngineI(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void init(boolean,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void init(boolean,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void <init>(org.apache.jena.reasoner.rulesys.Rule)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void <init>(java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:java.util.List rulesFor(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void prepare()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void prepare()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph getDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.BaseInfGraph:void requirePrepared()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void visitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void propagateSCC()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:org.apache.jena.util.iterator.ExtendedIterator listTriples(boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:java.lang.String dump()",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dump()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void <init>(boolean,org.apache.jena.graph.Node,java.util.HashMap)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:org.apache.jena.graph.Triple next()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void setCaching(boolean,boolean)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model withDefaultMappings(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(java.util.Map)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefixMap(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrintUtil:void registerPrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.lang.String shortForm(java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Iterator iterator()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator listSubjects()"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void addNameSpaces(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$10:boolean hasNext()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.RandomOrderIterator:void fill()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:java.io.InputStream openNoMap(java.lang.String)"
        ]
    },
    "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase:java.util.function.Predicate reject(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.graph.compose.CompositionBase:java.util.function.Predicate ifIn(org.apache.jena.util.iterator.ClosableIterator)"
        ]
    },
    "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void addIteratorWorker(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void deleteIteratorWorker(org.apache.jena.graph.Graph,java.util.Iterator)"
        ]
    },
    "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:java.lang.String mapURI(java.lang.String)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String)"
        ]
    },
    "org.apache.jena.util.LocationMapper:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.LocationMapper:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.LocationMapper:org.apache.jena.rdf.model.Model toModel()"
        ]
    },
    "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.MonitorModel:void snapshot()"
        ]
    },
    "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Iterator iterator()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.OneToManyMap:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:int hashCode()"
        ]
    },
    "org.apache.jena.util.OneToManyMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup copy()",
            "org.apache.jena.enhanced.Personality:org.apache.jena.enhanced.Personality add(org.apache.jena.enhanced.Personality)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.util.Map getNsPrefixMap()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.util.LocationMapper:void <init>(org.apache.jena.util.LocationMapper)"
        ]
    },
    "org.apache.jena.util.OneToManyMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.WrappedHashMap:long size()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Node_RuleVariable getNodeVar(java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:int numPrefixes()",
            "org.apache.jena.shared.LockMRSW:void <init>()",
            "org.apache.jena.shared.LockMRSW:org.apache.jena.shared.LockMRSW$LockState getLockState()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.util.OneToManyMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Iterator scanBuckets()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:java.util.List rulesFor(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:void print(java.util.Set,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.util.OneToManyMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Collection,org.apache.jena.rdf.model.Property,boolean)"
        ]
    },
    "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)"
        ]
    },
    "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.util.ResourceUtils:java.util.List partition(java.util.List,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void prepare()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void prepare()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph getDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.BaseInfGraph:void requirePrepared()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void runAll()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:boolean delete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule parseRule(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:java.util.List loadRules(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:java.util.List loadRules()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:java.util.List loadRules()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:java.util.List loadRules()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasoner:java.util.List loadRules()",
            "org.apache.jena.reasoner.rulesys.RDFSForwardRuleReasoner:java.util.List loadRules()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:java.util.List loadRulesLevel(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void readRDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.ParserTurtle:void parse(org.apache.jena.graph.Graph,java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.TurtleReader:void readWorker(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.JenaReaderBase:void readImpl(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node VarOrTerm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void TriplesSameSubject()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphNode()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createLiteral(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.CollectionGraph:boolean lambda$graphBaseFind$0(org.apache.jena.graph.Triple,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph$lambda_graphBaseFind_0__82:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.Bound:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Equal:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.GE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.GreaterThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.IsBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.IsFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.IsLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.LE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.LessThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListNotContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListNotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NotBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NotFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.NotLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Print:void print(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Print:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Print:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Unbound:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:boolean fireOne()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.reasoner.rulesys.impl.BindingVector unify(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.TriplePattern,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule instantiate(org.apache.jena.reasoner.rulesys.BindingEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule cloneRule()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource oneLevelClone(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:void <init>(org.apache.jena.rdf.model.Resource,java.util.ArrayList)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmlinput.ParseException:java.lang.String formatMessage(java.lang.Exception)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:void addContent(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Content)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void lambda$open$0(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.validation.ConfigurableValidationState:java.lang.String checkIDRefID()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean graphBaseContains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:int size()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:boolean containsNode(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.AbstractProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:boolean contains(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphExtract:org.apache.jena.graph.Graph extractInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void clear()",
            "org.apache.jena.graph.impl.GraphBase:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphPlain:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeStep(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap$OpenSetBunch:void <init>()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])"
        ]
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl$isHierarchyRoot__15:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass getOntClass(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isSymmetricProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NsIterator listNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void checkListMembersRdfType(org.apache.jena.rdf.model.RDFList,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:java.util.List asJavaList(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:boolean isReified(org.apache.jena.graph.FrontsTriple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrAll(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wDescription(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNode(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrAll(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$hasProperties__91:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:int triage(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder getFinder(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder insert(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.FGraph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder insert(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.FGraph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccurance(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder insert(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.FGraph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <init>(org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set toSet()"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.NiceIterator:java.util.List toList()"
        ]
    },
    "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.graph.compose.CompositionBase$contains__47:boolean test(java.lang.Object)",
            "org.apache.jena.graph.compose.CompositionBase$contains__49:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:void <init>(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.Delta:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.graph.compose.Dyadic:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.BaseInfGraph:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsPrefixURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean usesPrefix(org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String myExpandPrefix(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String myExpandPrefix(org.apache.jena.shared.PrefixMapping,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String resolvePName(java.lang.String,int,int)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsURIPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String substitutedAttribute(java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Node,java.util.Set,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$print$5(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$print$4(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils$getNsURIPrefix__111:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String substitutedAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String cookUpAttribution(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFHeader(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceId(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceReference(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String quote(java.lang.String)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Node,java.util.Set,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Triple,java.util.Set,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:void lambda$print$5(org.apache.jena.shared.PrefixMapping,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrefixMappingUtils:void lambda$print$4(org.apache.jena.shared.PrefixMapping,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrefixMappingUtils$getNsURIPrefix__111:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String expandPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String myExpandPrefix(org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrintUtil:java.lang.String expandQname(java.lang.String)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String expandQname(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.Node_URI:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.Node:java.lang.String toString(boolean)",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String objectString(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String shortForm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.Node_URI:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Print:void print(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.String getArgTrace()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.Functor:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Triple)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String qnameFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonResource:boolean checkBinding(org.apache.jena.graph.impl.GraphMatcher$AnonResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:boolean bind(org.apache.jena.graph.impl.GraphMatcher$AnonResource,org.apache.jena.graph.impl.GraphMatcher$Bucket,org.apache.jena.graph.impl.GraphMatcher$AnonResource)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:boolean equals(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:int rehash(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$lambda_scanBuckets_0__73:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void notifyAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Graph:void add(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void triple(int,int,org.apache.jena.graph.Triple)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Statement[])"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(java.util.List)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.StmtIterator)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:void loadSchema(org.apache.jena.graph.Graph,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void notifyDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager$1:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void delete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Graph:void delete(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.StoreTripleIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement[])"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(java.util.List)"
        ]
    },
    "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.StmtIterator)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void deleteLoopSrc(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void clear()",
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph createDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void clear()",
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph createDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.mem.GraphMem:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void clear()",
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph createDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model notifyEvent(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void readRDF()",
            "org.apache.jena.ttl.JenaReaderBase:void readImpl(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,org.xml.sax.InputSource,java.lang.String,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,org.xml.sax.InputSource,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,java.io.Reader,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void clear()",
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph createDeductionsGraph()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena newIRIxJena(org.apache.jena.iri.IRI,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena newIRIxJena(org.apache.jena.iri.IRI)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIx create(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI:void check(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapBase$1:java.lang.Object next()"
        ]
    },
    "org.apache.jena.mem.ObjectIterator:org.apache.jena.graph.Node next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ObjectIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.mem.SetBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DataRangeImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IndividualImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isMaxCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isMinCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntologyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValidQualifiedRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(org.apache.jena.rdf.model.Resource,java.util.Iterator,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)"
        ]
    },
    "org.apache.jena.ontology.OntTools:java.util.List namedHierarchyRoots(org.apache.jena.ontology.OntModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(org.apache.jena.rdf.model.RDFNode[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NsIterator listNameSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void addNameSpaces(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:void removeAllReifications(org.apache.jena.graph.FrontsTriple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void removeAllReifications(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:void removeReification(org.apache.jena.rdf.model.ReifiedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void removeReification(org.apache.jena.rdf.model.ReifiedStatement)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.Taint initTaint(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI,org.apache.jena.iri.IRI)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withBase(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:java.lang.String resolve(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withBase(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromQName(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void afterParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void close()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLEventReader,org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupNamespaces(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void workOutNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void write()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFHeader(org.apache.jena.rdf.model.Model,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void printNameSpaceDefn()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void set11(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setNsPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void set1N(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:void setN1(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$8:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void write()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEQueue:org.apache.jena.reasoner.rulesys.impl.RETENode clone(java.util.Map,org.apache.jena.reasoner.rulesys.impl.RETERuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:org.apache.jena.reasoner.rulesys.impl.RETENode clone(java.util.Map,org.apache.jena.reasoner.rulesys.impl.RETERuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:org.apache.jena.reasoner.rulesys.impl.RETENode clone(java.util.Map,org.apache.jena.reasoner.rulesys.impl.RETERuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void init(boolean,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void deleteBRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void rebind()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void reset()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void reset()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void addRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void deleteRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void deleteBRule(org.apache.jena.reasoner.rulesys.Rule)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:java.util.List getAllRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List getBRules()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void deleteAllRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void rebind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void rebind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void rebind()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void rebind()",
            "org.apache.jena.reasoner.BaseInfGraph$InfTransactionHandler:void abort()",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void reset()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void reset()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void moveForward()",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void printLPProfile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:java.util.List codeFor(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:java.util.List codeFor(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void requestRuleFiring(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETETerminal:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngineIFactory:org.apache.jena.reasoner.rulesys.impl.FRuleEngineI createFRuleEngineI(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void instantiateRuleEngine(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void instantiateRuleEngine(java.util.List)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void instantiateRuleEngine(java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void setRuleStore(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void <init>(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.rulesys.impl.LPRuleStore getBruleStore()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void <init>(java.util.List,org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void initLP(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:java.util.List rulesFor(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void prepare()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:void prepare()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph getDeductionsGraph()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:void requirePrepared()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder,boolean)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:int graphBaseSize()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findFull(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Graph:void add(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void triple(int,int,org.apache.jena.graph.Triple)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model complete(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void prepare()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void prepare()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.BaseInfGraph:void requirePrepared()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void visitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void visitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void visitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void propagateAdd(org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void relocateAllRefTo(org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void propagateSCC()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:org.apache.jena.util.iterator.ExtendedIterator listTriples(boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:java.lang.String dump()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dump()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dump()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void <init>(boolean,org.apache.jena.graph.Node,java.util.HashMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void setCaching(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeNsPrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model clearNsPrefixMap()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model withDefaultMappings(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(java.util.Map)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefixMap(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrintUtil:void registerPrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefixMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.graph.compose.Dyadic:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()"
        ]
    },
    "org.apache.jena.util.PrintUtil:void registerPrefixMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:java.lang.String shortForm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.Node_URI:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.util.iterator.MapFilterIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator listSubjects()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator listSubjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)"
        ]
    },
    "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:org.apache.jena.shared.PrefixMapping getPrefixes(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.util.List addRules(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.util.List addRules(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.util.List addRules(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void loadClasses(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void loadClasses(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.graph.Graph graphFor(org.apache.jena.util.FileManager,java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasDeclaredProperty(org.apache.jena.rdf.model.Property,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel getImportedModel(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void unloadImport(org.apache.jena.ontology.OntModel,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel)",
            "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void configure(org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.OntDocumentManager:void initialiseMetadata(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement needDefaultStatement()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void <init>(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void checkIndex(int)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:void <init>(java.util.Iterator,org.apache.jena.rdf.model.Seq)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator iterator()",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.NodeIterator iterator()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean containerContains(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAnyThenClose(org.apache.jena.rdf.model.StmtIterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAllThenClose(org.apache.jena.rdf.model.StmtIterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersect(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$IntersectionModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String reifiedToString()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValid()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void addNameSpaces(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupNamespaces(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$10:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getRDFList(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.FilterIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.iterator.RandomOrderIterator:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.RandomOrderIterator:void <init>(int,java.util.Iterator)",
            "org.apache.jena.util.iterator.RandomOrderIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.LocationMapper:void <init>(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.LocationMapperAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelWorker(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:java.io.InputStream openNoMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:java.io.InputStream open(java.lang.String)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase:java.util.function.Predicate reject(org.apache.jena.util.iterator.ClosableIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase:org.apache.jena.util.iterator.ClosableIterator butNot(org.apache.jena.util.iterator.ClosableIterator,org.apache.jena.util.iterator.ClosableIterator)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase:java.util.function.Predicate ifIn(org.apache.jena.util.iterator.ClosableIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void addIteratorWorker(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void deleteIteratorWorker(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,java.util.Iterator)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopSrc(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:java.lang.String mapURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:java.lang.String doAltURLMapping(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:java.io.InputStream open(java.lang.String)"
        ]
    },
    "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.RuleSet:int hashCode()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash,org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:int getHashCode(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int hashCode()"
        ]
    },
    "org.apache.jena.graph.Node:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:int hashCode()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.graph.Node_Ext:int hashCode()",
            "org.apache.jena.graph.Node_Triple:int hashCode()",
            "org.apache.jena.graph.Triple:int hashCode(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:int hashCode()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:int hashCode()",
            "org.apache.jena.reasoner.TriplePattern:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:java.lang.Object removeFrom(int)",
            "org.apache.jena.mem.HashedTripleBunch:int findSlotBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()",
            "org.apache.jena.util.OneToManyMap:int hashCode()"
        ]
    },
    "org.apache.jena.util.OneToManyMap$Entry:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()",
            "org.apache.jena.util.OneToManyMap:int hashCode()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDPlainType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.RuleSet:boolean equals(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isIdentical(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:void addGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:void setBaseGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.CollectionGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:boolean isTemp(org.apache.jena.reasoner.rulesys.Node_RuleVariable)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:void add(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:boolean isRegistered(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.PrefixMappingUtils:void processBySplit(java.util.Collection,java.util.Collection,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:void addGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:void setBaseGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.CollectionGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:boolean isTemp(org.apache.jena.reasoner.rulesys.Node_RuleVariable)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:void add(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:boolean isRegistered(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.PrefixMappingUtils:void processBySplit(java.util.Collection,java.util.Collection,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean contains(java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphEvents:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.enhanced.EnhNode:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:boolean mightBeEqual(org.apache.jena.graph.impl.GraphMatcher$SomeResource)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node:boolean sameValueAs(java.lang.Object)",
            "org.apache.jena.graph.Node:boolean matches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Triple$Field$1:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple$Field$3:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node anyToNull(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean sameAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean subsumes(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean nodeEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.enhanced.EnhNode:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:boolean mightBeEqual(org.apache.jena.graph.impl.GraphMatcher$SomeResource)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node:boolean sameValueAs(java.lang.Object)",
            "org.apache.jena.graph.Node:boolean matches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Triple$Field$1:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple$Field$3:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node anyToNull(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean sameAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean subsumes(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean nodeEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node_URI:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasURI(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.enhanced.EnhNode:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:boolean mightBeEqual(org.apache.jena.graph.impl.GraphMatcher$SomeResource)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node:boolean sameValueAs(java.lang.Object)",
            "org.apache.jena.graph.Node:boolean matches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Triple$Field$1:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple$Field$3:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node anyToNull(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean sameAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean subsumes(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean nodeEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashCommon:void primitiveRemove(java.lang.Object)",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch get(java.lang.Object)",
            "org.apache.jena.mem.HashedBunchMap:void put(java.lang.Object,org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.mem.HashedBunchMap:void grow()",
            "org.apache.jena.mem.HashedTripleBunch:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.HashedTripleBunch:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.HashedTripleBunch:void grow()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:boolean getBoolean()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setArpProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:java.lang.Object setArpProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObject getFacet(int)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.XSDbinary:int getHashCode(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualByTerm(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String toString(boolean)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.Object getIndexingValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node_Literal:java.lang.String getLiteralLexicalForm()"
        ]
    },
    "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.Node:java.lang.String toString(boolean)",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String objectString(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.Node:java.lang.String toString(boolean)",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String objectString(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.Node_Variable:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.lang.String toString()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.DoesNotReifyException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Node)",
            "org.apache.jena.shared.CannotReifyException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:char getChar()"
        ]
    },
    "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.impl.ModelCom mustHaveModel()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)"
        ]
    },
    "org.apache.jena.util.LocationMapper:org.apache.jena.rdf.model.Model toModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.MonitorModel:void snapshot()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)"
        ]
    },
    "org.apache.jena.util.OneToManyMap:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean sameAs(org.apache.jena.shared.impl.PrefixMappingImpl)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equalsByMap(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.enhanced.Personality:org.apache.jena.enhanced.Personality add(org.apache.jena.enhanced.Personality)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Personality:void <init>(org.apache.jena.enhanced.Personality)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.util.Map getNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.util.Map getNsPrefixMap()",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Map getNsPrefixMap()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:java.util.Map getPrefixMap()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equalsByMap(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:void print(java.util.Set,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.util.LocationMapper:void <init>(org.apache.jena.util.LocationMapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone(org.apache.jena.util.FileManagerImpl)"
        ]
    },
    "org.apache.jena.mem.WrappedHashMap:long size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Node_RuleVariable getNodeVar(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:int numPrefixes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:int numPrefixes()",
            "org.apache.jena.rdf.model.impl.ModelCom:int numPrefixes()",
            "org.apache.jena.shared.PrefixMapping:boolean hasNoMappings()"
        ]
    },
    "org.apache.jena.shared.LockMRSW:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.Lock getModelLock()"
        ]
    },
    "org.apache.jena.shared.LockMRSW:org.apache.jena.shared.LockMRSW$LockState getLockState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.LockMRSW:void enterCriticalSection(boolean)",
            "org.apache.jena.shared.LockMRSW:void leaveCriticalSection()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:java.util.Iterator scanBuckets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:void print(java.util.Set,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Collection,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)"
        ]
    },
    "org.apache.jena.util.ResourceUtils:java.util.List partition(java.util.List,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleModelRoot(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:boolean bind(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket matchBucket(org.apache.jena.graph.impl.GraphMatcher$Bucket)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listClasses()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:java.lang.Object next()",
            "org.apache.jena.rdf.model.NodeIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:java.lang.Object next()",
            "org.apache.jena.rdf.model.NodeIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String relativize(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.TrackingTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.NodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()",
            "org.apache.jena.rdf.model.impl.NodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.NsIteratorImpl:java.lang.String nextNs()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RSIteratorImpl:org.apache.jena.rdf.model.ReifiedStatement nextRS()",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResIteratorImpl:org.apache.jena.rdf.model.Resource nextResource()",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.StmtIteratorImpl:org.apache.jena.rdf.model.Statement next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.RandomOrderIterator:void fill()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:java.util.List loadRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:java.util.List loadRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:java.util.List loadRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasoner:java.util.List loadRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSForwardRuleReasoner:java.util.List loadRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSForwardRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:java.util.List loadRulesLevel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.RuleSet:org.apache.jena.assembler.RuleSet create(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRuleFromString(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:void restTriple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:void firstTriple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void aPredAndObj(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void makeSubjectReificationWith(org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void aPredAndObj(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void makeSubjectReificationWith(org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.JenaReaderBase:void readImpl(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)",
            "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void TriplesSameSubject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void Statement()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Formula()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void Object(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Collection()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasVersionInfo(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.CollectionGraph$lambda_graphBaseFind_0__82:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SelectorImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.Print:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Print:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DefaultModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.MemoryModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void lambda$open$0(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:void <init>(org.apache.jena.rdf.model.Resource,java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ParseException:java.lang.String formatMessage(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void warning(java.lang.Exception)",
            "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void error(java.lang.Exception)",
            "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void fatalError(java.lang.Exception)",
            "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.io.InputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:void lambda$open$0(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler$lambda_open_0__27:void run()"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:boolean graphBaseContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.GraphMem:boolean graphBaseContains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:boolean isEmpty()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.WrappedGraph:int size()",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeSize(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeStep(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:long size()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:int graphBaseSize()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:int graphBaseSize()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.GraphPlain:java.lang.String toString()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.graph.compose.CompositionBase$contains__47:boolean test(java.lang.Object)",
            "org.apache.jena.graph.compose.CompositionBase$contains__49:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:boolean containsNode(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.AbstractProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:boolean contains(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:boolean containsNode(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsResource(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.ontology.impl.AbstractProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OWLLiteProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OWLProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLDLProfile$20:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Ontology getOntology(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual getIndividual(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty getOntProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty getObjectProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty getTransitiveProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty getSymmetricProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty getInverseFunctionalProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty getDatatypeProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty getAnnotationProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass getComplementClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass getEnumeratedClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass getUnionClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass getIntersectionClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction getRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction getHasValueRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction getSomeValuesFromRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction getAllValuesFromRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction getCardinalityRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction getMinCardinalityRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction getMaxCardinalityRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.QualifiedRestriction getQualifiedRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction getCardinalityQRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction getMinCardinalityQRestriction(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction getMaxCardinalityQRestriction(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.RDFSProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.RDFSProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.RDFSProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.rdf.model.Resource getDescription(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.graph.Triple getTriple(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:boolean isValid()",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement createExistingReifiedStatement(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl installInReifier()"
        ]
    },
    "org.apache.jena.reasoner.FGraph:boolean contains(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.GraphExtract:org.apache.jena.graph.Graph extractInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphExtract:org.apache.jena.graph.Graph extract(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extractInto(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeStep(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecute(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:boolean containsBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap$OpenSetBunch:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.mem.NodeToTriplesMap$OpenSetBunch createSetBunch()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl$isHierarchyRoot__15:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass getOntClass(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass getOntClass()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isDatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isTransitiveProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isSymmetricProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean lambda$listInstances$2(boolean,org.apache.jena.ontology.Individual)"
        ]
    },
    "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void checkListMembersRdfType(org.apache.jena.rdf.model.RDFList,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.ModelExpansion:java.util.List asJavaList(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:boolean isReified(org.apache.jena.graph.FrontsTriple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isReified(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrAll(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wDescription(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNode(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$hasProperties__91:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:int triage(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean delete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder getFinder(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder insert(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.FGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean delete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccurance(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <init>(org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void resetTGCCache()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void prepare()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void prepare()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.BaseInfGraph:void requirePrepared()"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:java.util.Set toSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.util.Set implementsTypes()",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set subjectSet(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:java.util.List toList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Statement getUniqueStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.RDFNode getUnique(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:java.util.List copyProperties(org.apache.jena.rdf.model.Resource,java.util.function.Function,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.graph.Graph graphxInUsePrefixMapping(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.DisjointUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Intersection:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Union:boolean graphBaseContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:boolean containsNode(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.AbstractProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:boolean isInBaseModel(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:boolean contains(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.graph.compose.CompositionBase$contains__47:boolean test(java.lang.Object)",
            "org.apache.jena.graph.compose.CompositionBase$contains__49:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:boolean delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void remove(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase$contains__47:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase$contains__49:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void close()",
            "org.apache.jena.graph.compose.Dyadic:void close()",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.impl.WrappedGraph:void close()",
            "org.apache.jena.rdf.model.impl.ModelCom:void close()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void close()",
            "org.apache.jena.reasoner.BaseInfGraph:void close()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean usesPrefix(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:java.lang.String resolvePName(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:java.lang.String PrefixedName()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String cookUpAttribution(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceId(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeDescriptionHeader(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceReference(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writePredicate(org.apache.jena.rdf.model.Statement,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writePredicate(org.apache.jena.rdf.model.Statement,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String quote(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wURIreference(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrString(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Triple,java.util.Set,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:void processTTL(org.apache.jena.graph.Node,java.util.Set,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.graph.Node:java.lang.Object writeReplace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple:java.lang.Object writeReplace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Node:java.lang.String toString(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.Node:java.lang.String toString()"
        ]
    },
    "org.apache.jena.graph.Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.Triple:java.lang.String toString()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.enhanced.AlreadyLinkedViewException:void <init>(org.apache.jena.enhanced.Polymorphic)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String objectString(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String toString()"
        ]
    },
    "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.Resource asResource()",
            "org.apache.jena.rdf.model.impl.ResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.String getArgTrace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void addTriple(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void addTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$Bucket:boolean bind(org.apache.jena.graph.impl.GraphMatcher$AnonResource,org.apache.jena.graph.impl.GraphMatcher$Bucket,org.apache.jena.graph.impl.GraphMatcher$AnonResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:boolean bind(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:boolean equals(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean isIsomorphicWith(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.compose.Difference:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Intersection:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Union:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.Graph:void add(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup implementWith(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void addTriple(org.apache.jena.graph.Triple,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void silentAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addDeduction(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void addTriple(org.apache.jena.graph.Triple,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void silentAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void silentAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeList(org.apache.jena.graph.Node[],org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void triple(int,int,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:void emitTriple(int,int,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Statement[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model query(org.apache.jena.rdf.model.Selector)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:void loadSchema(org.apache.jena.graph.Graph,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ContentAssembler$1:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model complete(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model union(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.util.ModelCollector$UnionModelCollector$add__102:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Delta:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Graph:void delete(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void deleteTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:void performDelete(org.apache.jena.graph.Triple)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase$1:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ArrayBunch$2:void remove()",
            "org.apache.jena.mem.HashCommon$BasicKeyIterator:void remove()",
            "org.apache.jena.mem.HashCommon$MovedKeysIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.LazyIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.Map1Iterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.MapFilterIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator$1:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.graph.impl.SimpleEventManager$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.mem.StoreTripleIterator:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.rdf.model.impl.StmtIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.FilterIterator:void remove()",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.graph.compose.Difference:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.DisjointUnion:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.compose.Union:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.graph.Graph:void delete(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.impl.StatementImpl replace(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void dropIndividual(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removePropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.graph.Graph createDeductionsGraph()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource removeAll(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,org.xml.sax.InputSource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena newIRIxJena(org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx resolve(java.lang.String)",
            "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx resolve(org.apache.jena.irix.IRIx)",
            "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx relativize(org.apache.jena.irix.IRIx)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.irix.IRIx create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIx:org.apache.jena.irix.IRIx create(java.lang.String)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapBase$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.ObjectIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.AllDifferentImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.DataRangeImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.IntersectionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isMaxCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isMinCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntologyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.OntologyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValidQualifiedRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.ontology.impl.RestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses()",
            "org.apache.jena.ontology.OntTools:java.util.List namedHierarchyRoots(org.apache.jena.ontology.OntModel)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.util.iterator.ExtendedIterator listOntClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void removeAllReifications(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:void removeReification()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void removeReification(org.apache.jena.rdf.model.ReifiedStatement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withBase(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext computeXml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:java.lang.String resolve(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference resolve(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:java.lang.String resolve(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withBase(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext computeXml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContextWithBase(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.Collection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.StartStateRDForDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource)",
            "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.graph.Graph,org.xml.sax.InputSource,java.lang.String,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:void close()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLEventReader,org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLEventReader,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLStreamReader,org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void write()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <init>()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$8:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:org.apache.jena.reasoner.rulesys.impl.RETENode clone(java.util.Map,org.apache.jena.reasoner.rulesys.impl.RETERuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void deleteBRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void rebind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void rebind()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void rebind()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void rebind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void rebindAll()",
            "org.apache.jena.reasoner.BaseInfGraph$InfTransactionHandler:void abort()",
            "org.apache.jena.reasoner.BaseInfGraph:void remove(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:void clear()",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void reset()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:void reset()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List getBRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void rebind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:void addSubModel(org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:void removeSubModel(org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:void rebind()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.BaseInfGraph$InfTransactionHandler:void abort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.TransactionHandlerBase:void abort(java.lang.Throwable)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model abort()",
            "org.apache.jena.reasoner.BaseInfGraph$InfTransactionHandler:void abort()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.CompositionBase$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.MapFilterIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.Map1Iterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator$1:void close()",
            "org.apache.jena.util.iterator.WrappedIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:java.util.List codeFor(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void instantiateRuleEngine(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void instantiateRuleEngine(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addRuleDuringPrepare(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void rebindAll()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void instantiateRuleEngine(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.rulesys.impl.LPRuleStore getBruleStore()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void <init>(java.util.List,org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void initLP(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void constructorInit(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:int graphBaseSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:int size()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findFull(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model complete(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model getSchema()"
        ]
    },
    "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void propagateAdd(org.apache.jena.reasoner.transitiveReasoner.GraphNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void relocateAllRefTo(org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder,boolean)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeNsPrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void setDefaults()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeNsPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)"
        ]
    },
    "org.apache.jena.util.PrintUtil:void removePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model clearNsPrefixMap()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model clearNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model withDefaultMappings(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.graph.compose.Dyadic:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(java.util.Map)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void registerPrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader,org.apache.jena.reasoner.rulesys.BuiltinRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader)",
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List parseRules(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)"
        ]
    },
    "org.apache.jena.graph.compose.Dyadic:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Difference:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.DisjointUnion:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Intersection:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Union:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler$1:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void addPrefixes(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.shared.PrefixMapping:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.graph.Triple:java.lang.String toString()",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter,org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:java.lang.Object next()",
            "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)"
        ]
    },
    "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.graph.Graph getRootModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:org.apache.jena.shared.PrefixMapping getPrefixes(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.shared.PrefixMapping getPrefixMapping(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.util.List addRules(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addRules(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:org.apache.jena.assembler.RuleSet createRuleSet(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.assembler.exceptions.CannotConstructException:java.lang.String constructMessage(java.lang.Class,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.CannotHaveRulesException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.CannotLoadClassException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.assembler.exceptions.NoImplementationException:java.lang.String messageFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.NotUniqueException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.exceptions.PropertyRequiredException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.exceptions.UnknownEncodingException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.assembler.exceptions.UnknownReasonerException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.BadObjectException:java.lang.String makeMessage(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void loadClasses(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:org.apache.jena.graph.Graph graphFor(org.apache.jena.util.FileManager,java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasDeclaredProperty(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass:boolean test(org.apache.jena.ontology.OntClass)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel getImportedModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:void unloadImport(org.apache.jena.ontology.OntModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void loadImports()"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void configure(org.apache.jena.rdf.model.Model,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:void configure(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void initialiseMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void setMetadataSearchPath(java.lang.String,boolean)",
            "org.apache.jena.ontology.OntDocumentManager:void reset(boolean)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement needDefaultStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.RDFNode getDefault()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Resource getDefaultResource()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Literal getDefaultLiteral()",
            "org.apache.jena.rdf.model.impl.AltImpl:boolean getDefaultBoolean()",
            "org.apache.jena.rdf.model.impl.AltImpl:byte getDefaultByte()",
            "org.apache.jena.rdf.model.impl.AltImpl:short getDefaultShort()",
            "org.apache.jena.rdf.model.impl.AltImpl:int getDefaultInt()",
            "org.apache.jena.rdf.model.impl.AltImpl:long getDefaultLong()",
            "org.apache.jena.rdf.model.impl.AltImpl:char getDefaultChar()",
            "org.apache.jena.rdf.model.impl.AltImpl:float getDefaultFloat()",
            "org.apache.jena.rdf.model.impl.AltImpl:double getDefaultDouble()",
            "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultString()",
            "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultLanguage()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt getDefaultAlt()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Bag getDefaultBag()",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Seq getDefaultSeq()"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(boolean)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(long)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(char)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(float)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(double)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void <init>(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorFactoryImpl:org.apache.jena.rdf.model.NodeIterator createIterator(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(boolean)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(long)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(char)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(float)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(double)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:void checkIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:void <init>(java.util.Iterator,org.apache.jena.rdf.model.Seq)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl:org.apache.jena.rdf.model.NodeIterator createIterator(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator iterator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.NodeIterator iterator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean containerContains(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int indexOf(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAnyThenClose(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAllThenClose(org.apache.jena.rdf.model.StmtIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode getPropertyValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersect(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersection(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.util.ModelCollector$IntersectionModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$IntersectionModelCollector$lambda_accumulator_0__104:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String reifiedToString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String toString()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource asResource()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode getHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList setTail(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean isEmpty()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList cons(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode get(int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode replace(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList removeHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean sameListAs(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getRDFList(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()"
        ]
    },
    "org.apache.jena.util.iterator.FilterIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator:org.apache.jena.rdf.model.Statement nextStatement()",
            "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator:org.apache.jena.rdf.model.Statement nextStatement()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.RandomOrderIterator:void <init>(int,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.util.iterator.RandomOrderIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.LocationMapper:void <init>(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.LocationMapperAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper getInternal()",
            "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper makeGlobal()",
            "org.apache.jena.util.LocationMapper:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.LocationMapperAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelWorker(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelInternal(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelInternal(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void initialiseMetadata(java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:java.io.InputStream open(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)",
            "org.apache.jena.util.FileManagerImpl:java.lang.String readWholeFileAsUTF8(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.CompositionBase:org.apache.jena.util.iterator.ClosableIterator butNot(org.apache.jena.util.iterator.ClosableIterator,org.apache.jena.util.iterator.ClosableIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:java.lang.String doAltURLMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.RuleSet:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash,org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:int getHashCode(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:int hashCode()"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$FixedResource:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$SomeResource convert(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.Node_Ext:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Node_Triple:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:int hashCode()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.graph.Triple:int hashCode(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:int hashCode()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:int hashCode()",
            "org.apache.jena.reasoner.TriplePattern:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.graph.Triple:int hashCode(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:int hashCode()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.reasoner.rulesys.Rule:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.mem.HashCommon:java.lang.Object removeFrom(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashCommon$BasicKeyIterator:void remove()",
            "org.apache.jena.mem.HashCommon:void primitiveRemove(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:int findSlotBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedTripleBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDPlainType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.assembler.RuleSet:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RuleDerivation:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isIdentical(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.MultiUnion:void addGraph(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.ontology.impl.OntModelImpl:void addSubModel(org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.compose.Polyadic:boolean dependsOn(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean dependsOn(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.compose.Polyadic:void setBaseGraph(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.CollectionGraph:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:boolean isTemp(org.apache.jena.reasoner.rulesys.Node_RuleVariable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitHeadGet(org.apache.jena.graph.Node,int)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBodyPut(org.apache.jena.graph.Node,int,boolean)"
        ]
    },
    "org.apache.jena.sys.JenaSubsystemRegistryBasic:void add(org.apache.jena.sys.JenaSubsystemLifecycle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.sys.JenaSystem:void init()"
        ]
    },
    "org.apache.jena.sys.JenaSubsystemRegistryBasic:boolean isRegistered(org.apache.jena.sys.JenaSubsystemLifecycle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.PrefixMappingUtils:void processBySplit(java.util.Collection,java.util.Collection,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:void addGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.compose.Polyadic:void setBaseGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.CollectionGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:boolean isTemp(org.apache.jena.reasoner.rulesys.Node_RuleVariable)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:void add(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.sys.JenaSubsystemRegistryBasic:boolean isRegistered(org.apache.jena.sys.JenaSubsystemLifecycle)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.PrefixMappingUtils:void processBySplit(java.util.Collection,java.util.Collection,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.GraphEvents:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$Frame:boolean same(org.apache.jena.assembler.assemblers.AssemblerGroup$Frame)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntTools$Path:boolean hasTerminus(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean isEmpty()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean sameListAs(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValid()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)",
            "org.apache.jena.rdf.model.impl.StatementImpl:boolean sameAs(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.SimpleSelector:boolean test(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void blockRule(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void blockRule(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:org.apache.jena.rdf.model.Statement accept(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isHasRule(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSet(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSetURL(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$equals__51:boolean test(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$equals__57:boolean test(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$equals__58:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$FixedResource:boolean mightBeEqual(org.apache.jena.graph.impl.GraphMatcher$SomeResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:boolean contextualEquals(org.apache.jena.graph.impl.GraphMatcher$AnonResource,org.apache.jena.graph.impl.GraphMatcher$AnonStatement,org.apache.jena.graph.impl.GraphMatcher$AnonResource)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Node:boolean sameValueAs(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple$Field$2:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean sameValueAs(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Equal:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(int,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(int,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node[],org.apache.jena.graph.Node[])",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.impl.BindingStack)",
            "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Node_RuleVariable:boolean sameNodeAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean variantOf(org.apache.jena.graph.Node,org.apache.jena.graph.Node,java.util.Map)"
        ]
    },
    "org.apache.jena.graph.Node:boolean matches(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:boolean matches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean matchedBy(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean subjectMatches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean predicateMatches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean objectMatches(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.Triple$Field$1:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple$Field$1$lambda_filterOn_0__23:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Triple$Field$3:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple$Field$3$lambda_filterOn_0__25:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Triple:org.apache.jena.graph.Node anyToNull(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchSubject()",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchPredicate()",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchObject()"
        ]
    },
    "org.apache.jena.graph.Triple:boolean sameAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd$lambda_static_0__72:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean subsumes(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.TriplePattern:boolean nodeEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.TriplePattern:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Node_URI:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.enhanced.EnhNode:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.impl.CollectionGraph:boolean equalNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphMatcher$FixedResource:boolean mightBeEqual(org.apache.jena.graph.impl.GraphMatcher$SomeResource)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node:boolean sameValueAs(java.lang.Object)",
            "org.apache.jena.graph.Node:boolean matches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Triple$Field$1:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple$Field$3:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.Triple:org.apache.jena.graph.Node anyToNull(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean sameAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void recordPredicatePattern(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache$NodePair:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void addRelation(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean subsumes(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean nodeEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.HashCommon:void primitiveRemove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashCommon$MovedKeysIterator:void remove()",
            "org.apache.jena.mem.HashCommon:void remove(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.util.iterator.ExtendedIterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.mem.TripleBunch get(java.lang.Object)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:java.util.Iterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.NodeToTriplesMapMem:org.apache.jena.mem.TripleBunch get(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.HashedBunchMap:void put(java.lang.Object,org.apache.jena.mem.TripleBunch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.HashedBunchMap:void grow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedBunchMap:void put$(int,java.lang.Object,org.apache.jena.mem.TripleBunch)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:void grow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedTripleBunch:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:boolean getBoolean()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.AltImpl:boolean getDefaultBoolean()",
            "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setArpProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:java.lang.Object setArpProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDouble:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDFloat:java.lang.String unparse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValidValue(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.ValidatedInfo getActualEnumValue(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObject getFacet(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObject getFacet(int)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDbinary:int getHashCode(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:int hashCode()"
        ]
    },
    "org.apache.jena.datatypes.BaseDatatype:boolean isEqualByTerm(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String toString(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String toString()",
            "org.apache.jena.graph.Node_Literal:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.Object getIndexingValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node_Literal:java.lang.Object getIndexingValue()"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Node_Literal:java.lang.String getLiteralLexicalForm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getModelName(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.graph.impl.CollectionGraph:org.apache.jena.graph.Node fixupNode(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String getString()",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:java.lang.String getString(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:java.lang.String lex(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.ttl.turtle.Turtle2NTriples:void outputNode(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.BadObjectException:java.lang.String makeMessage(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.enhanced.AlreadyLinkedViewException:void <init>(org.apache.jena.enhanced.Polymorphic)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.ontology.impl.OntModelImpl:void checkListMembersRdfType(org.apache.jena.rdf.model.RDFList,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Profile getProfile()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String toString()",
            "org.apache.jena.rdf.model.AltHasNoDefaultException:void <init>(org.apache.jena.rdf.model.Alt)",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.shared.PropertyNotFoundException:void <init>(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.DoesNotReifyException:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Literal asLiteral()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.TriplePattern:java.lang.String toString()",
            "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.shared.CannotReifyException:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.shared.AlreadyReifiedException:void <init>(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:char getChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:char getDefaultChar()",
            "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.impl.ModelCom mustHaveModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasLiteral(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource removeAll(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource begin()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource abort()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource commit()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Rule:java.lang.String toShortString()",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:boolean sameAs(org.apache.jena.shared.impl.PrefixMappingImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equals(org.apache.jena.shared.impl.PrefixMappingImpl)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equalsByMap(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:boolean equals(org.apache.jena.shared.impl.PrefixMappingImpl)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:boolean sameAs(org.apache.jena.shared.impl.PrefixMappingImpl)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.enhanced.Personality:void <init>(org.apache.jena.enhanced.Personality)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Personality:org.apache.jena.enhanced.Personality copy()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.util.Map getNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.util.Map getNsPrefixMap()",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Map getNsPrefixMap()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:java.util.Map getPrefixMap()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equalsByMap(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:void print(java.util.Set,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:java.util.Map getPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone(org.apache.jena.util.FileManagerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone()"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:int numPrefixes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:int numPrefixes()",
            "org.apache.jena.rdf.model.impl.ModelCom:int numPrefixes()",
            "org.apache.jena.shared.PrefixMapping:boolean hasNoMappings()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:int numPrefixes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:int numPrefixes()",
            "org.apache.jena.rdf.model.impl.ModelCom:int numPrefixes()",
            "org.apache.jena.shared.PrefixMapping:boolean hasNoMappings()"
        ]
    },
    "org.apache.jena.shared.PrefixMapping:boolean hasNoMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.Lock getModelLock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.Lock getLock()",
            "org.apache.jena.rdf.model.impl.ModelCom:void enterCriticalSection(boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:void leaveCriticalSection()"
        ]
    },
    "org.apache.jena.shared.LockMRSW:void enterCriticalSection(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void enterCriticalSection(boolean)"
        ]
    },
    "org.apache.jena.shared.LockMRSW:void leaveCriticalSection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void leaveCriticalSection()"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleModelRoot(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphMatcher$Bucket:boolean bind(org.apache.jena.graph.impl.GraphMatcher$Bucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket matchBucket(org.apache.jena.graph.impl.GraphMatcher$Bucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listNamedClasses()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.NodeIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfEl(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String startElementTag(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String attributeTag(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfAt(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String endElementTag(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String splitTag(java.lang.String,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String relativize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceId(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceReference(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wURIreference(java.lang.String)"
        ]
    },
    "org.apache.jena.mem.TrackingTripleIterator:org.apache.jena.graph.Triple next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.TrackingTripleIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NodeIteratorImpl:org.apache.jena.rdf.model.RDFNode nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.NodeIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NsIteratorImpl:java.lang.String nextNs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void addNameSpaces(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RSIteratorImpl:org.apache.jena.rdf.model.ReifiedStatement nextRS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResIteratorImpl:org.apache.jena.rdf.model.Resource nextResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StmtIteratorImpl:org.apache.jena.rdf.model.Statement next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StmtIteratorImpl:org.apache.jena.rdf.model.Statement nextStatement()",
            "org.apache.jena.rdf.model.impl.StmtIteratorImpl:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMicroReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLMiniReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSForwardRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.RuleSet:org.apache.jena.assembler.RuleSet create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRuleFromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:void restTriple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Collection$1:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:void firstTriple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Collection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void aPredAndObj(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void makeSubjectReificationWith(org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void aPredAndObj(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void makeSubjectReificationWith(org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Collection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.Collection:void endElement()",
            "org.apache.jena.rdfxml.xmlinput.states.OuterXMLLiteral:void endElement()",
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void endElement()",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void endElement()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsXML(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void read(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void Statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void parse()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Formula()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node VarOrTerm()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void Object(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void ObjectList(org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Collection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node TriplesNode()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasVersionInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.DefaultModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.MemoryModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.graph.Graph getRootModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void warning(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void deprecated(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void warning(java.lang.Exception)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void error(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void syntaxError(java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void error(java.lang.Exception)",
            "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.ttl.JenaReaderBase:void readImpl(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFDefaultErrorHandler:void fatalError(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void fatalError(java.lang.Exception)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.DefaultErrorHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.NTriple:void mainEh(java.lang.String[],org.xml.sax.ErrorHandler,org.apache.jena.rdfxml.xmlinput.ARPEventHandler)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.io.InputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.NTriple:void mainEh(java.lang.String[],org.xml.sax.ErrorHandler,org.apache.jena.rdfxml.xmlinput.ARPEventHandler)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler$lambda_open_0__27:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void exec(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.lang.Runnable)",
            "org.apache.jena.graph.impl.TransactionHandlerBase:void execute(java.lang.Runnable)",
            "org.apache.jena.rdf.model.impl.ModelCom:void executeInTxn(java.lang.Runnable)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource withFullModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.mem.GraphMem:boolean graphBaseContains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.Delta:int graphBaseSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:int size()"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:boolean isEmpty()",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isEmpty()",
            "org.apache.jena.reasoner.BaseInfGraph:boolean isEmpty()"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.WrappedGraph:int size()",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeSize(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeStep(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:long size()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:int graphBaseSize()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.BaseInfGraph:int graphBaseSize()"
        ]
    },
    "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecuteBySizeSize(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:long size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersection(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:int graphBaseSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:int size()"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.GraphPlain:java.lang.String toString()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsResource(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:boolean containsSome(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canAs(java.lang.Class)",
            "org.apache.jena.enhanced.Polymorphic:boolean supports(java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$20:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLDLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLLiteProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Ontology getOntology(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual getIndividual(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty getOntProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty getObjectProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty getTransitiveProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty getSymmetricProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty getInverseFunctionalProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty getDatatypeProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty getAnnotationProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass getComplementClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass getEnumeratedClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass getUnionClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass getIntersectionClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction getRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction getHasValueRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction getSomeValuesFromRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction getAllValuesFromRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction getCardinalityRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction getMinCardinalityRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction getMaxCardinalityRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.QualifiedRestriction getQualifiedRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction getCardinalityQRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction getMinCardinalityQRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction getMaxCardinalityQRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RDFSProfile:boolean isSupported(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DataRangeImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IndividualImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isMaxCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isMinCardinalityQRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntologyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValidQualifiedRestriction(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.UnionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.OntTools:java.util.List namedHierarchyRoots(org.apache.jena.ontology.OntModel)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:void checkType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntModelImpl$RdfTypeTestFn:java.lang.Object reduce(org.apache.jena.rdf.model.RDFNode,java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean is(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)"
        ]
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.rdf.model.Resource getDescription(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.graph.Triple getTriple(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement createExistingReifiedStatement(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement getRS(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl installInReifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl create(org.apache.jena.rdf.model.impl.ModelCom,java.lang.String,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl create(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.graph.GraphExtract:org.apache.jena.graph.Graph extract(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extractInto(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extract(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$IntersectionModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:boolean decideHowtoExecute(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphUtil:void deleteFrom(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.mem.GraphTripleStoreBase:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphMem:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.GraphTripleStoreBase:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphMem:boolean graphBaseContains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.mem.NodeToTriplesMap$OpenSetBunch createSetBunch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass getOntClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(org.apache.jena.rdf.model.Resource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean lambda$listInstances$2(boolean,org.apache.jena.ontology.Individual)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_2__61:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean isReified(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:boolean isReified()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.RSIterator listReifiedStatements(org.apache.jena.graph.FrontsTriple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void resetTGCCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void setUseTGCCache()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.util.Set implementsTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:java.util.Set subjectSet(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator listPredicates()"
        ]
    },
    "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Statement getUniqueStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getUniqueString(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.RDFNode getUnique(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getUniqueResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getUniqueLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:java.util.List copyProperties(org.apache.jena.rdf.model.Resource,java.util.function.Function,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.graph.Graph graphxInUsePrefixMapping(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:java.lang.String PrefixedName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:java.lang.String IRIref()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeDescriptionHeader(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writePredicate(org.apache.jena.rdf.model.Statement,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAboutAttrOpt(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wURIreference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wURIreference(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wDatatype(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdRefAttrOpt(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrString(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.graph.Node:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String nice(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.lang.String toString()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.DoesNotReifyException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Node)",
            "org.apache.jena.shared.CannotReifyException:void <init>(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Triple:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.shared.AccessDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)",
            "org.apache.jena.ttl.turtle.TurtleEventDump:void triple(int,int,org.apache.jena.graph.Triple)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.enhanced.AlreadyLinkedViewException:void <init>(org.apache.jena.enhanced.Polymorphic)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:void addView(org.apache.jena.enhanced.Polymorphic)"
        ]
    },
    "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Literal getLiteral()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.Resource asResource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Resource mustBeResource(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void addTriple(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void addTriple(org.apache.jena.graph.Triple,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:boolean isIsomorphicWith(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhGraph:boolean isIsomorphicWith(org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean isIsomorphicWith(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isIsomorphicWith(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup implementWith(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:void establish(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Resource,java.lang.Object)",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.assemblers.AssemblerGroup general()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content contentFromModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.impl.StatementImpl replace(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addLiteral(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource addProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource getResourceWithType(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq(java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource newListCell(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource setTailAux(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(java.lang.String,org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void triple(org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode,org.apache.jena.rdfxml.xmlinput.impl.ANode)",
            "org.apache.jena.rdfxml.xmlinput.NTriple$TwoSH:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void silentAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void silentAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void silentAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeList(org.apache.jena.graph.Node[],org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:void emitTriple(int,int,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void Object(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Collection()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model query(org.apache.jena.rdf.model.Selector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler$1:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void addContent(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Content)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model union(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:void <init>()"
        ]
    },
    "org.apache.jena.util.ModelCollector$UnionModelCollector$add__102:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:void remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.mem.ArrayBunch$2:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.HashCommon$BasicKeyIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.HashCommon$MovedKeysIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StmtIteratorImpl:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.util.iterator.FilterIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.impl.StatementImpl replace(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource setTailAux(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)",
            "org.apache.jena.rdf.model.impl.StmtIteratorImpl:void remove()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void dropIndividual(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removePropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void removeAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void removeCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void removeCardinality(int)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void removeOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void removeHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void removeMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void removeMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void removeMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void removeMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeInverseProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removePriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.DataRange)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void removeOnProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void removeSomeValuesFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource removeAll(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource removeProperties()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx resolve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String toBase(java.lang.String)",
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx resolveIRI(java.lang.String)",
            "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,java.lang.String)",
            "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve0(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx resolve(org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,org.apache.jena.irix.IRIx)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJenaIRI$IRIxJena:org.apache.jena.irix.IRIx relativize(org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIx:org.apache.jena.irix.IRIx create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx reference(java.lang.String)",
            "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String,java.lang.String)",
            "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve0(java.lang.String)",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx establishBaseURI()",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx setupBase(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.IntersectionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntologyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()"
        ]
    },
    "org.apache.jena.ontology.impl.RestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.util.iterator.ExtendedIterator listOntClasses(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMember(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:void removeReification()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext computeXml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:int processSpecials(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext xml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:java.lang.String resolve(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference resolve(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromID(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void <init>(org.apache.jena.rdfxml.xmlinput.states.WantsObjectFrameI,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContextWithBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Collection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.StartStateRDForDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.ARP:void load(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.InputStream)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:void process(java.io.InputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.DOM2Model:void load(org.w3c.dom.Node)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLEventReader,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLStreamReader,org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLStreamReader,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void <init>()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void rebind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void rebindAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsXML(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void addSubModel(org.apache.jena.rdf.model.Model,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void addSubModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void removeSubModel(org.apache.jena.rdf.model.Model,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void removeSubModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void loadImports(org.apache.jena.ontology.OntModel)",
            "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.TransactionHandlerBase:void abort(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.TransactionHandlerBase:void execute(java.lang.Runnable)",
            "org.apache.jena.graph.impl.TransactionHandlerBase:java.lang.Object calculate(java.util.function.Supplier)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model abort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void exec(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.lang.Runnable)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource abort()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:void close()",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)"
        ]
    },
    "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.iterator.LazyIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.Map1Iterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.NiceIterator$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:void close(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.WrappedIterator:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.reasoner.rulesys.impl.Generator lambda$generatorFor$1(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.rulesys.impl.LPRuleStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addRuleDuringPrepare(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void constructorInit(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findDataMatches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model implementCreateModelOver(java.lang.String)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_listSubModels_2__19:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model getSchema()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:org.apache.jena.util.iterator.ClosableIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void setDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:void reset(boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeNsPrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model clearNsPrefixMap()"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule$Parser rulesParserFromReader(java.io.BufferedReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.reasoner.rulesys.Rule$Parser loadRuleParserFromResourceFile(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.Difference:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.DisjointUnion:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.Intersection:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.compose.Union:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:org.apache.jena.graph.compose.Union union(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createUnion(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:void addPrefixes(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void lambda$open$0(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.graph.compose.Dyadic:void <init>(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:void addInto(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.OntDocumentManager:void setDefaultPrefixMappings()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefixes(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefixes(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter,org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter,org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void init(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:org.apache.jena.util.LocationMapper getLocationMapper(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content contentFromModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec getOntModelSpec(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.rdf.model.ModelGetter getModelSource(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntDocumentManager getDocumentManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:void loadSchema(org.apache.jena.graph.Graph,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.graph.Graph getRootModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.shared.PrefixMapping getPrefixMapping(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void addPrefixes(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addRules(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:org.apache.jena.assembler.RuleSet createRuleSet(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotConstructException:java.lang.String constructMessage(java.lang.Class,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.CannotConstructException:void <init>(java.lang.Class,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotHaveRulesException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.CannotHaveRulesException:void <init>(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotLoadClassException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.CannotLoadClassException:void <init>(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.ClassNotFoundException)"
        ]
    },
    "org.apache.jena.assembler.exceptions.NoImplementationException:java.lang.String messageFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.NoImplementationException:void <init>(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.NotUniqueException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.NotUniqueException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.exceptions.PropertyRequiredException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.PropertyRequiredException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.exceptions.UnknownEncodingException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.UnknownEncodingException:void <init>(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.exceptions.UnknownReasonerException:java.lang.String makeMessage(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.UnknownReasonerException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.BadObjectException:java.lang.String makeMessage(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.BadObjectException:void <init>(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass:boolean test(org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.Statement[])",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void loadImports()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void configure(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void setMetadataSearchPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void reset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void configure(org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.OntDocumentManager:void reset()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.RDFNode getDefault()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Resource getDefaultResource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Literal getDefaultLiteral()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:boolean getDefaultBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:byte getDefaultByte()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:short getDefaultShort()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:int getDefaultInt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:long getDefaultLong()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:char getDefaultChar()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:float getDefaultFloat()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:double getDefaultDouble()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultLanguage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt getDefaultAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Bag getDefaultBag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Seq getDefaultSeq()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContNodeIteratorFactoryImpl:org.apache.jena.rdf.model.NodeIterator createIterator(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:void remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:void remove()"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl:org.apache.jena.rdf.model.NodeIterator createIterator(java.util.Iterator,java.lang.Object,org.apache.jena.rdf.model.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(boolean)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(long)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(char)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(float)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(double)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean contains(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode objectAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int objectAsInt(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode getHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean sameListAs(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource setTailAux(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal getLiteral(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.RDFNode getObject(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int,org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getStatementProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode getPropertyValue(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersection(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$IntersectionModelCollector$intersection__103:java.lang.Object apply(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.ModelCollector$IntersectionModelCollector$lambda_accumulator_0__104:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.shared.PrefixMapping$JenaLockedException:void <init>(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource asResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getStatementProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.OutputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.OutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode getHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode get(int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode replace(int,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList removeHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList setTail(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkNotNil(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList cons(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode get(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode replace(int,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean contains(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList append(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList removeHead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void removeDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void removeOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void removeOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void removeOneOf(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:boolean sameListAs(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator:org.apache.jena.rdf.model.Statement nextStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator:org.apache.jena.rdf.model.Statement nextStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper getInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeGlobal()",
            "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper get()"
        ]
    },
    "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper makeGlobal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.LocationMapper:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.assembler.Content objectAsContent(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.graph.Graph graphFor(org.apache.jena.util.FileManager,java.util.Set,java.lang.String)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model getSchema()",
            "org.apache.jena.util.FileManager:org.apache.jena.rdf.model.Model loadModel(java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelInternal(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:boolean read(org.apache.jena.rdf.model.Model,java.lang.String,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.FileManager:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:java.lang.String readWholeFileAsUTF8(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDPlainType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void loadXSDSimpleTypes(org.apache.jena.datatypes.TypeMapper)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$SomeResource convert(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.StatementImpl:int hashCode()",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.reasoner.rulesys.Rule:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node_Literal:boolean sameValueAs(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.compose.Dyadic:boolean dependsOn(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean dependsOn(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:boolean dependsOn(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Dyadic:boolean dependsOn(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean dependsOn(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.ontology.OntTools$PredicatesFilter:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitHeadGet(org.apache.jena.graph.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitHead(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitHeadGet(org.apache.jena.graph.Node,int)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBodyPut(org.apache.jena.graph.Node,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.rulesys.impl.LPRuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBodyPut(org.apache.jena.graph.Node,int,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.rulesys.Functor)"
        ]
    },
    "org.apache.jena.sys.JenaSystem:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:void <clinit>()",
            "org.apache.jena.graph.NodeFactory:void <clinit>()",
            "org.apache.jena.rdf.model.impl.ModelCom:void <clinit>()",
            "org.apache.jena.rdf.model.ModelFactory:void <clinit>()",
            "org.apache.jena.util.FileManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$Frame:boolean same(org.apache.jena.assembler.assemblers.AssemblerGroup$Frame)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$Frame:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.Statement[])",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.OntTools$Path:boolean hasTerminus(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode get(int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode replace(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void concatenate(org.apache.jena.rdf.model.RDFList)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:boolean sameAs(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:boolean test(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.SimpleSelector:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void blockRule(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setBlockRules(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void blockRule(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setBlockRules(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:org.apache.jena.rdf.model.Statement accept(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:java.lang.Object accept(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNode(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isHasRule(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSet(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSetURL(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetResourceParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$equals__51:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$equals__57:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$equals__58:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:boolean contextualEquals(org.apache.jena.graph.impl.GraphMatcher$AnonResource,org.apache.jena.graph.impl.GraphMatcher$AnonStatement,org.apache.jena.graph.impl.GraphMatcher$AnonResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource$StatementWrapper:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:boolean sameTermMatch(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean lambda$find$0(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple$Field$2:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple$Field$2$lambda_filterOn_0__26:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:boolean sameValueAs(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(int,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.impl.BindingStack)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(int,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(int,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node[],org.apache.jena.graph.Node[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.reasoner.rulesys.impl.BindingVector unify(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.TriplePattern,int)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.impl.BindingStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.reasoner.TriplePattern,org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.BindingStack)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.impl.BindingStack)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.GenericTripleMatchFrame:boolean bindResult(org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.impl.GenericTripleMatchFrame:boolean functorMatch(org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Node_RuleVariable:boolean sameNodeAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Functor:boolean sameAs(java.lang.Object)",
            "org.apache.jena.reasoner.TriplePattern:boolean sameAs(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean variantOf(org.apache.jena.graph.Node,org.apache.jena.graph.Node,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.TriplePattern:boolean variantOf(org.apache.jena.reasoner.TriplePattern)"
        ]
    },
    "org.apache.jena.graph.Triple:boolean matches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple:boolean matchedBy(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:boolean matches(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple:boolean subjectMatches(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple:boolean predicateMatches(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple:boolean objectMatches(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple$Field$1$lambda_filterOn_0__23:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.Triple$Field$3$lambda_filterOn_0__25:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchSubject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchPredicate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple:org.apache.jena.graph.Node getMatchObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.Triple:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.ArrayBunch:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.ArrayBunch:void remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd$lambda_static_0__72:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.HashCommon:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedTripleBunch:void remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:boolean add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:void add(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:boolean remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.StoreTripleIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.util.iterator.ExtendedIterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:java.util.Iterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:boolean containsByEquality(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.mem.TripleBunch get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:java.util.Iterator iteratorForIndexed(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.StoreTripleIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:java.util.Iterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:boolean containsByEquality(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:org.apache.jena.mem.TripleBunch get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:java.util.Iterator iteratorForIndexed(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.HashedBunchMap:void put$(int,java.lang.Object,org.apache.jena.mem.TripleBunch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedBunchMap:void put(java.lang.Object,org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:java.lang.Object setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash,org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash,org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDateTimeStampType:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDayTimeDurationType:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDYearMonthDurationType:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object parse(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.ValidatedInfo getActualEnumValue(java.lang.String,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObject getFacet(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.jena.ext.xerces.xs.XSObject getFacet(int)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFLangString:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFhtml:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.RDFjson:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FunctorDatatype:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Node_Literal:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.Node:java.lang.String toString(boolean)",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String objectString(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.ResourceRequiredException:void <init>(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.graph.Node_Literal:java.lang.Object getIndexingValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.mem.NodeToTriplesMapBase:java.lang.Object getIndexField(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:org.apache.jena.util.iterator.ExtendedIterator iterator(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getModelName(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.assembler.Content objectAsContent(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String getLexicalForm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.NamedModelAssembler:java.lang.String getModelName(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:byte getByte()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:short getShort()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:int getInt()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:long getLong()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:float getFloat()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:double getDouble()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String getString()",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrString(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator:boolean lambda$new$0(java.lang.String,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wValueString(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Regex:java.lang.String getString(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.StrConcat:java.lang.String lex(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.ttl.turtle.Turtle2NTriples:void outputNode(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.Turtle2NTriples:void triple(int,int,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:java.lang.Object convertTo(java.lang.Class)"
        ]
    },
    "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhGraph:org.apache.jena.rdf.model.RDFNode getNodeAs(org.apache.jena.graph.Node,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Profile getProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void setDistinctMembers(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.rdf.model.RDFList getDistinctMembers()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void setAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:boolean hasAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void removeAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void setCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:int getCardinalityQ()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean hasCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void removeCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void setCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:int getCardinality()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:boolean hasCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void removeCardinality(int)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void setOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()",
            "org.apache.jena.ontology.impl.ComplementClassImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.ontology.OntClass getOperand()",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void removeOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.rdf.model.Property operator()",
            "org.apache.jena.ontology.impl.DataRangeImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void setHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:boolean hasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void removeHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl:org.apache.jena.rdf.model.Property operator()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void setMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:int getMaxCardinalityQ()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean hasMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void removeMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void setMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:int getMaxCardinality()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:boolean hasMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void removeMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void setMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:int getMinCardinalityQ()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean hasMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void removeMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void setMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:int getMinCardinality()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:boolean hasMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void removeMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSuperClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getEquivalentClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentClasses()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getDisjointWith()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDisjointWith()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isEnumeratedClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isUnionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isIntersectionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isComplementClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass convertToEnumeratedClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass convertToIntersectionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass convertToUnionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass convertToComplementClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSuperProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSuperProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getEquivalentProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentProperties()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeInverseProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty convertToFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty convertToDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty convertToObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty convertToTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty convertToSymmetricProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isSymmetricProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listReferringRestrictions()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getDifferentFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDifferentFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAnnotationProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isObjectProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntology()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDataRange()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAllDifferent()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void checkProfile(java.lang.Object,java.lang.String)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getImport()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listImports()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean imports(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean hasPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removePriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getIncompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listIncompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void setHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.DataRange)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.DataRange)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void setOnProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.OntProperty getOnProperty()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean onProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void removeOnProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isAllValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isSomeValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isHasValueRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMinCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMaxCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction convertToAllValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction convertToSomeValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction convertToHasValueRestriction(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void setSomeValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:boolean hasSomeValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void removeSomeValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.UnionClassImpl:org.apache.jena.rdf.model.Property operator()",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.enhanced.AlreadyLinkedViewException:void <init>(org.apache.jena.enhanced.Polymorphic)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.ontology.impl.OntModelImpl:void checkListMembersRdfType(org.apache.jena.rdf.model.RDFList,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String toString()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.LiteralRequiredException:void <init>(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetRDFNodeParameter(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.AltHasNoDefaultException:void <init>(org.apache.jena.rdf.model.Alt)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement needDefaultStatement()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()"
        ]
    },
    "org.apache.jena.shared.PropertyNotFoundException:void <init>(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Literal asLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$LangTagFilter:boolean test(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator:boolean lambda$new$0(java.lang.String,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator:boolean lambda$new$0(java.lang.String,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.rdf.model.Model getReasonerCapabilities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.AlreadyReifiedException:void <init>(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Statement getUniqueStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.RDFNode getUnique(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:java.util.List copyProperties(org.apache.jena.rdf.model.Resource,java.util.function.Function,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.NodeIterator listPropertyValues(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getHasRuleStatements(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getRuleSetURLStatements(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.util.iterator.ExtendedIterator listProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:boolean hasProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isEnumeratedClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isUnionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isIntersectionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isComplementClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isAllValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isSomeValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isHasValueRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMinCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMaxCardinalityRestriction()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$1:org.apache.jena.rdf.model.Resource accept(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource begin()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource abort()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource commit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:java.lang.String toShortString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void addTriple(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.EnvironmentFrame:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleSyntaxException:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleSyntaxException:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.Rule,java.lang.Throwable)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addBRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void deleteBRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.BuiltinException:void <init>(org.apache.jena.reasoner.rulesys.Builtin,org.apache.jena.reasoner.rulesys.RuleContext,java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Rule:boolean allMonotonic(org.apache.jena.reasoner.rulesys.ClauseEntry[])",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:java.lang.String toString()"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equals(org.apache.jena.shared.impl.PrefixMappingImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:boolean equals(org.apache.jena.shared.impl.PrefixMappingImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:boolean sameAs(org.apache.jena.shared.impl.PrefixMappingImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:boolean equals(org.apache.jena.shared.impl.PrefixMappingImpl)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.enhanced.Personality:org.apache.jena.enhanced.Personality copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void setFileManager()",
            "org.apache.jena.util.FileManagerImpl:java.lang.Object clone()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.Lock getLock()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void enterCriticalSection(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void enterCriticalSection(boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void leaveCriticalSection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void leaveCriticalSection()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listNamedClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfEl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFHeader(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFTrailer(java.io.PrintWriter,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeDescriptionHeader(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeDescriptionTrailer(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeStart(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeEnd(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String startElementTag(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writePredicate(org.apache.jena.rdf.model.Statement,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String attributeTag(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfAt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceId(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceReference(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void printRdfAt(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String endElementTag(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writePredicate(org.apache.jena.rdf.model.Statement,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String splitTag(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String startElementTag(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String attributeTag(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String endElementTag(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.jena.mem.TrackingTripleIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StmtIteratorImpl:org.apache.jena.rdf.model.Statement nextStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAny(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAll(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model addCommon(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.String statementsToString(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void loadConfiguration(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void addDescription(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Boolean checkBinaryPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StmtIteratorImpl:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.Set collectStatements()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getRequiredProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Collection$1:void theObject(org.apache.jena.rdfxml.xmlinput.impl.ANode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Collection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.Collection:void endElement()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Collection:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.OuterXMLLiteral:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsXML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.ParserTurtle:void parse(org.apache.jena.graph.Graph,java.lang.String,java.io.Reader)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void ObjectList(org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void PropertyListNotEmpty(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node TriplesNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void TriplesSameSubject()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphNode()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void deprecated(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void warning(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void deprecated(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void warning(java.lang.Exception)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:void syntaxError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.RDFNode readNode()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()",
            "org.apache.jena.rdf.model.impl.NTripleReader:char readUnicode4Escape()",
            "org.apache.jena.rdf.model.impl.NTripleReader:boolean badEOF()",
            "org.apache.jena.rdf.model.impl.NTripleReader:boolean expect(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void error(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void syntaxError(java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.OutputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void error(java.lang.Exception)",
            "org.apache.jena.ttl.JenaReaderBase:void read(org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.ttl.JenaReaderBase:void readImpl(org.apache.jena.rdf.model.Model,java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void fatalError(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPSaxErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void fatalError(java.lang.Exception)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void error(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.apache.jena.rdfxml.xmlinput.impl.ARPLocation,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void generalError(int,java.lang.Exception)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:void exec(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.graph.impl.TransactionHandlerBase:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:void executeInTxn(java.lang.Runnable)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void executeInTxn(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$2(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$1(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource withFullModel(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:boolean isEmpty()",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isEmpty()",
            "org.apache.jena.reasoner.BaseInfGraph:boolean isEmpty()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler$1:boolean isEmpty()",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content contentFromModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.WrappedGraph:boolean isEmpty()",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isEmpty()",
            "org.apache.jena.reasoner.BaseInfGraph:boolean isEmpty()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.enhanced.EnhNode:boolean canAs(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAnnotationProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isObjectProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isClass()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntology()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDataRange()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAllDifferent()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()",
            "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.enhanced.Polymorphic:boolean supports(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:void checkType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.DefaultModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.LocationMapperAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.MemoryModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelSourceAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl$RdfTypeTestFn:java.lang.Object reduce(org.apache.jena.rdf.model.RDFNode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:boolean hasAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean hasCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:boolean hasCardinality(int)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:boolean hasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean hasMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:boolean hasMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean hasMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:boolean hasMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSuperProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean imports(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean hasPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.DataRange)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean onProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:boolean hasSomeValuesFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean is(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isAlt()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isBag()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isSeq()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)"
        ]
    },
    "org.apache.jena.enhanced.Polymorphic:java.lang.Object findExistingView(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:boolean supports(java.lang.Class)",
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object asInternal(java.lang.Class)",
            "org.apache.jena.enhanced.Polymorphic:boolean alreadyHasView(java.lang.Class)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement getRS(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement lambda$findReifiedStatements$1(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement lambda$findReifiedStatements$0(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl create(org.apache.jena.rdf.model.impl.ModelCom,java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement create(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl create(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extract(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.GraphMem:void performAdd(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void add(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IndividualImpl:boolean hasOntClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_2__61:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:boolean isReified()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.RSIterator listReifiedStatements(org.apache.jena.graph.FrontsTriple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RSIterator listReifiedStatements(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.RSIterator listReifiedStatements()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValue(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void setUseTGCCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjects()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator listPredicates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NsIterator listNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjects()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsOfProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsOfProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getUniqueString(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.String getPath(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getUniqueResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getRequiredResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:org.apache.jena.util.LocationMapper getLocationMapper(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec getOntModelSpec(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.rdf.model.ModelGetter getModelSource(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.String getLanguage(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntDocumentManager getDocumentManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntModelSpec getDefault(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.graph.Graph getRootModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getUniqueLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getRequiredLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean lambda$listSubjects$1(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.graph.compose.Dyadic:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:java.lang.String IRIref()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Verb()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node RDFLiteral()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAboutAttrOpt(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wURIreference(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wAboutAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wTypeAttr(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wDatatype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValue(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdRefAttrOpt(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.shared.AccessDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.AddDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)",
            "org.apache.jena.shared.DeleteDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)",
            "org.apache.jena.shared.ReadDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)",
            "org.apache.jena.shared.UpdateDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleEventDump:void triple(int,int,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:void emitTriple(int,int,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.enhanced.Polymorphic:void addView(org.apache.jena.enhanced.Polymorphic)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Literal getLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Literal getDefaultLiteral()",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal getLiteral(int)",
            "org.apache.jena.rdf.model.impl.StatementBase:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.StatementBase:byte getByte()",
            "org.apache.jena.rdf.model.impl.StatementBase:short getShort()",
            "org.apache.jena.rdf.model.impl.StatementBase:int getInt()",
            "org.apache.jena.rdf.model.impl.StatementBase:long getLong()",
            "org.apache.jena.rdf.model.impl.StatementBase:char getChar()",
            "org.apache.jena.rdf.model.impl.StatementBase:float getFloat()",
            "org.apache.jena.rdf.model.impl.StatementBase:double getDouble()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String getString()",
            "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String getLanguage()",
            "org.apache.jena.rdf.model.impl.StatementBase:boolean hasWellFormedXML()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Resource mustBeResource(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource getResource()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:void add(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.enhanced.EnhGraph:boolean isIsomorphicWith(org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.WrappedGraph:boolean isIsomorphicWith(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhGraph:boolean isIsomorphicWith(org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.graph.impl.WrappedGraph:boolean isIsomorphicWith(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean isIsomorphicWith(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean isIsomorphicWith(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.AssemblerHelp:void establish(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Resource,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:void runAnyAssemblerConstructor(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement,java.lang.Class)"
        ]
    },
    "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.assemblers.AssemblerGroup general()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.Assembler:void <clinit>()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content contentFromModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource getResourceWithType(java.lang.String,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.Class,org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void addSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addIncompatibleWith(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void setDistinctMembers(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void setAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void setOperands(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void setCardinalityQ(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void setCardinality(int)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void setOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void setHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void setMaxCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void setMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void setMinCardinalityQ(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void setMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass convertToEnumeratedClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass convertToIntersectionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass convertToUnionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass convertToComplementClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void setHasClassQ(org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void setOnProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction convertToAllValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction convertToSomeValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction convertToHasValueRestriction(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void setSomeValuesFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty convertToFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty convertToDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty convertToObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty convertToTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty convertToSymmetricProperty()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource newListCell(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList cons(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource setTailAux(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList setTail(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList 'with'(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)"
        ]
    },
    "org.apache.jena.reasoner.ReasonerRegistry:void register(java.lang.String,org.apache.jena.reasoner.ReasonerFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.ReasonerRegistry theRegistry()"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_0__99:void run()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeObject(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(boolean)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(long)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(char)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(double)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(float)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.Statement changeLiteralObject(int)"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void removeAllValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:void removeOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void removeHasValue(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void removeSuperClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSubClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void removeEquivalentClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void removeDisjointWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSuperProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSubProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeDomain(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeRange(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeEquivalentProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeInverseProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeSameAs(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeDifferentFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeSeeAlso(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeDefinedBy(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void removeRDFType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:void removeOntClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void removeImport(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void removeBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void removePriorVersion(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void removeIncompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void removeHasClassQ(org.apache.jena.ontology.DataRange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:void removeOnProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void removeSomeValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource removeProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:void remove()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList removeHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList remove(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void read(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String toBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx resolveIRI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIxResolver$Builder:org.apache.jena.irix.IRIxResolver$Builder base(java.lang.String)",
            "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIxResolver$Builder create(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String)",
            "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve0(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx reference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String checkEx(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx establishBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.SystemIRIx:void <clinit>()"
        ]
    },
    "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx setupBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.SystemIRIx:void setProvider(org.apache.jena.irix.IRIProvider)",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx establishBaseURI()"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode convertTo(java.lang.Class)",
            "org.apache.jena.enhanced.Personality:java.lang.Object newInstance(java.lang.Class,org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void <init>(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:int processSpecials(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext xml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromID(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void <init>(org.apache.jena.rdfxml.xmlinput.states.WantsObjectFrameI,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI nextFrame(org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,int,int,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void initParse(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.RDFCollection:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.Reader)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void load(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.DOM2Model:void load(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLStreamReader,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.graph.Graph generateGraph(org.apache.jena.ontology.OntModelSpec,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.reasoner.InfGraph cloneWithPremises(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void addSubModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void removeSubModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.graph.impl.TransactionHandlerBase:java.lang.Object calculate(java.util.function.Supplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:java.lang.Object calculateInTxn(java.util.function.Supplier)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FrameObject:void close()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FrameObject:void close()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void close()"
        ]
    },
    "org.apache.jena.util.iterator.WrappedIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.CompositionBase$1:void close()",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String selectLang(org.apache.jena.rdf.model.StmtIterator,java.lang.String)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAnyThenClose(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean containsAllThenClose(org.apache.jena.rdf.model.StmtIterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersect(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource getPropertyResourceValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void findInfiniteCycles()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void close()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.iterator.ExtendedIterator:void forEach(java.util.function.Consumer)",
            "org.apache.jena.util.iterator.LazyIterator:void close()",
            "org.apache.jena.util.iterator.MapFilterIterator:void close()",
            "org.apache.jena.util.iterator.NiceIterator:void close(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findFull(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.reasoner.rulesys.impl.Generator lambda$generatorFor$1(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph getPreload()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.BaseInfGraph:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model implementCreateModelOver(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel getImportedModel(java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(java.lang.String)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_listSubModels_2__19:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.reasoner.rulesys.Rule$Parser loadRuleParserFromResourceFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:java.util.List loadRules(java.lang.String)"
        ]
    },
    "org.apache.jena.graph.compose.Dyadic:org.apache.jena.graph.compose.Union union(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createUnion(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ModelCollector$UnionModelCollector$createUnion__101:java.lang.Object apply(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter,org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern,java.util.List,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void init(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:void loadSchema(org.apache.jena.graph.Graph,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.FileManagerAssembler:org.apache.jena.util.LocationMapper getLocationMapper(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec getOntModelSpec(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.rdf.model.ModelGetter getModelSource(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntDocumentManager getDocumentManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotConstructException:void <init>(java.lang.Class,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:void checkType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotHaveRulesException:void <init>(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addRules(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)"
        ]
    },
    "org.apache.jena.assembler.exceptions.CannotLoadClassException:void <init>(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.ClassNotFoundException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Class loadClass(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.exceptions.NoImplementationException:void <init>(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.exceptions.NotUniqueException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Statement getUniqueStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.RDFNode getUnique(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.exceptions.PropertyRequiredException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getRequiredResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getRequiredLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.exceptions.UnknownEncodingException:void <init>(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.exceptions.UnknownReasonerException:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.BadObjectException:void <init>(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.assembler.ImportManager:java.lang.String getObjectURI(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(org.apache.jena.rdf.model.Statement[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.ontology.OntDocumentManager createDocumentManager()",
            "org.apache.jena.ontology.OntDocumentManager:void <init>()"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void setMetadataSearchPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode objectAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.rdf.model.RDFList getDistinctMembers()",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.rdf.model.RDFList getOperands()",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.ontology.OntClass getOperand()",
            "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSuperClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getEquivalentClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getDisjointWith()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource objectAsResource(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntProperty objectAsProperty(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.OntProperty getOnProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:int objectAsInt(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:int getCardinalityQ()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:int getCardinality()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:int getMaxCardinalityQ()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:int getMaxCardinality()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:int getMinCardinalityQ()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:int getMinCardinality()"
        ]
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal getLiteral(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.RDFNode getObject(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int,org.apache.jena.rdf.model.ResourceF)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getStatementProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.ModelCollector$IntersectionModelCollector$intersection__103:java.lang.Object apply(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$3(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.shared.PrefixMapping$JenaLockedException:void <init>(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.shared.impl.PrefixMappingImpl:void checkUnlocked()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model writeAll(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:org.apache.jena.rdf.model.RDFNode next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:boolean hasNext()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:boolean containsByFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.GraphUtil:int compareSizeTo(org.apache.jena.graph.Graph,int)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:boolean hasNext()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BBRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETERuleContext:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:boolean hasNext()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.reasoner.FinderUtil$Cascade:boolean contains(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.Map1Iterator:boolean hasNext()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator:void ensureHasNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:boolean hasNext()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void checkNotNil(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode getHead()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode setHead(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList setTail(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode get(int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFNode replace(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList removeHead()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:boolean contains(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:boolean hasDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.DataRangeImpl:boolean hasOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:boolean hasOneOf(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:void removeDistinctMember(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void removeOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:void removeOneOf(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:void removeOneOf(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:boolean contains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAnnotationProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(org.apache.jena.rdf.model.Resource,java.lang.Class)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(org.apache.jena.rdf.model.Property,java.lang.Class)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Selector)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:java.util.stream.Stream stream(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Graph:org.apache.jena.util.iterator.ExtendedIterator find()",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listSubjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listPredicates(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:org.apache.jena.util.iterator.ExtendedIterator listObjects(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node getPropValue(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeGlobal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager get()"
        ]
    },
    "org.apache.jena.util.LocationMapper:org.apache.jena.util.LocationMapper get()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.assembler.Content objectAsContent(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.rdf.model.Model loadModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:boolean read(org.apache.jena.rdf.model.Model,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager$1:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDDateTimeType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDateType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDayTimeDurationType:void <init>()",
            "org.apache.jena.datatypes.xsd.impl.XSDDayType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDDurationType:void <init>()",
            "org.apache.jena.datatypes.xsd.impl.XSDMonthDayType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDMonthType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDYearMonthDurationType:void <init>()",
            "org.apache.jena.datatypes.xsd.impl.XSDYearMonthType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.impl.XSDYearType:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDByteType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDouble:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.datatypes.xsd.impl.XSDFloat:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.datatypes.xsd.impl.XSDPlainType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.impl.XSDPlainType:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()",
            "org.apache.jena.datatypes.xsd.XSDbinary:void <init>(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:void loadXSDSimpleTypes(org.apache.jena.datatypes.TypeMapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.TypeMapper:void reset()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:int hashCode()",
            "org.apache.jena.ext.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:int getDefaultHashcode()",
            "org.apache.jena.graph.Node:int hashCode()",
            "org.apache.jena.mem.HashCommon:int initialIndexFor(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:int hashCode()",
            "org.apache.jena.util.OneToManyMap$Entry:int hashCode()"
        ]
    },
    "org.apache.jena.graph.Node_Literal:boolean sameValueAs(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node_Literal:boolean matches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple$Field$2:boolean lambda$filterOn$0(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean sameValueAs(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Equal:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(int,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(int,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node[],org.apache.jena.graph.Node[])",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.impl.BindingStack)",
            "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:boolean bind(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:boolean unify(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RETEClauseFilter:void fire(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Node_RuleVariable:boolean sameNodeAs(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.TriplePattern:boolean compatibleWith(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.TriplePattern:boolean variantOf(org.apache.jena.graph.Node,org.apache.jena.graph.Node,java.util.Map)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitHead(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.rulesys.Functor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getUniqueResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getUniqueLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getRequiredResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getRequiredLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getUniqueString(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.assembler.Content objectAsContent(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.Assembler content()",
            "org.apache.jena.assembler.assemblers.AssemblerBase$lambda_getUnique_0__1:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.CollectionGraph:org.apache.jena.graph.Node fixupNode(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:void <clinit>()",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createBlankNode()",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createTripleNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal literal(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.graph.Node makeURI(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource()",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.AnonId,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.graph.Node fresh(java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.StatementBase:org.apache.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createStringLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createLangLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:org.apache.jena.rdf.model.Literal literal(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeSkolem:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void main(java.lang.String[])",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.Functor:org.apache.jena.graph.Node makeFunctorNode(org.apache.jena.reasoner.rulesys.Functor)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeIntNode(int)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeLongNode(long)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeDoubleNode(double)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.graph.Node makeDirect(org.apache.jena.graph.Node)",
            "org.apache.jena.ttl.turtle.LabelToNodeMap:org.apache.jena.graph.Node allocNode()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void <init>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralInteger(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDouble(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDecimal(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createVariable(java.lang.String,int,int)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createNode(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:void initSyntaxCheckerClass()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:void <clinit>()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model implementCreateModelOver(java.lang.String)",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getRawModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model removeAll(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:boolean contains(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsFor(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.util.iterator.ExtendedIterator findTriplesFrom(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model asModel(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model query(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model union(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersection(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersect(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:void <clinit>()",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel()",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model makeModel(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createDefaultModel()",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createModelForGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.rdf.model.impl.ModelCom$lambda_asTriples_0__12:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_listHierarchyRootClasses_0__16:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void <init>()",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsXML(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)",
            "org.apache.jena.assembler.assemblers.DefaultModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.MemoryModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource oneLevelClone(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model complete(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel getImportedModel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getBaseModel()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model createBaseModel()",
            "org.apache.jena.ontology.OntModelSpec:void <clinit>()",
            "org.apache.jena.rdf.model.impl.MemoryModelGetter:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model createWorkModel()",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <clinit>()",
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extract(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extractInto(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel()",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(java.lang.String)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createUnion(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.StmtIterator:org.apache.jena.rdf.model.Model toModel()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.ReasonerRegistry:void <init>()",
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.rdf.model.Model createDefaultModel()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelWorker(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)",
            "org.apache.jena.util.LocationMapper:org.apache.jena.rdf.model.Model toModel()",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.vocabulary.DCAT:void <clinit>()",
            "org.apache.jena.vocabulary.DCTerms:void <clinit>()",
            "org.apache.jena.vocabulary.DCTypes:void <clinit>()",
            "org.apache.jena.vocabulary.DC_11:void <clinit>()",
            "org.apache.jena.vocabulary.ORG:void <clinit>()",
            "org.apache.jena.vocabulary.OWLResults:void <clinit>()",
            "org.apache.jena.vocabulary.OWLTest:void <clinit>()",
            "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()",
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()",
            "org.apache.jena.vocabulary.RDFTest:void <clinit>()",
            "org.apache.jena.vocabulary.ROV:void <clinit>()",
            "org.apache.jena.vocabulary.SKOS:void <clinit>()",
            "org.apache.jena.vocabulary.SKOSXL:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifest:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifestX:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD4:void <clinit>()",
            "org.apache.jena.vocabulary.VOID:void <clinit>()",
            "org.apache.jena.util.ModelCollector$createDefaultModel__100:java.lang.Object get()",
            "org.apache.jena.util.ModelCollector$UnionModelCollector$createUnion__101:java.lang.Object apply(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager getInternal()",
            "org.apache.jena.util.FileManager:void setGlobalFileManager(org.apache.jena.util.FileManager)",
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager create()",
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager createStd()",
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager create(org.apache.jena.util.LocationMapper)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager get()",
            "org.apache.jena.util.FileManagerImpl:void setGlobalFileManager(org.apache.jena.util.FileManager)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeStd()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager clone(org.apache.jena.util.FileManagerImpl)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeGlobal()",
            "org.apache.jena.util.FileManagerImpl:void addLocator(org.apache.jena.util.Locator)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelInternal(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModel(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelWorker(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelInternal(org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model readModelWorker(org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:java.io.InputStream open(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:java.lang.String mapURI(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:void <clinit>()",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$Frame:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(org.apache.jena.rdf.model.Statement[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.SimpleSelector:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setBlockRules(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:java.lang.Object accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)"
        ]
    },
    "org.apache.jena.graph.impl.GraphMatcher$AnonResource$StatementWrapper:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.GraphPlain:boolean lambda$find$0(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphPlain$lambda_find_0__81:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.Triple$Field$2$lambda_filterOn_0__26:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean match(org.apache.jena.reasoner.TriplePattern,org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.BindingStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.GenericTripleMatchFrame:boolean bindResult(org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.StateFlag nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:boolean nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.GenericTripleMatchFrame:boolean functorMatch(org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.GenericTripleMatchFrame:boolean bindResult(org.apache.jena.graph.Triple,org.apache.jena.reasoner.rulesys.impl.LPInterpreter)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Functor:boolean sameAs(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean sameAs(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.TriplePattern:boolean variantOf(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.Triple:boolean matches(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ArrayBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.HashedTripleBunch:int findSlotBySameValueAs(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.SafeGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.mem.ArrayBunch:boolean contains(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean contains(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.ArrayBunch:void remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:void remove(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.HashedTripleBunch:void remove(java.lang.Object)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem$NotifyMe:void emptied()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ArrayBunch$2:void remove()",
            "org.apache.jena.mem.HashCommon$BasicKeyIterator:void remove()",
            "org.apache.jena.mem.HashCommon$MovedKeysIterator:void remove()"
        ]
    },
    "org.apache.jena.mem.GraphTripleStoreBase:void delete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphMem:void performDelete(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:java.util.Iterator iterator(java.lang.Object,org.apache.jena.mem.HashCommon$NotifyEmpty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()"
        ]
    },
    "org.apache.jena.mem.GraphTripleStoreBase:boolean containsByEquality(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.GraphTripleStoreBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphMem:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMap:java.util.Iterator iteratorForIndexed(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase$1:java.util.Iterator iteratorFor(java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapMem:java.util.Iterator iteratorForIndexed(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.GraphTripleStoreBase$1:java.util.Iterator iteratorFor(java.lang.Object)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.jena.ext.xerces.impl.dv.XSFacets,short,short,org.apache.jena.ext.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDateTimeStampType:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDayTimeDurationType:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDouble:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDFloat:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDYearMonthDurationType:java.lang.Object parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.BaseDatatype:boolean isValid(java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.jena.mem.NodeToTriplesMapBase:java.lang.Object getIndexField(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMap:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean remove(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean contains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.NamedModelAssembler:java.lang.String getModelName(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:org.apache.jena.shared.PrefixMapping getPrefixes(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getString(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getUniqueString(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.Class loadClassNamedBy(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.ImportManager:java.lang.String getObjectURI(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:byte getByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:byte getByte()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:short getShort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:short getShort()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:int getInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:int getInt()",
            "org.apache.jena.reasoner.rulesys.Util:java.lang.Integer getIntegerPredicate(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:long getLong()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:long getLong()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:float getFloat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:float getFloat()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:double getDouble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:double getDouble()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String lambda$listVersionInfo$2(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultString()",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator:boolean lambda$new$0(java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator$lambda_new_0__39:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleWriter:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleWriter:void writeNode(org.apache.jena.rdf.model.RDFNode,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wValueString(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.ttl.turtle.Turtle2NTriples:void triple(int,int,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:void emitTriple(int,int,org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:java.lang.Object convertTo(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.Polymorphic:java.lang.Object asInternal(java.lang.Class)"
        ]
    },
    "org.apache.jena.enhanced.EnhGraph:org.apache.jena.rdf.model.RDFNode getNodeAs(org.apache.jena.graph.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$NodeCanAs:boolean test(org.apache.jena.graph.Node)",
            "org.apache.jena.ontology.impl.OntModelImpl$SubjectNodeCanAs:boolean test(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource findByURIAs(java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByDefiningPropertyAs$5(java.lang.Class,org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByTypeAs$4(java.lang.Class,org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByTypeAs$3(java.lang.Class,org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty lambda$listAnnotationProperties$1(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Literal asLiteral(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource asResource(org.apache.jena.graph.Node,java.lang.Class,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode asRDFNode(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource wrapAsResource(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:void setDistinctMembers(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void removeDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent(org.apache.jena.rdf.model.RDFList)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.rdf.model.RDFList getDistinctMembers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.util.iterator.ExtendedIterator listDistinctMembers()",
            "org.apache.jena.ontology.impl.AllDifferentImpl:boolean hasDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void removeDistinctMember(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void setAllValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:boolean hasAllValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:int getCardinalityQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:int getCardinality()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:void setOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.ontology.OntClass getOperand()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.rdf.model.Property operator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.DataRangeImpl:void removeOneOf(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.RDFList getOneOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.util.iterator.ExtendedIterator listOneOf()",
            "org.apache.jena.ontology.impl.DataRangeImpl:boolean hasOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void removeOneOf(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void removeOneOf(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.rdf.model.RDFList getOneOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOneOf()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:boolean hasOneOf(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void removeOneOf(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void setHasValue(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl:boolean hasValue(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IntersectionClassImpl:org.apache.jena.rdf.model.Property operator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void setOperands(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.rdf.model.RDFList getOperands()"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:int getMaxCardinalityQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:int getMaxCardinality()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:int getMinCardinalityQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:int getMinCardinality()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void setSuperClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void addSuperClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addSubClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSuperClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void setEquivalentClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void addEquivalentClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getEquivalentClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasEquivalentClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void setDisjointWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void addDisjointWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getDisjointWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDisjointWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isDisjointWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isEnumeratedClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isUnionClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isIntersectionClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean isComplementClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass convertToEnumeratedClass(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass convertToIntersectionClass(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass convertToUnionClass(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass convertToComplementClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setSuperProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addSuperProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSubProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSuperProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSuperProperty(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSubProperty(org.apache.jena.rdf.model.Property,boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setDomain(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addDomain(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getDomain()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasDomain(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setRange(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addRange(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getRange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listRange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasRange(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setEquivalentProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addEquivalentProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getEquivalentProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasEquivalentProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void setInverseOf(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addInverseOf(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseOf(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty convertToFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty convertToDatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty convertToObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty convertToTransitiveProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty convertToSymmetricProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasInverse()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listReferringRestrictions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setSameAs(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addSameAs(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getSameAs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSameAs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isSameAs(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setDifferentFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addDifferentFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getDifferentFrom()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDifferentFrom()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDifferentFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setSeeAlso(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addSeeAlso(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getSeeAlso()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasSeeAlso(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setIsDefinedBy(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addIsDefinedBy(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getIsDefinedBy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDefinedBy(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listVersionInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAnnotationProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntology()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDataRange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAllDifferent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void checkProfile(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isEnumeratedClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isUnionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isIntersectionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isComplementClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode objectAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int objectAsInt(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removePropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isAllValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isSomeValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isHasValueRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMinCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMaxCardinalityRestriction()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()"
        ]
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void setImport(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void addImport(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getImport()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listImports()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:boolean imports(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void setBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void addBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getBackwardCompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listBackwardCompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:boolean isBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void setPriorVersion(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void addPriorVersion(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getPriorVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listPriorVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:boolean hasPriorVersion(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void setIncompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void addIncompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getIncompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listIncompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntologyImpl:boolean isIncompatibleWith(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void setHasClassQ(org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.OntClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean hasHasClassQ(org.apache.jena.ontology.DataRange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:void setOnProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(java.lang.String,org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.OntProperty getOnProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean onProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isAllValuesFromRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isSomeValuesFromRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isHasValueRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMinCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMaxCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction convertToAllValuesFromRestriction(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction convertToSomeValuesFromRestriction(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction convertToHasValueRestriction(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void setSomeValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:boolean hasSomeValuesFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.UnionClassImpl:org.apache.jena.rdf.model.Property operator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void setOperands(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.rdf.model.RDFList getOperands()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$LangTagFilter:boolean test(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$LangTagFilter:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator:boolean lambda$new$0(java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator$lambda_new_0__43:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.NodeIterator listPropertyValues(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentClasses()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDisjointWith()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentProperties()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDifferentFrom()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listImports()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listIncompatibleWith()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getHasRuleStatements(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getRuleSetURLStatements(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.util.iterator.ExtendedIterator listProperties(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$1:org.apache.jena.rdf.model.Resource accept(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$1:java.lang.Object accept(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.EnvironmentFrame:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleSyntaxException:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBodyPut(org.apache.jena.graph.Node,int,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void emitBody(org.apache.jena.reasoner.rulesys.Functor)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void compile(org.apache.jena.reasoner.rulesys.impl.LPRuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPRuleSyntaxException:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.Rule,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void incrementProfile(org.apache.jena.reasoner.rulesys.impl.RuleClauseCode)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void addBRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:void deleteBRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BuiltinException:void <init>(org.apache.jena.reasoner.rulesys.Builtin,org.apache.jena.reasoner.rulesys.RuleContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:void checkArgs(int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Hide:void doHide(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeInstance:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:void headAction(org.apache.jena.graph.Node[],org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NoValue:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Regex:java.lang.String getString(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.StrConcat:java.lang.String lex(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.UriConcat:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:boolean allMonotonic(org.apache.jena.reasoner.rulesys.ClauseEntry[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.ClauseEntry[],org.apache.jena.reasoner.rulesys.ClauseEntry[])"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RuleDerivation:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.RDFLangString:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFhtml:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.RDFjson:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDTimeType:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.datatypes.BaseDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.jena.ext.xerces.impl.dv.ValidationContext,org.apache.jena.ext.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.xs.XSObjectList getFacets()",
            "org.apache.jena.ext.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String getLexicalForm()",
            "org.apache.jena.graph.Node:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Triple:java.lang.String toString(org.apache.jena.shared.PrefixMapping,boolean)",
            "org.apache.jena.graph.Node_Variable:java.lang.String toString()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.HasNoModelException:void <init>(java.lang.Object)",
            "org.apache.jena.rdf.model.SimpleSelector:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.reasoner.rulesys.FunctorDatatype:java.lang.String unparse(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:void updateParameter(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:boolean samePrefixMappingAs(org.apache.jena.shared.PrefixMapping)"
        ]
    },
    "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:void <init>(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void setFileManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void setFileManager(org.apache.jena.util.FileManager)",
            "org.apache.jena.ontology.OntDocumentManager:void reset(boolean)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator[] getGDVs()",
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:void <init>()",
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setDefaultErrorMode()",
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:org.apache.jena.rdfxml.xmlinput.ARPOptions copy()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFTrailer(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeDescriptionTrailer(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeStart(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeEnd(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void printRdfAt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wAboutAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wNodeIDAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wTypeAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseCollection()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseLiteral()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wDatatype(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseResource()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String startElementTag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$3:void wTypeStart(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String attributeTag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wQNameAttr(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String endElementTag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$3:void wTypeEnd(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void PropertyListNotEmpty(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void TriplesSameSubject()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void PropertyList(org.apache.jena.graph.Node)",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNodePropertyList()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.RDFNode readNode()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:char readUnicode4Escape()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()",
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readURI()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:boolean badEOF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()",
            "org.apache.jena.rdf.model.impl.NTripleReader:char readUnicode4Escape()",
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readURI()",
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readName()",
            "org.apache.jena.rdf.model.impl.NTripleReader:boolean expect(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:boolean expect(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()",
            "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readURI()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void error(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrAll(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.apache.jena.rdfxml.xmlinput.impl.ARPLocation,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkIdSymbol(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void generalError(int,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$2(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_2__94:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$1(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_1__98:void run()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler$1:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.Content:boolean isEmpty()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.FileManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelSourceAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Model openModel(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object openBySpecificType(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isBag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isSeq()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.enhanced.Polymorphic:java.lang.Object asInternal(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode viewAs(java.lang.Class)",
            "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode as(java.lang.Class)"
        ]
    },
    "org.apache.jena.enhanced.Polymorphic:boolean alreadyHasView(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhNode:boolean canSupport(java.lang.Class)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement lambda$findReifiedStatements$1(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier$lambda_findReifiedStatements_1__38:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement lambda$findReifiedStatements$0(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier$lambda_findReifiedStatements_0__37:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement create(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RSIterator listReifiedStatements(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.RSIterator listReifiedStatements()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.RSIterator listReifiedStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RSIterator listReifiedStatements()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValue(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyElt(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator pleasingTypeIterator()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.ResIterator modelListSubjects()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listResourcesWithProperty(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsOfProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.NodeIterator listObjectsOfProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.String getPath(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getRequiredResource(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.String getLanguage(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntModelSpec getDefault(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Literal getRequiredLiteral(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean lambda$listSubjects$1(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$lambda_listSubjects_1__87:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Verb()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void PropertyListNotEmpty(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wAboutAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAboutAttrOpt(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceNodeIDAttr(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wTypeAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.shared.AddDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.DeleteDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.ReadDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.UpdateDeniedException:void <init>(java.lang.String,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementBase:byte getByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:byte getDefaultByte()",
            "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:short getShort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:short getDefaultShort()",
            "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:int getInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:int objectAsInt(org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.AltImpl:int getDefaultInt()",
            "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:long getLong()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:long getDefaultLong()",
            "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:float getFloat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:float getDefaultFloat()",
            "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:double getDouble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:double getDefaultDouble()",
            "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:java.lang.String getDefaultLanguage()",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:boolean hasWellFormedXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementBase:boolean getWellFormed()"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource getResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Resource getDefaultResource()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int indexOf(org.apache.jena.rdf.model.RDFNode,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:boolean sameListAs(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource setTailAux(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wObj(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNode(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:void runAnyAssemblerConstructor(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClass(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.Assembler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.Assembler:void <clinit>()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.Class,org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Ontology createOntology(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual createIndividual(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual createIndividual(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty createAnnotationProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(java.lang.String,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent(org.apache.jena.rdf.model.RDFList)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void addRDFType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:void addOntClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void setOperands(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void removeOperand(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void setRDFType(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl:void setOntClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.ReasonerRegistry theRegistry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_0__99:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void exec(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.lang.Runnable)",
            "org.apache.jena.graph.impl.TransactionHandlerBase:void execute(java.lang.Runnable)",
            "org.apache.jena.rdf.model.impl.ModelCom:void executeInTxn(java.lang.Runnable)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void removeSubClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSubProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IndividualImpl:void removeOntClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.compose.CompositionBase$1:void remove()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1$NotifyMe:void emptied()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:void remove()",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:void remove()",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.util.iterator.LazyIterator:void remove()",
            "org.apache.jena.util.iterator.Map1Iterator:void remove()",
            "org.apache.jena.util.iterator.MapFilterIterator:void remove()",
            "org.apache.jena.util.iterator.NiceIterator$1:void remove()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.WrappedIterator:void remove()"
        ]
    },
    "org.apache.jena.irix.IRIxResolver$Builder:org.apache.jena.irix.IRIxResolver$Builder base(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIxResolver$Builder create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIxResolver resolver(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:java.lang.String checkEx(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:boolean check(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.SystemIRIx:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx getSystemBase()",
            "org.apache.jena.irix.IRIs:java.lang.String getBaseStr()",
            "org.apache.jena.irix.IRIx:org.apache.jena.irix.IRIx create(java.lang.String)",
            "org.apache.jena.irix.SystemIRIx:void setProvider(org.apache.jena.irix.IRIProvider)",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIProvider getProvider()",
            "org.apache.jena.irix.SystemIRIx:void strictMode(java.lang.String,boolean)",
            "org.apache.jena.irix.SystemIRIx:boolean isStrictMode(java.lang.String)",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx getSystemBase()",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx establishBaseURI()",
            "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx setupBase(java.lang.String)",
            "org.apache.jena.irix.SystemIRIx:void setSystemBase(org.apache.jena.irix.IRIx)",
            "org.apache.jena.irix.SystemIRIx:void <clinit>()",
            "org.apache.jena.sys.InitJenaCore:void init()"
        ]
    },
    "org.apache.jena.irix.SystemIRIx:void setProvider(org.apache.jena.irix.IRIProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.LookingForRDF:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.StartStateRDForDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.LookingForRDF:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI nextFrame(org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,int,int,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void initParse(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void parse(org.xml.sax.InputSource,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void initParse(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void load(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XMLLiteralType:boolean isValid(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RETERuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model readDelegate(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:java.lang.Object calculateInTxn(java.util.function.Supplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$5(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$4(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.FrameObject:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:void close()",
            "org.apache.jena.reasoner.rulesys.impl.FrameObject:void close()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void close()",
            "org.apache.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame:void close()",
            "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:void close()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleInfGraph:void <init>(org.apache.jena.reasoner.Reasoner,java.util.List,org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.util.ModelCollector$UnionModelCollector$createUnion__101:java.lang.Object apply(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$3(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.reasoner.rulesys.impl.Generator lambda$generatorFor$0(org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void <init>(org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine,org.apache.jena.reasoner.TriplePattern,boolean)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.TripleMatchFrame:void <init>(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void setupTripleMatchCall(int,int)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model assembleModelFrom(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.Class loadClass(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactoryByClassName(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.assembler.ImportManager:java.lang.String getObjectURI(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ImportManager:void addImportedGraphs(org.apache.jena.util.FileManager,java.util.Set,org.apache.jena.rdf.model.StmtIterator,org.apache.jena.graph.compose.MultiUnion)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.ontology.OntDocumentManager createDocumentManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntDocumentManager getInstance()"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.rdf.model.RDFList getOperands()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void removeOperand(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource objectAsResource(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getRange()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getDifferentFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getImport()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getIncompatibleWith()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntProperty objectAsProperty(org.apache.jena.rdf.model.Property,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSuperProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getEquivalentProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$3(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_3__97:java.lang.Object get()"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:void checkUnlocked()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping clearNsPrefixMap()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl$RDFListIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode,org.apache.jena.ontology.OntModel)",
            "org.apache.jena.assembler.exceptions.AmbiguousSpecificTypeException:java.lang.String nice(java.util.List)",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String frameStrings()",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleRoot(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.Content:org.apache.jena.rdf.model.Model fill(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.Content:boolean isEmpty()",
            "org.apache.jena.assembler.ModelExpansion:void addSubClassClosure(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.enhanced.BuiltinPersonalities:void listPersonalities(java.io.PrintWriter)",
            "org.apache.jena.ext.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.jena.graph.compose.CompositionBase$1:java.lang.Object next()",
            "org.apache.jena.graph.compose.MultiUnion:boolean graphBaseContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Polyadic:void <init>(java.util.Iterator)",
            "org.apache.jena.graph.compose.Polyadic:void close()",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsPrefixURI(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String getNsURIPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String expandPrefix(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String shortForm(java.lang.String)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:java.lang.String qnameFor(java.lang.String)",
            "org.apache.jena.graph.impl.GraphBase:int graphBaseSize()",
            "org.apache.jena.graph.impl.GraphBase:java.lang.String toString(java.lang.String,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:int myHashCode()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonResource:java.util.Set wrapStatements()",
            "org.apache.jena.graph.impl.GraphMatcher$AnonStatement:void <init>(org.apache.jena.graph.impl.GraphMatcher,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher$Bucket:org.apache.jena.graph.impl.GraphMatcher$AnonResource aMember()",
            "org.apache.jena.graph.impl.GraphMatcher:int hashCode(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.Node[][] match(org.apache.jena.graph.impl.GraphMatcher)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean bind()",
            "org.apache.jena.graph.impl.GraphMatcher:java.util.Set obligBindings()",
            "org.apache.jena.graph.impl.GraphMatcher:void unbindAll(java.util.Set)",
            "org.apache.jena.graph.impl.GraphMatcher:int prepare(org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:org.apache.jena.graph.impl.GraphMatcher$Bucket smallestBucket()",
            "org.apache.jena.graph.impl.GraphMatcher:int rehash0(int)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean lambda$scanBuckets$0(org.apache.jena.graph.impl.GraphMatcher$Bucket)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteList(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteIterator(org.apache.jena.graph.Graph,java.util.List)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyEvent(org.apache.jena.graph.Graph,java.lang.Object)",
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.GraphUtil:void deleteLoopDst(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.irix.IRIProviderJenaIRI:org.apache.jena.iri.IRI exceptions(org.apache.jena.iri.IRI,java.lang.String)",
            "org.apache.jena.mem.HashedTripleBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.NodeToTriplesMap:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:org.apache.jena.graph.Triple next()",
            "org.apache.jena.mem.NodeToTriplesMapBase$1:boolean hasNext()",
            "org.apache.jena.mem.ObjectIterator:void refillPending()",
            "org.apache.jena.mem.SetBunch:void <init>(org.apache.jena.mem.TripleBunch)",
            "org.apache.jena.mem.SetBunch:boolean slowContains(org.apache.jena.graph.Triple)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMembers(java.util.Iterator)",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:void addOperands(java.util.Iterator)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(java.util.Iterator)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:int countSubModels()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource,java.util.Iterator)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(java.util.Iterator,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getRDFType(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:int getCardinality(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void addedStatements(java.util.List)",
            "org.apache.jena.rdf.listeners.StatementListener:void removedStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ContNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:void updateNamespace(java.util.Set,java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asTriples(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:int size()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void apply(org.apache.jena.rdf.model.RDFList$ApplyFn)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.lang.Object reduce(org.apache.jena.rdf.model.RDFList$ReduceFn,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void removeList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:java.util.List asJavaList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node getObject(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean exactlyOne(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void triplesToZap(org.apache.jena.graph.Graph,java.util.Collection,org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.SeqNodeIteratorImpl:org.apache.jena.rdf.model.RDFNode next()",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void endBnodeScope()",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitEE(javax.xml.stream.events.EndElement)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:org.xml.sax.Attributes convertAttrs(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromGivenNamespaces(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String getPrefixFor(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.util.Set,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void clearX(java.lang.Object,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:void transitiveClosure()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:java.util.Set getDiagonal()",
            "org.apache.jena.rdfxml.xmloutput.impl.Relation:org.apache.jena.rdfxml.xmloutput.impl.Relation copy()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrSome(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropertyEltStar(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean allPropsAreAttr(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void closeAllResIterators()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.CountLiteralValues:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean listEqual(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void flushPending()",
            "org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet:void putAll(org.apache.jena.reasoner.rulesys.impl.BindingVectorMultiSet)",
            "org.apache.jena.reasoner.rulesys.impl.ChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void setComplete()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void notifyResults()",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void checkForCompletions(java.util.Collection)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:org.apache.jena.reasoner.rulesys.impl.Generator$LFlag runCompletionCheck(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void postCompletionCheckScan(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.Generator:void propagateLive(java.util.Set)",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void halt()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkSafeToUpdate()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void checkForCompletions()",
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void printProfile()",
            "org.apache.jena.reasoner.rulesys.impl.LPRuleStore:void compileAll()",
            "org.apache.jena.reasoner.rulesys.impl.LPTopGoalIterator:boolean isReady()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void add(org.apache.jena.reasoner.rulesys.Rule,org.apache.jena.reasoner.rulesys.BindingEnvironment,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void <init>(org.apache.jena.reasoner.rulesys.ForwardRuleInfGraphI,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void fastInit(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void setRuleStore(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void compile(java.util.List,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void testTripleInsert(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessAxioms()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.RETEQueue:void fire(org.apache.jena.reasoner.rulesys.impl.BindingVector,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState:void classifyVariables(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void checkAll(java.util.Iterator,org.apache.jena.reasoner.TriplePattern,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:void restart()",
            "org.apache.jena.reasoner.rulesys.impl.SafeTripleIterator:org.apache.jena.graph.Triple next()",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void addBRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performDatatypeRangeValidation(org.apache.jena.reasoner.StandardValidityReport)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport$Report checkLiteral(org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.List extractPureBackwardRules(java.util.List)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:boolean preloadDeductions(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromStrings(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:void addRulesFromURLs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.InfGraph bind(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doGetPropValue(org.apache.jena.util.iterator.ClosableIterator)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$1:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,org.apache.jena.reasoner.transitiveReasoner.GraphNode)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$2:java.util.List visit(org.apache.jena.reasoner.transitiveReasoner.GraphNode,org.apache.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,java.lang.Object)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode$Leader:void addSuccessors(org.apache.jena.graph.Node,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,java.util.ArrayList)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void doVisitPredecessors(org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor,java.lang.Object,java.lang.Object,java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:void makeLeadNodeFor(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.util.List triplesForSuccessors(org.apache.jena.graph.Node,boolean,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.GraphNode:java.lang.String dumpSet(java.util.Set)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache$GraphWalker:void walkOne()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void processDeletes()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:boolean cacheAll(org.apache.jena.reasoner.Finder,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache deepCopy()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:void setCaching(boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache:java.lang.String dump()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:void regenerateReverseMapping()",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:java.util.Map$Entry findMapping(java.lang.String,boolean)",
            "org.apache.jena.util.iterator.ExtendedIterator:java.util.Optional nextOptional()",
            "org.apache.jena.util.iterator.LazyIterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()",
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()",
            "org.apache.jena.util.iterator.NiceIterator$1:java.lang.Object next()",
            "org.apache.jena.util.iterator.NiceIterator:java.lang.Object removeNext()",
            "org.apache.jena.util.iterator.NiceIterator:java.util.Set asSet(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.NiceIterator:java.util.List asList(org.apache.jena.util.iterator.ExtendedIterator)",
            "org.apache.jena.util.iterator.WrappedIterator:org.apache.jena.util.iterator.ExtendedIterator createIteratorIterator(java.util.Iterator)",
            "org.apache.jena.util.iterator.WrappedIterator:java.lang.Object next()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.TypedStream openNoMapOrNull(java.lang.String)",
            "org.apache.jena.util.IteratorCollection:java.util.Set iteratorToSet(java.util.Iterator)",
            "org.apache.jena.util.IteratorCollection:java.util.List iteratorToList(java.util.Iterator)",
            "org.apache.jena.util.LocationMapper:java.lang.String altMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:int hashCode()",
            "org.apache.jena.util.LocationMapper:boolean equals(java.lang.Object)",
            "org.apache.jena.util.LocationMapper:java.lang.String toString()",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.MonitorGraph:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)",
            "org.apache.jena.util.OneToManyMap:void <init>(org.apache.jena.util.OneToManyMap)",
            "org.apache.jena.util.OneToManyMap:boolean containsValue(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:java.util.Set entrySet()",
            "org.apache.jena.util.OneToManyMap:int hashCode()",
            "org.apache.jena.util.OneToManyMap:void putAll(java.util.Map)",
            "org.apache.jena.util.OneToManyMap:int size()",
            "org.apache.jena.util.OneToManyMap:java.util.Collection values()",
            "org.apache.jena.util.OneToManyMap:java.lang.String toString()",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMapping(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:org.apache.jena.shared.PrefixMapping calcInUsePrefixMappingTTL(org.apache.jena.graph.Graph,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set fullMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrefixMappingUtils:java.util.Set splitMethod(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.ResourceUtils:java.util.List maximalLowerElements(java.util.Iterator,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.util.ResourceUtils:boolean testResourceCovered(java.util.List,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:java.util.List removeEquiv(java.util.List,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:boolean hasDistinctMember(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:boolean hasOneOf(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:boolean hasOneOf(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphPlain:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.compose.Delta:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Difference:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.DisjointUnion:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Intersection:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator singleGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.MultiUnion:org.apache.jena.util.iterator.ExtendedIterator multiGraphFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.compose.Union:org.apache.jena.util.iterator.ExtendedIterator _graphBaseFind(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphMatcher:boolean containsSameTerm(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.WrappedGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findEither(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.FGraph:org.apache.jena.util.iterator.ExtendedIterator findWithContinuation(org.apache.jena.reasoner.TriplePattern,org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAnnotationProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByTypeAs(org.apache.jena.rdf.model.Resource,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntologies()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listObjectProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDatatypeProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listFunctionalProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listTransitiveProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listSymmetricProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseFunctionalProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listRestrictions()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllDifferent()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDataRanges()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByDefiningPropertyAs(org.apache.jena.rdf.model.Property,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listEnumeratedClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listUnionClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listComplementClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIntersectionClasses()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getIncomingProperty(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set subjectSet(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listInstances(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverse()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listReferringRestrictions()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.util.Iterator computeDirectValues(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,boolean,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.function.Function)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$Path findShortestPath(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.RDFNode,java.util.function.Predicate)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listLiteralStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement getProperty(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listBySubject(org.apache.jena.rdf.model.Container)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void checkValidProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.StmtIterator listProperties()",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeRDFStatements(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model query(org.apache.jena.rdf.model.Selector)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager getInternal()"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager$1:org.apache.jena.rdf.model.Model readModel(org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.jena.ext.xerces.util.SymbolHash)",
            "org.apache.jena.ext.xerces.impl.dv.xs.FullDVFactory:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.jena.ext.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.jena.ext.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()",
            "org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory:org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory getInstance()",
            "org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDateTimeType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDDateTimeStampType:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDateType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDayTimeDurationType:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDayType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDurationType:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDMonthDayType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDMonthType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDTimeType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDYearMonthDurationType:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDYearMonthType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDYearType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDByteType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.AssemblerHelp:java.lang.String getString(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:org.apache.jena.datatypes.RDFDatatype normalizeSubType(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalise(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeDecimal(java.math.BigDecimal)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeInteger(java.math.BigInteger)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <clinit>()",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object convertValidatedDataValue(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Number suitableInteger(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isBaseTypeCompatible(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void loadXSDSimpleTypes(org.apache.jena.datatypes.TypeMapper)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()",
            "org.apache.jena.datatypes.xsd.XSDDateTime:org.apache.jena.datatypes.xsd.XSDDatatype getNarrowedDatatype()",
            "org.apache.jena.datatypes.xsd.XSDDateTime:void narrowType(org.apache.jena.datatypes.xsd.XSDDatatype)",
            "org.apache.jena.datatypes.TypeMapper:void reset()",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.datatypes.RDFDatatype fixDatatype(org.apache.jena.datatypes.RDFDatatype,java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:java.lang.String toString(boolean)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean isStringValue(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)",
            "org.apache.jena.rdf.model.impl.Util:boolean isSimpleString(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.Util:boolean isSimpleString(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNumber(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void <init>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralInteger(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDouble(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteralDecimal(java.lang.String)",
            "org.apache.jena.vocabulary.XSD:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDByteType:void <init>(java.lang.String,java.lang.Class)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDouble:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDFloat:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDPlainType:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDbinary:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDbase64Binary:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDhexBinary:void <init>(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.TypeMapper:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.TypeMapper:void <clinit>()"
        ]
    },
    "org.apache.jena.graph.Node_Literal:boolean matches(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Triple:boolean matches(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean matchedBy(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean subjectMatches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean predicateMatches(org.apache.jena.graph.Node)",
            "org.apache.jena.graph.Triple:boolean objectMatches(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.util.List loadContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAs(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.assembler.Content objectAsContent(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.assemblers.ModelAssembler:void transferContentProperties(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.Assembler content()"
        ]
    },
    "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.Assembler content()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.Assembler:void <clinit>()",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.assemblers.AssemblerGroup general()"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase$lambda_getUnique_0__1:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.datatypes.RDFDatatype fixDatatype(org.apache.jena.datatypes.RDFDatatype,java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createLiteralLabel(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:void <clinit>()",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteral(java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createLiteralByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.util.Calendar)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeIntNode(int)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeLongNode(long)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node makeDoubleNode(double)"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createBlankNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.graph.Node makeURI(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource()",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.graph.Node fresh(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BindingStack:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)",
            "org.apache.jena.ttl.turtle.LabelToNodeMap:org.apache.jena.graph.Node allocNode()"
        ]
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.graph.Node createTripleNode(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.graph.Node makeURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource oneLevelClone(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource lookupResource(java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.Resource newListCell(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.AnonId,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.AnonId)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.AnonId)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String,int,org.apache.jena.rdf.model.impl.ModelCom)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createStmtResource(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.graph.Node fresh(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.AResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Triple convert(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Triple convert(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.ALiteral)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBindingEnvironment:org.apache.jena.graph.Triple instantiate(org.apache.jena.reasoner.TriplePattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Drop:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Remove:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)"
        ]
    },
    "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.graph.Node makeDirect(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <clinit>()"
        ]
    },
    "org.apache.jena.ttl.turtle.LabelToNodeMap:org.apache.jena.graph.Node allocNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.LabelToNodeMap:org.apache.jena.graph.Node asNode(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createBNode()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createVariable(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Var()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Verb()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void initSyntaxCheckerClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:void initSyntaxCheckerClass()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OntModelImpl:void <clinit>()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model implementCreateModelOver(java.lang.String)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_listHierarchyRootClasses_0__16:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getRawModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFReaderFImpl:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFWriterFImpl:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource getResourceWithType(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String,org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.rdf.model.Resource getDescription(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDirectPropertyValues(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class,org.apache.jena.rdf.model.Property,boolean,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property createProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model asModel(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteGraph(org.apache.jena.graph.Graph,org.apache.jena.graph.Graph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model makeModel(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel(java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModel(java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createFreshModel()",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createDefaultModel()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createDefaultModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void <init>()",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsXML(java.lang.String)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.rdf.model.Model parseAsTurtle(java.lang.String)",
            "org.apache.jena.assembler.assemblers.DefaultModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.MemoryModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource oneLevelClone(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model complete(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:org.apache.jena.rdf.model.Model withSchema(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.StmtIterator listStatements(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model createBaseModel()",
            "org.apache.jena.rdf.model.impl.MemoryModelGetter:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model createWorkModel()",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <clinit>()",
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extract(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.StmtIterator:org.apache.jena.rdf.model.Model toModel()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.ReasonerRegistry:void <init>()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.rdf.model.Model loadModelWorker(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)",
            "org.apache.jena.util.LocationMapper:org.apache.jena.rdf.model.Model toModel()",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Model reachableClosure(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.vocabulary.DCAT:void <clinit>()",
            "org.apache.jena.vocabulary.DCTerms:void <clinit>()",
            "org.apache.jena.vocabulary.DCTypes:void <clinit>()",
            "org.apache.jena.vocabulary.DC_11:void <clinit>()",
            "org.apache.jena.vocabulary.ORG:void <clinit>()",
            "org.apache.jena.vocabulary.OWLResults:void <clinit>()",
            "org.apache.jena.vocabulary.OWLTest:void <clinit>()",
            "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()",
            "org.apache.jena.vocabulary.RDFTest:void <clinit>()",
            "org.apache.jena.vocabulary.ROV:void <clinit>()",
            "org.apache.jena.vocabulary.SKOS:void <clinit>()",
            "org.apache.jena.vocabulary.SKOSXL:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifest:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifestX:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD4:void <clinit>()",
            "org.apache.jena.vocabulary.VOID:void <clinit>()",
            "org.apache.jena.util.ModelCollector$createDefaultModel__100:java.lang.Object get()"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createModelForGraph(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getBaseModel()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel lambda$listSubModels$2(boolean,org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelExtract:org.apache.jena.rdf.model.Model extractInto(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createUnion(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.rdf.model.Model createDefaultModel()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$lambda_asTriples_0__12:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_listHierarchyRootClasses_0__16:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup create()"
        ]
    },
    "org.apache.jena.assembler.assemblers.DefaultModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.assembler.assemblers.MemoryModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Model openModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Content,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getBaseModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model write(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getRawModel()"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model createBaseModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model makeBaseModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec defaultSpec()",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec getDefaultSpec(java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void <clinit>()",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(java.lang.String)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.MemoryModelGetter:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchLoadedImportModel(org.apache.jena.ontology.OntModelSpec,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model createWorkModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model query(org.apache.jena.rdf.model.Selector)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model union(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model intersect(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model difference(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Statement[])",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model remove(org.apache.jena.rdf.model.Statement[])",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement asStatement(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getStmtTerm()",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement toStatement(org.apache.jena.graph.Triple,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.impl.StatementImpl replace(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <clinit>()",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.StmtIterator:org.apache.jena.rdf.model.Model toModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.shared.RandomOrderGraph:org.apache.jena.rdf.model.Model createDefaultModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.vocabulary.DCAT:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.DCAT:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.DCTerms:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.DCTerms:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.DCTypes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.DCTypes:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.DC_11:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.vocabulary.DC_11:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ORG:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.ORG:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWLResults:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWLResults:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWLTest:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWLTest:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void <clinit>()",
            "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFTest:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFTest:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ROV:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.ROV:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.SKOS:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.SKOS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.SKOSXL:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.SKOSXL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.TestManifest:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.TestManifest:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.TestManifestX:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.TestManifestX:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.VCARD:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.VCARD4:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.VCARD4:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.VOID:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.VOID:void <clinit>()"
        ]
    },
    "org.apache.jena.util.ModelCollector$createDefaultModel__100:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.TransactionHandlerBase:java.lang.Object calculate(java.util.function.Supplier)",
            "org.apache.jena.irix.IRIProviderJDK:java.lang.Object exec(java.util.function.Supplier)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager getInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model getSchema()",
            "org.apache.jena.ontology.OntDocumentManager:void setFileManager()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.Rule:java.util.List rulesFromURL(java.lang.String,org.apache.jena.reasoner.rulesys.BuiltinRegistry)",
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager get()"
        ]
    },
    "org.apache.jena.util.FileManager:void setGlobalFileManager(org.apache.jena.util.FileManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager createStd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager create(org.apache.jena.util.LocationMapper)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:void setGlobalFileManager(org.apache.jena.util.FileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManager:void setGlobalFileManager(org.apache.jena.util.FileManager)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeStd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager createStd()"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void addLocator(org.apache.jena.util.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:void addLocatorFile(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:void addLocatorClassLoader(java.lang.ClassLoader)",
            "org.apache.jena.util.FileManagerImpl:void addLocatorURL()",
            "org.apache.jena.util.FileManagerImpl:void addLocatorZip(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.SimpleEventManager:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.GraphPlain$lambda_find_0__81:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:org.apache.jena.reasoner.rulesys.impl.StateFlag nextMatch(org.apache.jena.reasoner.rulesys.impl.LPInterpreter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.Rule:boolean sameAs(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.mem.ArrayBunch:boolean containsBySameValueAs(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.NodeToTriplesMapMem:boolean containsBySameValueAs(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.HashedTripleBunch:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.mem.GraphMem:void performDelete(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:void delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.GraphUtil:void delete(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.mem.GraphMem:org.apache.jena.util.iterator.ExtendedIterator graphBaseFind(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator find(org.apache.jena.graph.Triple)",
            "org.apache.jena.graph.impl.GraphBase:org.apache.jena.util.iterator.ExtendedIterator forTestingOnly_graphBaseFind(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.mem.GraphTripleStoreBase$1:java.util.Iterator iteratorFor(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.mem.ObjectIterator:void refillPending()"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:java.lang.String getString(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.lang.Class loadClassNamedBy(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:java.lang.Class loadArbitraryClass(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String lambda$listVersionInfo$2(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listVersionInfo_2__64:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$StringFilteredStmtIterator$lambda_new_0__39:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleWriter:void writeNode(org.apache.jena.rdf.model.RDFNode,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)",
            "org.apache.jena.rdf.model.impl.NTripleWriter:void write(org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$NodeCanAs:boolean test(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$NodeCanAs:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$SubjectNodeCanAs:boolean test(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$SubjectNodeCanAs:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByDefiningPropertyAs$5(java.lang.Class,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByDefiningPropertyAs_5__22:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByTypeAs$4(java.lang.Class,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByTypeAs_4__21:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFNode lambda$findByTypeAs$3(java.lang.Class,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByTypeAs_3__20:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty lambda$listAnnotationProperties$1(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_listAnnotationProperties_1__18:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Literal asLiteral(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource asResource(org.apache.jena.graph.Node,java.lang.Class,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource asResource(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Property asProperty(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode asRDFNode(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.RDFNode lambda$asRDFNodeIterator$2(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource lambda$asResIterator$1(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode getRDFNode(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource wrapAsResource(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent(org.apache.jena.rdf.model.RDFList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent()"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.util.iterator.ExtendedIterator listDistinctMembers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.util.iterator.ExtendedIterator listOneOf()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOneOf()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void addSubClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void addSubProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSubProperty(org.apache.jena.rdf.model.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(java.lang.String,org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$LangTagFilter:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$LangFilteredStmtIterator$lambda_new_0__43:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$1:java.lang.Object accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.MapFilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void incrementProfile(org.apache.jena.reasoner.rulesys.impl.RuleClauseCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:void checkArgs(int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.AddOne:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Difference:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Equal:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.GE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.GreaterThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.IsLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.LE:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.LessThan:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsObject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListMapAsSubject:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotContains:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListNotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Max:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Min:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotBNode:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotDType:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotEqual:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotFunctor:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.NotLiteral:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Now:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Product:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Quotient:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Sum:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.BaseBuiltin:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Hide:void doHide(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Hide:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.Hide:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.MakeTemp:void headAction(org.apache.jena.graph.Node[],org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.lang.String,org.apache.jena.reasoner.rulesys.ClauseEntry[],org.apache.jena.reasoner.rulesys.ClauseEntry[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addRemoveRule(org.apache.jena.reasoner.rulesys.Rule,boolean)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void tablePredicate(org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.lang.String,java.util.List,java.util.List)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule instantiate(org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.Rule:org.apache.jena.reasoner.rulesys.Rule cloneRule()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:void <init>(org.apache.jena.graph.Graph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.InfModelImpl:void <init>(org.apache.jena.reasoner.InfGraph)",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getRawModel()",
            "org.apache.jena.rdf.model.impl.InfModelImpl:org.apache.jena.rdf.model.Model getDeductionsModel()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model asModel(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel()",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model makeModel(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createDefaultModel()",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.Model createModelForGraph(org.apache.jena.graph.Graph)",
            "org.apache.jena.util.MonitorModel:void <init>(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void setFileManager(org.apache.jena.util.FileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void <init>(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:void setFileManager()"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator[] getGDVs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:org.apache.jena.rdfxml.xmlinput.ARPOptions createNewOptions()",
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:org.apache.jena.rdfxml.xmlinput.ARPOptions copy()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setDefaultErrorMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setLaxErrorMode()",
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setStrictErrorMode(int)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:org.apache.jena.rdfxml.xmlinput.ARPOptions copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wNodeIDAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAboutAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceNodeIDAttr(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseCollection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wParseResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$3:void wTypeStart(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wQNameAttr(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttrString(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$3:void wTypeEnd(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void PropertyList(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void TriplesSameSubject()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNodePropertyList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node TriplesNode()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Literal readLiteral()"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:java.lang.String readName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkIdSymbol(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromID(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkXMLLang(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkIdSymbol(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void setEncoding(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:void baseUsed(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:void checkBaseUse(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void baseUsed(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void checkBaseUse(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,org.apache.jena.iri.IRI)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContextWithBase(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void checkNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_2__94:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:void lambda$accumulator$0(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_accumulator_1__98:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:void exec(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,java.lang.Runnable)",
            "org.apache.jena.graph.impl.TransactionHandlerBase:void execute(java.lang.Runnable)",
            "org.apache.jena.rdf.model.impl.ModelCom:void executeInTxn(java.lang.Runnable)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model add(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode viewAs(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.EnhGraph:org.apache.jena.rdf.model.RDFNode getNodeAs(org.apache.jena.graph.Node,java.lang.Class)"
        ]
    },
    "org.apache.jena.enhanced.EnhNode:org.apache.jena.rdf.model.RDFNode as(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List asJavaList(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.ontology.OntResource lambda$listDistinctMembers$0(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:int getOrdinal()",
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.ontology.OntClass lambda$listOperands$0(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.Literal lambda$listOneOf$0(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.ontology.OntResource lambda$listOneOf$0(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()",
            "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass getOntClass(boolean)",
            "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass lambda$listOntClasses$0(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaredProperties(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass asEnumeratedClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass asUnionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass asIntersectionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass asComplementClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction asRestriction()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass convertToEnumeratedClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass convertToIntersectionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass convertToUnionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass convertToComplementClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual lambda$listInstances$1(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntProperty lambda$listDeclaredProperties$0(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.Class,org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass lambda$listHierarchyRootClasses$0(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:int getOrdinal()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSubProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty asFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty asDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty asObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty asTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty asInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty asSymmetricProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.Restriction lambda$listReferringRestrictions$1(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty lambda$listInverse$0(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.AnnotationProperty asAnnotationProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntProperty asProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.ObjectProperty asObjectProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.DatatypeProperty asDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Individual asIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntClass asClass()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Ontology asOntology()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.AllDifferent asAllDifferent()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.DataRange asDataRange()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode objectAs(org.apache.jena.rdf.model.Property,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addListPropertyValue(org.apache.jena.rdf.model.Property,java.lang.String,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode asOntResource(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource lambda$listDirectPropertyValues$8(java.lang.Class,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource lambda$listDirectPropertyValues$7(java.lang.Class,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listAs$6(java.lang.Class,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:org.apache.jena.ontology.OntResource getHasClassQ()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction asAllValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction asSomeValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction asHasValueRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction asCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction asMinCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction asMaxCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction convertToAllValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction convertToSomeValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction convertToHasValueRestriction(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelReifier:void noteIfReified(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList getTail()",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList setTail(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList cons(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList findElement(boolean,int)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Bag getBag()",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Alt getAlt()",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Seq getSeq()",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.RDFList getList()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier$lambda_findReifiedStatements_1__38:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelReifier$lambda_findReifiedStatements_0__37:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.rdf.model.Resource getAnyReifiedStatement(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.RSIterator listReifiedStatements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RSIterator listReifiedStatements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.ResIterator modelListSubjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$10:boolean hasNext()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator listSubjects()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ResIterator listSubjectsWithProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$lambda_listSubjects_1__87:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wResourceNodeIDAttr(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdRefAttrOpt(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementBase:boolean getWellFormed()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.ResourceF)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int,org.apache.jena.rdf.model.ResourceF)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClass(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Ontology createOntology(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual createIndividual(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual createIndividual()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Individual createIndividual(java.lang.String,org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual createIndividual(java.lang.String)",
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty createAnnotationProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:void addOntClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.IndividualImpl:void setOntClass(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIxResolver resolver(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:boolean check(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx getSystemBase()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String toBase(java.lang.String)",
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIxResolver stdResolver()",
            "org.apache.jena.irix.IRIs:java.lang.String resolve(java.lang.String)",
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx resolveIRI(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIs:java.lang.String getBaseStr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIProvider getProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIx:org.apache.jena.irix.IRIx create(java.lang.String)",
            "org.apache.jena.irix.SystemIRIx:void strictMode(java.lang.String,boolean)",
            "org.apache.jena.irix.SystemIRIx:boolean isStrictMode(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.SystemIRIx:void strictMode(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.SystemIRIx:boolean isStrictMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.SystemIRIx:org.apache.jena.irix.IRIx getSystemBase()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx getSystemBase()",
            "org.apache.jena.irix.IRIs:java.lang.String getBaseStr()"
        ]
    },
    "org.apache.jena.irix.SystemIRIx:void setSystemBase(org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.SystemIRIx:void setProvider(org.apache.jena.irix.IRIProvider)"
        ]
    },
    "org.apache.jena.sys.InitJenaCore:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.sys.InitJenaCore:void start()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.LookingForRDF:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.LookingForRDF:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTopLevelDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void initParse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$5(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_5__95:java.lang.Object apply(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$4(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_4__96:java.lang.Object get()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FrameObject:void close()",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void close()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:org.apache.jena.reasoner.rulesys.impl.Generator lambda$generatorFor$0(org.apache.jena.reasoner.TriplePattern,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:void setupTripleMatchCall(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()"
        ]
    },
    "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactoryByClassName(org.apache.jena.rdf.model.Resource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.assembler.assemblers.AssemblerBase:org.apache.jena.rdf.model.Resource getResource(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void includePrefixesFor(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntDocumentManager getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntDocumentManager getDocumentManager()"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_3__97:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.TransactionHandlerBase:java.lang.Object calculate(java.util.function.Supplier)",
            "org.apache.jena.irix.IRIProviderJDK:java.lang.Object exec(java.util.function.Supplier)"
        ]
    },
    "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void setPrefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void prefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrintUtil:void registerPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping withDefaultMappings(org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.shared.impl.PrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void setPrefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void prefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrintUtil:void registerPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntologies()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listObjectProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDatatypeProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listFunctionalProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listTransitiveProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listSymmetricProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseFunctionalProperties()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listRestrictions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllDifferent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDataRanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listEnumeratedClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listUnionClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listComplementClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIntersectionClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listInstances(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listInstances()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.StmtIterator listBySubject(org.apache.jena.rdf.model.Container)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchLoadedImportModel(org.apache.jena.ontology.OntModelSpec,java.lang.String)"
        ]
    },
    "org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory:org.apache.jena.ext.xerces.impl.dv.SchemaDVFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <init>(java.lang.String)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void main(java.lang.String[])"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDDateTimeStampType:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:org.apache.jena.datatypes.RDFDatatype normalizeSubType(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void normalize()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalise(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object convertValidatedDataValue(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeDecimal(java.math.BigDecimal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalise(java.lang.Object)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeInteger(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalise(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeDecimal(java.math.BigDecimal)"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalise(java.lang.Object)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeDecimal(java.math.BigDecimal)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:java.lang.Object cannonicalizeInteger(java.math.BigInteger)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:void <clinit>()",
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object convertValidatedDataValue(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object parse(java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Number suitableInteger(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:java.lang.Object convertValidatedDataValue(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isBaseTypeCompatible(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDBaseNumericType:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.XSDDatatype:boolean isValidLiteral(org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDateTime:org.apache.jena.datatypes.xsd.XSDDatatype getNarrowedDatatype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:org.apache.jena.datatypes.RDFDatatype normalizeSubType(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDDateTime:void narrowType(org.apache.jena.datatypes.xsd.XSDDatatype)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:org.apache.jena.datatypes.RDFDatatype normalizeSubType(java.lang.Object,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.datatypes.RDFDatatype fixDatatype(org.apache.jena.datatypes.RDFDatatype,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createLiteralLabel(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String)",
            "org.apache.jena.graph.impl.LiteralLabelFactory:org.apache.jena.graph.impl.LiteralLabel createByValue(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:boolean isStringValue(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.rdf.model.impl.Util:boolean isSimpleString(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)"
        ]
    },
    "org.apache.jena.rdf.model.impl.Util:boolean isSimpleString(org.apache.jena.rdf.model.Literal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean isPlainLiteral()",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeLiteral(org.apache.jena.rdf.model.Literal,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)"
        ]
    },
    "org.apache.jena.vocabulary.XSD:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.vocabulary.XSD:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.impl.XSDByteType:void <init>(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDbase64Binary:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.xsd.XSDhexBinary:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.XSDDatatype:void <clinit>()"
        ]
    },
    "org.apache.jena.datatypes.TypeMapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.TypeMapper:org.apache.jena.datatypes.TypeMapper getInstance()",
            "org.apache.jena.datatypes.TypeMapper:void setInstance(org.apache.jena.datatypes.TypeMapper)",
            "org.apache.jena.datatypes.TypeMapper:void reset()",
            "org.apache.jena.datatypes.TypeMapper:void <clinit>()",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.datatypes.RDFDatatype getType(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource lookupResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.AnonId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.AnonId)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,java.lang.String,int,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createStmtResource(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createStmtResource(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String)",
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createResource(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setBlockRules(java.lang.Object)",
            "org.apache.jena.vocabulary.RDFSyntax:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ContainerImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom,java.lang.String,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Triple convert(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void statement(org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource,org.apache.jena.rdfxml.xmlinput.AResource)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubClassUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccuranceUtility(org.apache.jena.graph.Node,org.apache.jena.graph.Graph,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean cacheSubPropUtility(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.transitiveReasoner.TransitiveGraphCache)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <clinit>()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <init>()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.reasoner.Finder)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <clinit>()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ttl.turtle.LabelToNodeMap:org.apache.jena.graph.Node asNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createBNode(java.lang.String,int,int)"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createBNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNodePropertyList()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Collection()",
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNode()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createListNode()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node Var()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node VarOrTerm()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFReaderFImpl:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFReaderFImpl:org.apache.jena.rdf.model.RDFReaderI getReader()",
            "org.apache.jena.rdf.model.impl.RDFReaderFImpl:org.apache.jena.rdf.model.RDFReaderI getReader(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFWriterFImpl:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)",
            "org.apache.jena.rdf.model.impl.RDFWriterFImpl:org.apache.jena.rdf.model.RDFWriterI getWriter()",
            "org.apache.jena.rdf.model.impl.RDFWriterFImpl:org.apache.jena.rdf.model.RDFWriterI getWriter(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource createOntResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFList createList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String,org.apache.jena.rdf.model.ResourceF)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:org.apache.jena.rdf.model.RDFList copy(java.util.Iterator)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.NTripleReader:org.apache.jena.rdf.model.Resource readResource()",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.util.Iterator listSubjects()",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(java.lang.String,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.util.ResourceUtils:org.apache.jena.rdf.model.Resource renameResource(org.apache.jena.rdf.model.Resource,java.lang.String)",
            "org.apache.jena.vocabulary.DCAT:void <clinit>()",
            "org.apache.jena.vocabulary.DCTerms:void <clinit>()",
            "org.apache.jena.vocabulary.DCTypes:void <clinit>()",
            "org.apache.jena.vocabulary.DC_11:void <clinit>()",
            "org.apache.jena.vocabulary.ORG:void <clinit>()",
            "org.apache.jena.vocabulary.OWLResults:void <clinit>()",
            "org.apache.jena.vocabulary.OWLTest:void <clinit>()",
            "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()",
            "org.apache.jena.vocabulary.OntEventsVocab:void <clinit>()",
            "org.apache.jena.vocabulary.RDFTest:void <clinit>()",
            "org.apache.jena.vocabulary.ROV:void <clinit>()",
            "org.apache.jena.vocabulary.SKOS:void <clinit>()",
            "org.apache.jena.vocabulary.SKOSXL:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifest:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifestX:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD4:void <clinit>()",
            "org.apache.jena.vocabulary.VOID:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property createProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.Property inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.NTripleReader:void unwrappedReadRDF()",
            "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.Property inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.vocabulary.DCAT:void <clinit>()",
            "org.apache.jena.vocabulary.DCTerms:void <clinit>()",
            "org.apache.jena.vocabulary.DC_11:void <clinit>()",
            "org.apache.jena.vocabulary.ORG:void <clinit>()",
            "org.apache.jena.vocabulary.OWLResults:void <clinit>()",
            "org.apache.jena.vocabulary.OWLTest:void <clinit>()",
            "org.apache.jena.vocabulary.OntDocManagerVocab:void <clinit>()",
            "org.apache.jena.vocabulary.RDFTest:void <clinit>()",
            "org.apache.jena.vocabulary.ROV:void <clinit>()",
            "org.apache.jena.vocabulary.SKOS:void <clinit>()",
            "org.apache.jena.vocabulary.SKOSXL:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifest:void <clinit>()",
            "org.apache.jena.vocabulary.TestManifestX:void <clinit>()",
            "org.apache.jena.vocabulary.VCARD4:void <clinit>()",
            "org.apache.jena.vocabulary.VOID:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModel(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model implementCreateModelOver(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModel(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createFreshModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createDefaultModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup copy()",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.assemblers.AssemblerGroup general()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model getRawModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.ontology.OntModelSpec)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model makeBaseModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec defaultSpec()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec getOntModelSpec(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntModelSpec getDefault(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec getDefaultSpec(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchLoadedImportModel(org.apache.jena.ontology.OntModelSpec,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchPossiblyCachedImportModel(org.apache.jena.ontology.OntModel,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Statement lambda$replaceSubjectMap$1(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,long)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,char)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,float)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,double)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createLiteralStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,java.lang.String,java.lang.String,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[] reification(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement asStatement(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Statement lambda$asStmtIterator$0(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement[] asStatements(org.apache.jena.graph.Triple[])",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.List asStatements(java.util.List)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement lambda$asStatements$1(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement createExistingReifiedStatement(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.StatementBoundaryBase$1:boolean stopAt(org.apache.jena.graph.Triple)",
            "org.apache.jena.util.MonitorModel:void snapshot(java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getStmtTerm()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement toStatement(org.apache.jena.graph.Triple,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement asStatement(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Statement getStmtTerm()"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.ontology.OntDocumentManager createDocumentManager()",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntDocumentManager getInstance()",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntDocumentManager:boolean read(org.apache.jena.rdf.model.Model,java.lang.String,boolean)",
            "org.apache.jena.ontology.OntDocumentManager:void <clinit>()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntDocumentManager getDocumentManager()"
        ]
    },
    "org.apache.jena.irix.IRIProviderJDK:java.lang.Object exec(java.util.function.Supplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx resolve(java.lang.String)",
            "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx resolve(org.apache.jena.irix.IRIx)",
            "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx relativize(org.apache.jena.irix.IRIx)"
        ]
    },
    "org.apache.jena.util.FileManager:org.apache.jena.util.FileManager get()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:void addLocatorFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:void addLocatorFile()"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void addLocatorClassLoader(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:void setStdLocators(org.apache.jena.util.FileManagerImpl)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void addLocatorURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:void setStdLocators(org.apache.jena.util.FileManagerImpl)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void addLocatorZip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:boolean sameAs(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.Rule:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.assembler.AssemblerHelp:java.lang.Class loadArbitraryClass(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClass(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listVersionInfo_2__64:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$NodeCanAs:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$SubjectNodeCanAs:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByDefiningPropertyAs_5__22:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByTypeAs_4__21:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_findByTypeAs_3__20:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$lambda_listAnnotationProperties_1__18:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource asResource(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource getResource(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource()"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Property asProperty(org.apache.jena.graph.Node,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property getProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.RDFNode lambda$asRDFNodeIterator$2(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asRDFNodeIterator_2__42:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Resource lambda$asResIterator$1(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asResIterator_1__41:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFNode getRDFNode(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.Literal inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.builtins.Hide:boolean bodyCall(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:org.apache.jena.reasoner.rulesys.impl.StateFlag run()",
            "org.apache.jena.reasoner.rulesys.Functor:boolean evalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.Functor:boolean safeEvalAsBodyClause(org.apache.jena.reasoner.rulesys.RuleContext)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.builtins.Hide:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:boolean matchClauseList(java.util.List,org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RETEConflictSet:void execute(org.apache.jena.reasoner.rulesys.impl.RETERuleContext,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void findAndProcessActions()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleInfGraph:void extractAxioms()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addRemoveRule(org.apache.jena.reasoner.rulesys.Rule,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void deleteRule(org.apache.jena.reasoner.rulesys.Rule)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.FBRuleReasoner:void tablePredicate(org.apache.jena.graph.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.reasoner.rulesys.Rule doParseRule(boolean)",
            "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.rdf.model.impl.InfModelImpl:void <init>(org.apache.jena.reasoner.InfGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createRDFSModel(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.Reasoner,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.InfGraph)"
        ]
    },
    "org.apache.jena.util.MonitorModel:void <init>(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:org.apache.jena.rdfxml.xmlinput.ARPOptions createNewOptions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void <init>()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setLaxErrorMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:int processOpts(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setStrictErrorMode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setStrictErrorMode()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.ARP:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)",
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:void checkXMLLang(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withLang(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void warning(org.apache.jena.rdfxml.xmlinput.impl.Taint,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:int processSpecials(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:boolean isInRdfns(org.apache.jena.rdfxml.xmlinput.impl.Taint)",
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void error(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void deprecatedAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:java.lang.String value(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void <init>(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String,java.lang.String,int,int,boolean)",
            "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void error(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkNodeID_XMLName(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkID_XMLName(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkString(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkComposingChar(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkComposingChar(org.apache.jena.rdfxml.xmlinput.impl.Taint,char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkEncoding(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int rdf(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,int)",
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void warning(int,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser create()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:void baseUsed(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLBaselessContext:void checkBaseUse(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void baseUsed(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLContext:void checkBaseUse(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,org.apache.jena.iri.IRI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.iri.IRI resolveAsURI(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void checkNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.ontology.OntResource lambda$listDistinctMembers$0(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl$lambda_listDistinctMembers_0__56:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.AnnotationPropertyImpl:int getOrdinal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:int getOrdinal()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:int getOrdinal()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl:org.apache.jena.ontology.OntClass lambda$listOperands$0(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl$lambda_listOperands_0__76:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.Literal lambda$listOneOf$0(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.DataRangeImpl$lambda_listOneOf_0__55:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.ontology.OntResource lambda$listOneOf$0(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$lambda_listOneOf_0__50:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:org.apache.jena.ontology.OntClass lambda$listOntClasses$0(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IndividualImpl$lambda_listOntClasses_0__71:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass asEnumeratedClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass asUnionClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass asIntersectionClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass asComplementClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction asRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual lambda$listInstances$1(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_1__60:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntProperty lambda$listDeclaredProperties$0(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listDeclaredProperties_0__59:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass lambda$listHierarchyRootClasses$0(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$lambda_listHierarchyRootClasses_0__16:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:int getOrdinal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:int getOrdinal()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:int getOrdinal()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty asFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty asDatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty asObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:org.apache.jena.ontology.OntProperty getInverse()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty asTransitiveProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty asInverseFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty asSymmetricProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.Restriction lambda$listReferringRestrictions$1(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listReferringRestrictions_1__54:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty lambda$listInverse$0(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listInverse_0__52:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.AnnotationProperty asAnnotationProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntProperty asProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.ObjectProperty asObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.DatatypeProperty asDatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Individual asIndividual()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntClass asClass()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.Ontology asOntology()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.AllDifferent asAllDifferent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.DataRange asDataRange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode asOntResource(org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode getPropertyValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listPropertyValues$5(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listIsDefinedBy$1(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listSeeAlso$0(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource lambda$listDirectPropertyValues$8(java.lang.Class,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_8__69:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource lambda$listDirectPropertyValues$7(java.lang.Class,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_7__70:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listAs$6(java.lang.Class,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listAs_6__68:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction asAllValuesFromRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction asSomeValuesFromRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction asHasValueRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction asCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction asMinCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction asMaxCardinalityRestriction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Bag getBag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Bag getDefaultBag()",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Alt getAlt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt getDefaultAlt()",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Seq getSeq()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Seq getDefaultSeq()",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.RDFList getList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.ReifiedStatement createReifiedStatement(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual createIndividual()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Individual createIndividual(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIxResolver stdResolver()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.sys.InitJenaCore:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.sys.JenaSystem:void lambda$init$2(org.apache.jena.sys.JenaSubsystemLifecycle)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTopLevelDescription:void <init>(org.apache.jena.rdfxml.xmlinput.states.FrameI,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:void <init>(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:org.apache.jena.rdfxml.xmlinput.SAX2RDF create(java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:org.apache.jena.rdfxml.xmlinput.SAX2RDF create(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_5__95:java.lang.Object apply(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.ModelCollector$ConcurrentModelCollector:org.apache.jena.rdf.model.Model lambda$combiner$3(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.util.ModelCollector$ConcurrentModelCollector$lambda_combiner_4__96:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.TransactionHandlerBase:java.lang.Object calculate(java.util.function.Supplier)",
            "org.apache.jena.irix.IRIProviderJDK:java.lang.Object exec(java.util.function.Supplier)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntDocumentManager getDocumentManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntDocumentManager getDocumentManager()",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.ontology.OntModelSpec:boolean same(org.apache.jena.ontology.OntModelSpec)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:void <init>(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.Model,boolean)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.util.LocationMapper:org.apache.jena.rdf.model.Model toModel()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.JenaHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:void setPrefix(int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void Directive()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void prefix(int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.TurtleParserBase:void setPrefix(int,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.util.PrintUtil:void registerPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:void init()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listInstances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_1(java.lang.String,java.lang.String,org.apache.jena.datatypes.RDFDatatype)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setLiteralLabel_2(java.lang.Object,java.lang.String,org.apache.jena.datatypes.RDFDatatype)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:boolean isPlainLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:byte getByte()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:short getShort()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:int getInt()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:long getLong()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:char getChar()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:float getFloat()",
            "org.apache.jena.rdf.model.impl.LiteralImpl:double getDouble()"
        ]
    },
    "org.apache.jena.datatypes.TypeMapper:org.apache.jena.datatypes.TypeMapper getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:void <init>(java.lang.Object)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:void setWithNewDatatypeForValueClass(java.lang.Object)",
            "org.apache.jena.graph.NodeFactory:org.apache.jena.datatypes.RDFDatatype getType(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Literal createTypedLiteral(java.lang.Object,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:org.apache.jena.graph.Node convert(org.apache.jena.rdfxml.xmlinput.ALiteral)",
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createLiteral(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.datatypes.TypeMapper:void setInstance(org.apache.jena.datatypes.TypeMapper)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.graph.NodeFactory:org.apache.jena.datatypes.RDFDatatype getType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void writeBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeStart(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$2:void wTypeEnd(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:org.apache.jena.rdf.model.Statement accept(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wDescription(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wLiEltStar(java.util.Iterator)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void tab()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String getXMLNameSpace(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String getXMLLocalName(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void increaseObjectCount(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <clinit>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$lambda_pleasingTypeIterator_0__86:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource withFullModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.Resource:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createStmtResource(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.BagImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createResource()"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Property createProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createResource(java.lang.String)"
        ]
    },
    "org.apache.jena.vocabulary.RDFSyntax:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void blockRule(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setBlockRules(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void blockRule(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.RDFXMLWriterI:void <clinit>()",
            "org.apache.jena.vocabulary.RDFSyntax:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ContainerImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.BagImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom,java.lang.String,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl create(org.apache.jena.rdf.model.impl.ModelCom,java.lang.String,org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void resetTGCCache()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:org.apache.jena.reasoner.Finder insert(org.apache.jena.reasoner.Finder,org.apache.jena.reasoner.FGraph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean delete(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:boolean checkOccurance(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <clinit>()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveInfGraph:void prepare()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.reasoner.Finder)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$1:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler$2:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.Reasoner getReasoner(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.reasoner.Reasoner getReasoner()",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner create(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getTransitiveReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMicroReasoner()",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getOWLMiniReasoner()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createBNode(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNode()"
        ]
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node BlankNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:org.apache.jena.graph.Node GraphTerm()"
        ]
    },
    "org.apache.jena.ttl.turtle.TurtleParserBase:org.apache.jena.graph.Node createListNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.RDFReaderFImpl:org.apache.jena.rdf.model.RDFReaderI getReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFReaderI getReader()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.Reader,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFWriterFImpl:org.apache.jena.rdf.model.RDFWriterI getWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFWriterI getWriter()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.ResourceF)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.ResourceF)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.VCARD:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.Property inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.Property inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModelIfPresent(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.rdf.model.Model doCreateModel()",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModelOver(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:void <init>(org.apache.jena.ontology.OntModelSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.ontology.OntModel getOntology(java.lang.String,org.apache.jena.ontology.OntModelSpec)",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel(org.apache.jena.ontology.OntModelSpec,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchPossiblyCachedImportModel(org.apache.jena.ontology.OntModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:void loadImport(org.apache.jena.ontology.OntModel,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Statement lambda$replaceSubjectMap$1(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler$lambda_replaceSubjectMap_1__28:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[] reification(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory:org.apache.jena.rdf.model.Statement lambda$asStmtIterator$0(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asStmtIterator_0__40:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement[] asStatements(org.apache.jena.graph.Triple[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyAddArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])",
            "org.apache.jena.rdf.model.impl.ModelListenerAdapter:void notifyDeleteArray(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple[])"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement lambda$asStatements$1(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom$lambda_asStatements_1__13:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.StatementBoundaryBase$1:boolean stopAt(org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.GraphExtract$Extraction:void extractInto(org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.StatementTripleBoundary:boolean stopAt(org.apache.jena.rdf.model.Statement)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx resolve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String toBase(java.lang.String)",
            "org.apache.jena.irix.IRIs:org.apache.jena.irix.IRIx resolveIRI(java.lang.String)",
            "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,java.lang.String)",
            "org.apache.jena.irix.IRIxResolver:org.apache.jena.irix.IRIx resolve0(java.lang.String)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx resolve(org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.irix.IRIs:java.lang.String resolve(org.apache.jena.irix.IRIx,org.apache.jena.irix.IRIx)"
        ]
    },
    "org.apache.jena.irix.IRIProviderJDK$IRIxJDK:org.apache.jena.irix.IRIx relativize(org.apache.jena.irix.IRIx)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.util.FileManagerImpl:void addLocatorFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model findMetadata(java.lang.String)",
            "org.apache.jena.util.FileManagerImpl:void setStdLocators(org.apache.jena.util.FileManagerImpl)",
            "org.apache.jena.util.LocationMapper:void initFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.jena.util.FileManagerImpl:void setStdLocators(org.apache.jena.util.FileManagerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeStd()",
            "org.apache.jena.util.FileManagerImpl:org.apache.jena.util.FileManager makeGlobal()"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asRDFNodeIterator_2__42:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asResIterator_1__41:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.Literal inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.Literal:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void addRule(org.apache.jena.reasoner.rulesys.Rule)",
            "org.apache.jena.reasoner.rulesys.impl.RuleClauseCode:void main(java.lang.String[])",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void <init>(java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RuleStore:void addAll(org.apache.jena.reasoner.rulesys.impl.RuleStore)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RuleStore:void deleteRule(org.apache.jena.reasoner.rulesys.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.LPBRuleEngine:void deleteRule(org.apache.jena.reasoner.rulesys.Rule)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.Rule:void <init>(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.rdf.model.InfModel createInfModel(org.apache.jena.reasoner.InfGraph)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void <init>(org.xml.sax.XMLReader)",
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.NTriple:int processOpts(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.NTriple:void mainEh(java.lang.String[],org.xml.sax.ErrorHandler,org.apache.jena.rdfxml.xmlinput.ARPEventHandler)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARPOptions:void setStrictErrorMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmlinput.NTriple:int processOpts(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.ARP:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.JenaReader:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void setOptionsWith(org.apache.jena.rdfxml.xmlinput.ARPOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext withLang(org.apache.jena.rdfxml.xmlinput.impl.XMLHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext computeXml(org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext initialContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:boolean isInRdfns(org.apache.jena.rdfxml.xmlinput.impl.Taint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int rdf(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void error(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void deprecatedAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void bagIDAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:java.lang.String value(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:int processSpecials(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void <init>(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String,java.lang.String,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void error(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void deprecatedAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void bagIDAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkNodeID_XMLName(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkID_XMLName(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkIdSymbol(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkString(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ARPDatatypeLiteral:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.URIReference)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPString:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ARPString:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkComposingChar(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkString(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkComposingChar(org.apache.jena.rdfxml.xmlinput.impl.Taint,char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkEncoding(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkIdSymbol(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.ParserSupport:void checkString(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference resolve(org.apache.jena.rdfxml.xmlinput.states.Frame,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.URIReference:org.apache.jena.rdfxml.xmlinput.impl.URIReference fromQName(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void checkNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int rdf(org.apache.jena.rdfxml.xmlinput.impl.Taint,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookupNoMsg(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:void warning(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:org.apache.jena.rdfxml.xmlinput.states.FrameI rdfStartElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.states.StartStateRDForDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantEmpty:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.states.WantEmpty:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI withParsetype(java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitNS(javax.xml.stream.events.Namespace)"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl$lambda_listDistinctMembers_0__56:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.BooleanClassDescriptionImpl$lambda_listOperands_0__76:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl$lambda_listOneOf_0__55:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl$lambda_listOneOf_0__50:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl$lambda_listOntClasses_0__71:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_1__60:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl$lambda_listDeclaredProperties_0__59:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listReferringRestrictions_1__54:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listInverse_0__52:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listPropertyValues$5(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listPropertyValues_5__67:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listIsDefinedBy$1(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listIsDefinedBy_1__63:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listSeeAlso$0(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listSeeAlso_0__62:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_8__69:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_7__70:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listAs_6__68:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.sys.JenaSystem:void lambda$init$2(org.apache.jena.sys.JenaSubsystemLifecycle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:void <init>(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.DOM2Model:void <init>(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String,boolean)",
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:org.apache.jena.rdfxml.xmlinput.SAX2Model create(java.lang.String,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:org.apache.jena.rdfxml.xmlinput.SAX2Model create(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2RDF:org.apache.jena.rdfxml.xmlinput.SAX2RDF create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2RDF:org.apache.jena.rdfxml.xmlinput.SAX2RDF create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntDocumentManager getDocumentManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:void loadImports()",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Model read(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntModel getImportedModel(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:boolean same(org.apache.jena.ontology.OntModelSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntModelSpec:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.graph.compose.PolyadicPrefixMappingImpl:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Model setNsPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:void addNamespaces(org.apache.jena.rdf.model.Model,java.util.Map)",
            "org.apache.jena.rdfxml.xmlinput.JenaHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:void registerPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void setPrefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.ttl.turtle.TurtleRDFGraphInserter:void prefix(int,int,java.lang.String,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMappingTTL$2(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrefixMappingUtils:void lambda$calcInUsePrefixMapping$1(org.apache.jena.shared.PrefixMapping,org.apache.jena.shared.PrefixMapping,java.lang.String)",
            "org.apache.jena.util.PrintUtil:void registerPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.Model:org.apache.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ttl.turtle.parser.TurtleParser:void Directive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ttl.turtle.parser.TurtleParser:void Statement()"
        ]
    },
    "org.apache.jena.util.PrintUtil:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.PrintUtil:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Property createProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.AS:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.DC_10:org.apache.jena.rdf.model.Property cp(java.lang.String)",
            "org.apache.jena.vocabulary.OA:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.OWL:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.RDFS:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.RSS:void <clinit>()",
            "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property jenaReasonerProperty(java.lang.String)",
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void tab()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltResource(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueObj(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltCollection(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionCompact(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeNoProperties(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescriptionLong(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void maybeNewline()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String getXMLNameSpace(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean isLocalReference(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:java.lang.String getXMLLocalName(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wIdAttrReified(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean isLocalReference(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void increaseObjectCount(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wObjStar()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser$lambda_pleasingTypeIterator_0__86:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Statement createStatement(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.Statement toStatement(org.apache.jena.graph.Triple,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:org.apache.jena.rdf.model.impl.StatementImpl replace(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.Resource:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.AltImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.BagImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:void <init>(org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Resource createResource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createResource()"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory$Impl:org.apache.jena.rdf.model.Property createProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Property createProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.AS:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.LocationMappingVocab:void <clinit>()",
            "org.apache.jena.vocabulary.OA:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.OWL:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.OWL:void <clinit>()",
            "org.apache.jena.vocabulary.OWL2:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource langString()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource HTML()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource xmlLiteral()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource JSON()",
            "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.RDFS:org.apache.jena.rdf.model.Resource resource(java.lang.String)",
            "org.apache.jena.vocabulary.RSS:void <clinit>()",
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()",
            "org.apache.jena.vocabulary.XSD:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.RDFXMLWriterI:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.RDFXMLWriterI:void <clinit>()"
        ]
    },
    "org.apache.jena.rdf.model.impl.AltImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.BagImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.SeqImpl:void <init>(java.lang.String,org.apache.jena.rdf.model.impl.ModelCom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.ResourceF)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource withFullModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.Resource:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.Property:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.Resource inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource withFullModel(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSubClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntResource getOntResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq getSeq(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag getBag(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList getList(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt getAlt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ResourceImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.Resource:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model openModelIfPresent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.OntDocumentManager:org.apache.jena.rdf.model.Model fetchLoadedImportModel(org.apache.jena.ontology.OntModelSpec,java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model getModel(java.lang.String,org.apache.jena.rdf.model.ModelReader)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelMakerImpl:org.apache.jena.rdf.model.Model createModelOver(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.assembler.assemblers.ModelAssembler$lambda_replaceSubjectMap_1__28:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.IteratorFactory$lambda_asStmtIterator_0__40:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.ModelCom$lambda_asStatements_1__13:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.StatementTripleBoundary:boolean stopAt(org.apache.jena.rdf.model.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.StatementBoundaryBase$1:boolean stopAt(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.rdf.model.impl.LiteralImpl:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.impl.ModelCom)",
            "org.apache.jena.rdf.model.impl.StatementImpl:void <init>(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.rdf.model.Literal:org.apache.jena.rdf.model.RDFNode inModel(org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:void <init>(org.xml.sax.XMLReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser:org.apache.jena.rdfxml.xmlinput.impl.RDFXMLParser create()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:int processSpecials(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.xml.sax.Attributes)",
            "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void <init>(org.apache.jena.rdfxml.xmlinput.impl.Taint,org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String,java.lang.String,int,int,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer:void bagIDAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void deprecatedAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ElementLexer:void bagIDAttribute(org.apache.jena.rdfxml.xmlinput.impl.Taint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPDatatypeLiteral:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.URIReference)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void endElement()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPString:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.OuterXMLLiteral:void endElement()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.ARPString:void <init>(org.apache.jena.rdfxml.xmlinput.states.Frame,java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.Frame:void processPropertyAttributes(org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)",
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void endElement()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsXMLLiteral:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookupNoMsg(org.apache.jena.rdfxml.xmlinput.impl.Taint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.QNameLexer:int lookup(org.apache.jena.rdfxml.xmlinput.impl.Taint)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.Frame:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantEmpty:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantEmpty:org.apache.jena.rdfxml.xmlinput.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI withParsetype(java.lang.String,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantPropertyElement:org.apache.jena.rdfxml.xmlinput.states.FrameI nextFrame(org.xml.sax.Attributes,org.apache.jena.rdfxml.xmlinput.impl.AttributeLexer,int,int,org.apache.jena.rdfxml.xmlinput.impl.AbsXMLContext)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitPi(javax.xml.stream.events.ProcessingInstruction)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.AbsWantLiteralValueOrDescription:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2RDF:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.SAX2Model:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitNS(javax.xml.stream.events.Namespace)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitNS(javax.xml.stream.events.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitSE(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listPropertyValues_5__67:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listIsDefinedBy_1__63:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listSeeAlso_0__62:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.DOM2Model:void <init>(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.DOM2Model:org.apache.jena.rdfxml.xmlinput.DOM2Model createD2M(java.lang.String,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmlinput.DOM2Model:org.apache.jena.rdfxml.xmlinput.DOM2Model createD2M(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:org.apache.jena.rdfxml.xmlinput.SAX2Model create(java.lang.String,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLStreamReader,org.apache.jena.rdf.model.Model,java.lang.String)",
            "org.apache.jena.rdfxml.xmlinput.StAX2Model:void read(javax.xml.stream.XMLEventReader,org.apache.jena.rdf.model.Model,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:org.apache.jena.rdfxml.xmlinput.SAX2Model create(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.OntModelSpec:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.datatypes.xsd.impl.XSDAbstractDateTimeType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDBaseStringType:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDDouble:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.xsd.impl.XSDFloat:boolean isEqual(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.datatypes.BaseDatatype:boolean isEqualPlain(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ext.xerces.impl.dv.xs.ListDV$ListData:boolean equals(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.TypeValidator:boolean isIdentical(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl$2:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkFacets(org.apache.jena.ext.xerces.impl.dv.ValidatedInfo)",
            "org.apache.jena.ext.xerces.impl.dv.xs.XSSimpleTypeDecl:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.ObjectListImpl:boolean contains(java.lang.Object)",
            "org.apache.jena.ext.xerces.impl.xs.util.XSObjectListImpl:boolean containsObject(java.lang.Object)",
            "org.apache.jena.ext.xerces.util.SymbolHash:org.apache.jena.ext.xerces.util.SymbolHash$Entry search(java.lang.Object,int)",
            "org.apache.jena.graph.GraphEvents:boolean same(org.apache.jena.graph.GraphEvents)",
            "org.apache.jena.graph.Node_Blank:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_Literal:boolean equals(java.lang.Object)",
            "org.apache.jena.graph.Node_URI:boolean same(org.apache.jena.graph.Node_URI)",
            "org.apache.jena.graph.Node_URI:boolean hasURI(java.lang.String)",
            "org.apache.jena.graph.Node_Variable:boolean equals(java.lang.Object)",
            "org.apache.jena.mem.HashCommon:int findSlot(java.lang.Object)",
            "org.apache.jena.rdf.model.impl.LiteralImpl:boolean getBoolean()",
            "org.apache.jena.rdfxml.xmlinput.JenaReader:java.lang.Object processArpOptions(org.apache.jena.rdfxml.xmlinput.ARPOptions,java.lang.String,java.lang.Object,org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.PairEntry:boolean equals(java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.impl.TempNodeCache:org.apache.jena.graph.Node getTemp(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.util.OneToManyMap$Entry:boolean equals(java.lang.Object)",
            "org.apache.jena.util.OneToManyMap:boolean contains(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.jena.util.PrintUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.Print:void print(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void addTriple(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BFRuleContext:void add(org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.BindingVector:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:void addSet(org.apache.jena.reasoner.rulesys.impl.BFRuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.LPInterpreter:java.lang.String getArgTrace()",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void addTriple(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.impl.RETEEngine:void inject(org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.Functor:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.Rule$Parser:org.apache.jena.graph.Node parseNode(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.Rule:java.lang.String toString()",
            "org.apache.jena.reasoner.rulesys.RuleDerivation:void printTrace(java.io.PrintWriter,boolean,int,java.util.HashSet)",
            "org.apache.jena.util.PrintUtil:void init()",
            "org.apache.jena.util.PrintUtil:void registerPrefix(java.lang.String,java.lang.String)",
            "org.apache.jena.util.PrintUtil:void registerPrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:void removePrefix(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void removePrefixMap(java.util.Map)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Node)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.graph.Triple)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.reasoner.TriplePattern)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.util.PrintUtil:java.lang.String print(java.lang.Object)",
            "org.apache.jena.util.PrintUtil:java.lang.String expandQname(java.lang.String)",
            "org.apache.jena.util.PrintUtil:void printOut(java.util.Iterator)",
            "org.apache.jena.util.PrintUtil:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.AS:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.AS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.DC_10:org.apache.jena.rdf.model.Property cp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.DC_10:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OA:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OA:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property maxCardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property versionInfo()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentClass()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property distinctMembers()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property oneOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property sameAs()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property incompatibleWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property minCardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property complementOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property onProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property inverseOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property backwardCompatibleWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property differentFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property priorVersion()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property imports()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property allValuesFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property unionOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property hasValue()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property someValuesFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property disjointWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property cardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property intersectionOf()"
        ]
    },
    "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property first()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property rest()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property subject()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property predicate()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property object()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property type()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property value()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property language()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property direction()",
            "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Property li(int)"
        ]
    },
    "org.apache.jena.vocabulary.RDFS:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property comment()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property domain()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property label()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property isDefinedBy()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property range()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property seeAlso()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subClassOf()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subPropertyOf()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property member()"
        ]
    },
    "org.apache.jena.vocabulary.RSS:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.vocabulary.RSS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property jenaReasonerProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.BasicForwardRuleReasoner:void setParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void resetTGCCache()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:org.apache.jena.reasoner.ValidityReport validate()",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.FBRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getHasRuleStatements(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:java.util.Iterator getRuleSetURLStatements(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isHasRule(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSet(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean isRuleSetURL(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.GenericRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.LPBackwardRuleReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:boolean supportsProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(java.lang.String,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.rdf.model.Resource getDescription(java.lang.String)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.reasoner.Reasoner getRDFSSimpleReasoner()",
            "org.apache.jena.util.PrintUtil:void init()",
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void maybeNewline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltLiteral(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltDatatype(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wPropertyEltValueString(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wDatatype(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean isLocalReference(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wIdAttrOpt(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wantReification(org.apache.jena.rdf.model.Statement,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean hasProperties(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Resource createResource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdf.model.ResourceFactory:org.apache.jena.rdf.model.Property createProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <clinit>()",
            "org.apache.jena.vocabulary.LocationMappingVocab:void <clinit>()",
            "org.apache.jena.vocabulary.OWL2:org.apache.jena.rdf.model.Property property(java.lang.String)",
            "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property ruleReasonerProperty(java.lang.String)",
            "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property makeDirect(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.AS:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.AS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.LocationMappingVocab:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.LocationMapper:void toModel(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.util.LocationMapper:void processConfig(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.vocabulary.LocationMappingVocab:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OA:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OA:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Thing()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DataRange()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Ontology()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedClass()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AllDifferent()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DatatypeProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource SymmetricProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource TransitiveProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AnnotationProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Restriction()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Class()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource OntologyProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource ObjectProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource FunctionalProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource InverseFunctionalProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Nothing()"
        ]
    },
    "org.apache.jena.vocabulary.OWL:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.List equivalentTypes(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$20:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$5:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile:java.lang.String NAMESPACE()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource CLASS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource RESTRICTION()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource THING()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource NOTHING()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource OBJECT_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DATATYPE_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource TRANSITIVE_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource SYMMETRIC_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ALL_DIFFERENT()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ONTOLOGY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DEPRECATED_CLASS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DEPRECATED_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ANNOTATION_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ONTOLOGY_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DATARANGE()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property EQUIVALENT_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property EQUIVALENT_CLASS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DISJOINT_WITH()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SAME_AS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DIFFERENT_FROM()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DISTINCT_MEMBERS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property UNION_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INTERSECTION_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property COMPLEMENT_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ONE_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ON_PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ALL_VALUES_FROM()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property HAS_VALUE()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SOME_VALUES_FROM()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property MIN_CARDINALITY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property MAX_CARDINALITY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property CARDINALITY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INVERSE_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property IMPORTS()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property PRIOR_VERSION()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INCOMPATIBLE_WITH()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property VERSION_INFO()",
            "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getAxiomTypes()",
            "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getAnnotationProperties()",
            "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getClassDescriptionTypes()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.ontology.ProfileRegistry:void <clinit>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.reasoner.rulesys.builtins.AssertDisjointPairs:void headAction(org.apache.jena.graph.Node[],int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.sys.InitJenaCore:void init()",
            "org.apache.jena.util.PrintUtil:void init()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property maxCardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property versionInfo()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentClass()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property distinctMembers()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property oneOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property sameAs()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property incompatibleWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property minCardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property complementOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property onProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property inverseOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property backwardCompatibleWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property differentFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property priorVersion()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property imports()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property allValuesFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property unionOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property hasValue()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property someValuesFrom()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property disjointWith()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property cardinality()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property intersectionOf()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Thing()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DataRange()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Ontology()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedClass()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AllDifferent()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DatatypeProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource SymmetricProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource TransitiveProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AnnotationProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Restriction()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Class()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource OntologyProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource ObjectProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource FunctionalProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource InverseFunctionalProperty()",
            "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Nothing()",
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL2:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL2:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource langString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource HTML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource xmlLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource JSON()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Alt()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Bag()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource _Property()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Seq()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Statement()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource List()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource nil()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource CompoundLiteral()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS:org.apache.jena.rdf.model.Resource resource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Class()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Datatype()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Container()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource ContainerMembershipProperty()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Literal()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Resource()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void characters(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void ignorableWhitespace(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitChars(javax.xml.stream.events.Characters)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitPi(javax.xml.stream.events.ProcessingInstruction)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitPi(javax.xml.stream.events.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantLiteralValueOrDescription:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.states.WantTypedLiteral:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.SAX2Model:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitNS(javax.xml.stream.events.Namespace)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.DOM2Model:org.apache.jena.rdfxml.xmlinput.DOM2Model createD2M(java.lang.String,org.apache.jena.rdf.model.Model)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmlinput.DOM2Model:org.apache.jena.rdfxml.xmlinput.DOM2Model createD2M(java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.vocabulary.AS:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.AS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.DC_10:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.DC_10:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OA:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OA:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property maxCardinality()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property versionInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property distinctMembers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property oneOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property sameAs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property incompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property minCardinality()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property complementOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property onProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property equivalentProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property inverseOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property backwardCompatibleWith()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property differentFrom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property priorVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property imports()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property allValuesFrom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property unionOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property hasValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property someValuesFrom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property disjointWith()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property cardinality()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Property intersectionOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property first()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property rest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property subject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property predicate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property object()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property type()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property value()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property language()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property direction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Property li(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal getLiteral(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.RDFNode getObject(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int,org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property comment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property domain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property label()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property isDefinedBy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property range()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property seeAlso()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subClassOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup implementWith(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subPropertyOf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property member()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.JA:void <clinit>()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <init>(org.apache.jena.reasoner.ReasonerFactory,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:org.apache.jena.rdf.model.Model loadSchemas(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.reasoner.rulesys.impl.WrappedReasonerFactory:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL2:org.apache.jena.rdf.model.Property property(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL2:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property ruleReasonerProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.ReasonerVocabulary:org.apache.jena.rdf.model.Property makeDirect(org.apache.jena.rdf.model.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.assembler.JA:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerGroup$ExpandingAssemblerGroup:org.apache.jena.assembler.assemblers.AssemblerGroup implementWith(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.AssemblerGroup$PlainAssemblerGroup:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addIndirectContent(java.util.List,org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalContents(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addExternalData(java.util.List,org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addQuotedContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void addLiteralContent(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:java.lang.String getEncoding(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.assemblers.DefaultModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:java.lang.String getPath(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.DocumentManagerAssembler:org.apache.jena.util.FileManager getFileManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.FileManagerAssembler:org.apache.jena.util.LocationMapper getLocationMapper(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.rdf.model.Model getBase(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.InfModelAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.LocationMapperAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.MemoryModelAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.assembler.Content getInitialContent(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.assemblers.ModelSourceAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.NamedModelAssembler:java.lang.String getModelName(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:java.util.List getSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelAssembler:org.apache.jena.ontology.OntModelSpec getOntModelSpec(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.rdf.model.ModelGetter getModelSource(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.String getLanguage(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntDocumentManager getDocumentManager(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:org.apache.jena.ontology.OntModelSpec getDefault(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:org.apache.jena.shared.PrefixMapping getPrefixes(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.assembler.assemblers.PrefixMappingAssembler:void setSimplePrefixes(org.apache.jena.rdf.model.Resource,org.apache.jena.shared.PrefixMapping)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory addSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.graph.Graph loadSchema(org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Assembler)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:org.apache.jena.reasoner.ReasonerFactory getReasonerFactory(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ReasonerFactoryAssembler:java.lang.String getOptionalClassName(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addIndirectRules(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addExternalRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.RuleSetAssembler:void addLiteralRules(org.apache.jena.rdf.model.Resource,java.util.List)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.rdf.model.Model openEmptyModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:org.apache.jena.graph.Graph getRootModel(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.assemblers.UnionModelAssembler:void addSubModels(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.graph.compose.MultiUnion,org.apache.jena.assembler.Mode)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadArbitraryClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:void loadAssemblerClasses(org.apache.jena.assembler.assemblers.AssemblerGroup,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource findSpecificType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Resource singleModelRoot(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ConstAssembler:org.apache.jena.assembler.assemblers.AssemblerGroup general()",
            "org.apache.jena.assembler.ImportManager:org.apache.jena.rdf.model.Model withImports(org.apache.jena.util.FileManager,org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.JA:org.apache.jena.rdf.model.Model getSchema()",
            "org.apache.jena.assembler.JA:void <clinit>()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec assemble(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Thing()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DataRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Ontology()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AllDifferent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DatatypeProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource SymmetricProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource TransitiveProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource DeprecatedProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource AnnotationProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Restriction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Class()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource OntologyProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource ObjectProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource FunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource InverseFunctionalProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.OWL$Init:org.apache.jena.rdf.model.Resource Nothing()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:java.lang.String NAMESPACE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource CLASS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource RESTRICTION()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listRestrictions()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Restriction createRestriction(java.lang.String,org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource THING()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntClass getLCA(org.apache.jena.ontology.OntModel,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.OntTools:void partitionByNamed(java.util.Iterator,java.util.List,java.util.List)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource NOTHING()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass getOntClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntTools:org.apache.jena.ontology.OntTools$DisjointSet lca(org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntClass,org.apache.jena.ontology.OntTools$LCAIndex)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource OBJECT_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listObjectProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.ObjectProperty convertToObjectProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isObjectProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isObjectProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DATATYPE_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDatatypeProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.DatatypeProperty convertToDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isDatatypeProperty()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDatatypeProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource TRANSITIVE_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listTransitiveProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.TransitiveProperty convertToTransitiveProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isTransitiveProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource SYMMETRIC_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listSymmetricProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.SymmetricProperty convertToSymmetricProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isSymmetricProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listFunctionalProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.FunctionalProperty convertToFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isFunctionalProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseFunctionalProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseFunctionalProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ALL_DIFFERENT()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllDifferent()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllDifferent createAllDifferent(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAllDifferent()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ONTOLOGY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntologies()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.Ontology createOntology(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntology()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DEPRECATED_CLASS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DEPRECATED_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ANNOTATION_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAnnotationProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AnnotationProperty createAnnotationProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isAnnotationProperty()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource ONTOLOGY_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource DATARANGE()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listDataRanges()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDataRange()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property EQUIVALENT_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getEquivalentProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentProperties()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasEquivalentProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeEquivalentProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property EQUIVALENT_CLASS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getEquivalentClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listEquivalentClasses()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasEquivalentClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeEquivalentClass(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DISJOINT_WITH()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getDisjointWith()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listDisjointWith()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isDisjointWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeDisjointWith(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SAME_AS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSameAs()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isSameAs(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSameAs(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DIFFERENT_FROM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.ontology.OntResource getDifferentFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listDifferentFrom()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDifferentFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDifferentFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DISTINCT_MEMBERS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllDifferentImpl:void setDistinctMembers(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void addDistinctMember(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:org.apache.jena.rdf.model.RDFList getDistinctMembers()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property UNION_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isUnionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.UnionClass convertToUnionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listUnionClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl:org.apache.jena.rdf.model.Property operator()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INTERSECTION_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl:org.apache.jena.rdf.model.Property operator()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isIntersectionClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.IntersectionClass convertToIntersectionClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIntersectionClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property COMPLEMENT_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void setOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.util.iterator.ExtendedIterator listOperands()",
            "org.apache.jena.ontology.impl.ComplementClassImpl:boolean hasOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.ontology.OntClass getOperand()",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void removeOperand(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:org.apache.jena.rdf.model.Property operator()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isComplementClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.ComplementClass convertToComplementClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listComplementClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ONE_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.DataRangeImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void addOneOf(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.DataRangeImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void setOneOf(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void addOneOf(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:org.apache.jena.rdf.model.RDFList getOneOf()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isEnumeratedClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.EnumeratedClass convertToEnumeratedClass(org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listEnumeratedClasses()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DataRange createDataRange(org.apache.jena.rdf.model.RDFList)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ON_PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.Restriction convertToRestriction(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int,org.apache.jena.ontology.OntClass)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listReferringRestrictions()",
            "org.apache.jena.ontology.impl.RestrictionImpl:void setOnProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.OntProperty getOnProperty()",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean onProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void removeOnProperty(org.apache.jena.rdf.model.Property)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property ALL_VALUES_FROM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void setAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getAllValuesFrom()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:boolean hasAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void removeAllValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isAllValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.AllValuesFromRestriction convertToAllValuesFromRestriction(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property HAS_VALUE()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void setHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:org.apache.jena.rdf.model.RDFNode getHasValue()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:boolean hasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void removeHasValue(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isHasValueRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.HasValueRestriction convertToHasValueRestriction(org.apache.jena.rdf.model.RDFNode)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SOME_VALUES_FROM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isSomeValuesFromRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.SomeValuesFromRestriction convertToSomeValuesFromRestriction(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void setSomeValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:org.apache.jena.rdf.model.Resource getSomeValuesFrom()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:boolean hasSomeValuesFrom(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void removeSomeValuesFrom(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property MIN_CARDINALITY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void setMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:int getMinCardinality()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:boolean hasMinCardinality(int)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void removeMinCardinality(int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMinCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MinCardinalityRestriction convertToMinCardinalityRestriction(int)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property MAX_CARDINALITY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void setMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:int getMaxCardinality()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:boolean hasMaxCardinality(int)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void removeMaxCardinality(int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isMaxCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.MaxCardinalityRestriction convertToMaxCardinalityRestriction(int)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property CARDINALITY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void setCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:int getCardinality()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:boolean hasCardinality(int)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void removeCardinality(int)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String,org.apache.jena.rdf.model.Property,int)",
            "org.apache.jena.ontology.impl.RestrictionImpl:boolean isCardinalityRestriction()",
            "org.apache.jena.ontology.impl.RestrictionImpl:org.apache.jena.ontology.CardinalityRestriction convertToCardinalityRestriction(int)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INVERSE_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getInverseOf()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverseOf()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean isInverseOf(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeInverseProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listInverse()"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property IMPORTS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void addedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl$ImportsListener:void removedStatement(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntModelImpl:java.util.Set listImportedOntologyURIs(boolean)",
            "org.apache.jena.ontology.impl.OntologyImpl:void setImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getImport()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listImports()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean imports(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeImport(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.OntDocumentManager:void unloadImports(org.apache.jena.ontology.OntModel,java.util.List)",
            "org.apache.jena.ontology.OntDocumentManager:void queueImports(org.apache.jena.rdf.model.Model,java.util.List,org.apache.jena.ontology.Profile)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property PRIOR_VERSION()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntologyImpl:void setPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listPriorVersion()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean hasPriorVersion(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removePriorVersion(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntologyImpl:void setBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listBackwardCompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeBackwardCompatibleWith(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property INCOMPATIBLE_WITH()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntologyImpl:void setIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void addIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.ontology.OntResource getIncompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:org.apache.jena.util.iterator.ExtendedIterator listIncompatibleWith()",
            "org.apache.jena.ontology.impl.OntologyImpl:boolean isIncompatibleWith(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntologyImpl:void removeIncompatibleWith(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property VERSION_INFO()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listVersionInfo()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasVersionInfo(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeVersionInfo(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getAxiomTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getAnnotationProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getClassDescriptionTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listClasses()"
        ]
    },
    "org.apache.jena.ontology.ProfileRegistry:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()",
            "org.apache.jena.ontology.OntModelSpec:org.apache.jena.ontology.OntModelSpec getDefaultSpec(java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void setLanguage(java.lang.String)",
            "org.apache.jena.ontology.OntModelSpec:void <clinit>()",
            "org.apache.jena.ontology.ProfileRegistry:void <init>()",
            "org.apache.jena.ontology.ProfileRegistry:org.apache.jena.ontology.ProfileRegistry getInstance()",
            "org.apache.jena.ontology.ProfileRegistry:void <clinit>()",
            "org.apache.jena.rdf.model.ModelFactory:org.apache.jena.ontology.OntModel createOntologyModel()"
        ]
    },
    "org.apache.jena.vocabulary.OWL2:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.OWL2:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelFactory:void <clinit>()",
            "org.apache.jena.rdf.model.impl.ReifierStd:void <clinit>()",
            "org.apache.jena.reasoner.rulesys.builtins.ListContains:boolean listContains(org.apache.jena.graph.Node,org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListEntry:org.apache.jena.graph.Node getEntry(org.apache.jena.graph.Node,int,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.builtins.ListLength:int getLength(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.Util:org.apache.jena.graph.Node doMakeList(org.apache.jena.graph.Node[],int,org.apache.jena.graph.Graph)",
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.AssemblerBase:void checkType(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.assemblers.ModelAssembler:org.apache.jena.rdf.model.Resource completedClone(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:org.apache.jena.rdf.model.Model fullModel(org.apache.jena.assembler.ImportManager,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findAssemblerRoots(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addIntersections(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.assembler.ModelExpansion:void addTypeToAll(org.apache.jena.rdf.model.Resource,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:void removeElementsWithoutType(java.util.Set,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean isLangString(org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.ontology.impl.OWLDLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$20:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$10:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$11:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$12:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$13:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$14:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$15:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$16:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$17:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$18:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$21:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$4:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$6:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$7:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$8:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$9:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:java.util.Set allTypes(org.apache.jena.graph.Node,org.apache.jena.graph.Graph)",
            "org.apache.jena.ontology.impl.OWLProfile$SupportsCheck:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource PROPERTY()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource LIST()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource NIL()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property FIRST()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property REST()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listInstances(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void dropIndividual(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isRestriction()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntModelImpl$RdfTypeTestFn:java.lang.Object reduce(org.apache.jena.rdf.model.RDFNode,java.lang.Object)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listAllOntProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ObjectProperty createObjectProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator findByType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.Resource getResourceWithType(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void setRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasRDFType(org.apache.jena.rdf.model.Resource,java.lang.String,boolean)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeRDFType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasType(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode convertToType(org.apache.jena.rdf.model.Resource,java.lang.String,java.lang.Class)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource PROPERTY()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource LIST()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource NIL()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property FIRST()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property REST()",
            "org.apache.jena.ontology.OntDocumentManager:void processMetadata(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Alt setDefault(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.AltImpl:org.apache.jena.rdf.model.Statement getDefaultStatement()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean is(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isAlt()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isBag()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:boolean isSeq()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container add(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Resource createResource(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.RDFList createList(java.util.Iterator)",
            "org.apache.jena.rdf.model.impl.ModelCom:java.util.Iterator listTypes()",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Bag createBag(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Alt createAlt(java.lang.String)",
            "org.apache.jena.rdf.model.impl.ModelCom:org.apache.jena.rdf.model.Seq createSeq(java.lang.String)",
            "org.apache.jena.rdf.model.impl.PropertyImpl:int computeOrdinal()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl:void <init>(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Literal getLiteral(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.RDFNode getObject(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:boolean getBoolean(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:byte getByte(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:short getShort(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:int getInt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:long getLong(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:char getChar(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:float getFloat(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:double getDouble(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getString(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:java.lang.String getLanguage(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Resource getResource(int,org.apache.jena.rdf.model.ResourceF)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Bag getBag(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Alt getAlt(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq getSeq(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,boolean)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,long)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,float)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,double)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,char)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.String,java.lang.String)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq set(int,java.lang.Object)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq add(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Seq remove(int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(int,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftUp(int,int)",
            "org.apache.jena.rdf.model.impl.SeqImpl:void shiftDown(int,int)",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupNamespaces(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <clinit>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$1:org.apache.jena.rdf.model.Resource accept(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser$4:org.apache.jena.rdf.model.Statement accept(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wPropAttr(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void addTypeNameSpaces()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[] reification(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean canBeAttribute(org.apache.jena.rdf.model.Statement,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getRDFList(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement[][] getList(org.apache.jena.rdf.model.RDFNode,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:org.apache.jena.rdf.model.Statement getType(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <clinit>()",
            "org.apache.jena.reasoner.rulesys.impl.FRuleEngine:int scoreNodeBoundness(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.BindingEnvironment)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void translateIntersectionList(org.apache.jena.graph.Node,org.apache.jena.reasoner.Finder,java.util.List)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void <clinit>()",
            "org.apache.jena.reasoner.rulesys.Util:java.util.List convertList(org.apache.jena.graph.Node,org.apache.jena.reasoner.rulesys.RuleContext,java.util.List)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:void register(java.lang.String,org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.ReasonerRegistry:org.apache.jena.rdf.model.Resource getDescription(java.lang.String)",
            "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Node)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.sys.InitJenaCore:void init()",
            "org.apache.jena.ttl.turtle.TurtleParserBase:void <init>()",
            "org.apache.jena.util.PrintUtil:void init()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Alt()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Bag()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource _Property()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Seq()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Statement()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource List()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource nil()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property first()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property rest()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property subject()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property predicate()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property object()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property type()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property value()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource CompoundLiteral()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property language()",
            "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Property direction()",
            "org.apache.jena.vocabulary.RDF:org.apache.jena.rdf.model.Property li(int)",
            "org.apache.jena.vocabulary.RDF:void <clinit>()",
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Alt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Bag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource _Property()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Seq()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource Statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource List()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource nil()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDF$Init:org.apache.jena.rdf.model.Resource CompoundLiteral()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDF$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDF:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Class()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Datatype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Container()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource ContainerMembershipProperty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Resource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void ignorableWhitespace(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitChars(javax.xml.stream.events.Characters)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.XMLHandler:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitChars(javax.xml.stream.events.Characters)"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitChars(javax.xml.stream.events.Characters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.builtins.IsDType:boolean isTypeOK(org.apache.jena.graph.Node,org.apache.jena.graph.Node)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasoner:void <clinit>()",
            "org.apache.jena.vocabulary.RDFS$Nodes:void <clinit>()"
        ]
    },
    "org.apache.jena.vocabulary.RDFS:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.ContentAssembler:void <clinit>()",
            "org.apache.jena.assembler.exceptions.AssemblerException:java.lang.String getLabels(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:java.util.Set findSpecificTypes(org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.AssemblerHelp:boolean hasNoCompetingSubclass(java.util.List,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.assembler.ModelExpansion:void addSubclassesFrom(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSuperClasses(org.apache.jena.rdf.model.Model,org.apache.jena.assembler.ModelExpansion$LinkedSeq,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set selectRootClasses(org.apache.jena.rdf.model.Model,java.util.Set)",
            "org.apache.jena.assembler.ModelExpansion:java.util.Set findClassesBySubClassOf(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addDomainTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addRangeTypes(org.apache.jena.rdf.model.Model,org.apache.jena.rdf.model.Model)",
            "org.apache.jena.assembler.ModelExpansion:void addSupertypes(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.ontology.impl.OWLDLProfile$20:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLDLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$19:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$3:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SUB_PROPERTY_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SUB_CLASS_OF()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DOMAIN()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property RANGE()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property LABEL()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property COMMENT()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SEE_ALSO()",
            "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property IS_DEFINED_BY()",
            "org.apache.jena.ontology.impl.OWLProfile:java.util.Iterator getAnnotationProperties()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean isHierarchyRoot()",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean canProveSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()",
            "org.apache.jena.ontology.impl.OntResourceImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.RDFSProfile$1:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RDFSProfile:java.lang.String NAMESPACE()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource CLASS()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SUB_PROPERTY_OF()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SUB_CLASS_OF()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property DOMAIN()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property RANGE()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property LABEL()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property COMMENT()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SEE_ALSO()",
            "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property IS_DEFINED_BY()",
            "org.apache.jena.ontology.impl.RDFSProfile:java.util.Iterator getAnnotationProperties()",
            "org.apache.jena.ontology.impl.RDFSProfile:java.util.Iterator getClassDescriptionTypes()",
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)",
            "org.apache.jena.ontology.ProfileRegistry:void <clinit>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setupMaps()",
            "org.apache.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.OWLRuleTranslationHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void resetTGCCache()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void prepare()",
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:java.util.HashMap getDTRange()",
            "org.apache.jena.reasoner.rulesys.OWLFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMicroReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.OWLMiniReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveEngine:void <clinit>()",
            "org.apache.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory:org.apache.jena.rdf.model.Model getCapabilities()",
            "org.apache.jena.reasoner.TriplePattern:java.lang.String simplePrintString(org.apache.jena.graph.Node)",
            "org.apache.jena.shared.PrefixMapping:void <clinit>()",
            "org.apache.jena.sys.InitJenaCore:void init()",
            "org.apache.jena.util.PrintUtil:void init()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Class()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Datatype()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Container()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource ContainerMembershipProperty()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Literal()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Resource Resource()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property comment()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property domain()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property label()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property isDefinedBy()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property range()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property seeAlso()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subClassOf()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property subPropertyOf()",
            "org.apache.jena.vocabulary.RDFS$Init:org.apache.jena.rdf.model.Property member()",
            "org.apache.jena.vocabulary.RDFS:void <clinit>()",
            "org.apache.jena.vocabulary.ReasonerVocabulary:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.OntModelSpec:void setLanguage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.assembler.assemblers.OntModelSpecAssembler:java.lang.Object open(org.apache.jena.assembler.Assembler,org.apache.jena.rdf.model.Resource,org.apache.jena.assembler.Mode)",
            "org.apache.jena.ontology.OntModelSpec:void <init>(java.lang.String,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.rdf.model.ModelMaker,org.apache.jena.ontology.OntDocumentManager,org.apache.jena.reasoner.ReasonerFactory,java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.ProfileRegistry:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.ProfileRegistry:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.ProfileRegistry:org.apache.jena.ontology.ProfileRegistry getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listOntProperties()",
            "org.apache.jena.ontology.OntModelSpec:void setLanguage(java.lang.String)"
        ]
    },
    "org.apache.jena.rdf.model.impl.ReifierStd:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.ModelReifier:boolean isReified(org.apache.jena.graph.FrontsTriple)",
            "org.apache.jena.rdf.model.impl.ModelReifier:void removeAllReifications(org.apache.jena.graph.FrontsTriple)",
            "org.apache.jena.rdf.model.impl.ModelReifier:void removeReification(org.apache.jena.rdf.model.ReifiedStatement)",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements()",
            "org.apache.jena.rdf.model.impl.ModelReifier:org.apache.jena.util.iterator.ExtendedIterator findReifiedStatements(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl$1:org.apache.jena.graph.Triple getTriple(org.apache.jena.enhanced.EnhGraph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:boolean isValid()",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.impl.ReifiedStatementImpl installInReifier()",
            "org.apache.jena.rdf.model.impl.ReifiedStatementImpl:org.apache.jena.rdf.model.ReifiedStatement createExistingReifiedStatement(org.apache.jena.rdf.model.impl.ModelCom,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findExposed(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Triple getTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean hasTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Node)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator allNodes(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.util.iterator.ExtendedIterator findNodesForTriple(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple,boolean)",
            "org.apache.jena.rdf.model.impl.ReifierStd:org.apache.jena.graph.Node reifyAs(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void remove(org.apache.jena.graph.Graph,org.apache.jena.graph.Node,org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:boolean lambda$static$0(org.apache.jena.graph.Triple)",
            "org.apache.jena.rdf.model.impl.ReifierStd:void <clinit>()",
            "org.apache.jena.rdf.model.impl.ReifierStd$lambda_static_0__72:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.graph.impl.LiteralLabelImpl:boolean isLangString(org.apache.jena.graph.impl.LiteralLabel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean sameValueAs(org.apache.jena.graph.impl.LiteralLabel,org.apache.jena.graph.impl.LiteralLabel)",
            "org.apache.jena.graph.impl.LiteralLabelImpl:boolean isStringValue(org.apache.jena.graph.impl.LiteralLabel)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource LIST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Resource NIL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property FIRST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property REST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.OntClassImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$lambda_listOneOf_0__50:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listDeclaredProperties_0__59:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_1__60:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AllDifferentImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.DataRangeImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IndividualImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntResourceImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntLanguageTerm()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode getPropertyValue(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listPropertyValues$5(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listIsDefinedBy$1(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.RDFNode lambda$listSeeAlso$0(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntologyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntologyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$lambda_listOneOf_0__50:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listInverse_0__52:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listReferringRestrictions_1__54:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.DataRangeImpl$lambda_listOneOf_0__55:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.AllDifferentImpl$lambda_listDistinctMembers_0__56:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listDeclaredProperties_0__59:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntClassImpl$lambda_listInstances_1__60:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listSeeAlso_0__62:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listIsDefinedBy_1__63:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listVersionInfo_2__64:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listLabels_3__65:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listComments_4__66:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listPropertyValues_5__67:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listAs_6__68:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_8__69:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listDirectPropertyValues_7__70:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.IndividualImpl$lambda_listOntClasses_0__71:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource PROPERTY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listAllProperties()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntProperty createOntProperty(java.lang.String)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource LIST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource NIL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.rdf.model.RDFList createList()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property FIRST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void remove()",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property REST()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:int computeOrdinal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.PropertyImpl:int getOrdinal()"
        ]
    },
    "org.apache.jena.rdf.model.impl.RDFListImpl:void <init>(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdf.model.impl.RDFListImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter$1:void warn(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter$1:void warn(java.lang.String,java.lang.Exception)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <init>()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdfxml.xmloutput.impl.SimpleLogger setLogger(org.apache.jena.rdfxml.xmloutput.impl.SimpleLogger)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String longAnonId(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void primeNamespace(org.apache.jena.rdf.model.Model)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String xmlnsDecl()",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfEl(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String rdfAt(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLBody(org.apache.jena.rdf.model.Model,java.io.PrintWriter,java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean isPredefinedEntityName(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLDeclaration(java.io.Writer,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.RDFErrorHandler setErrorHandler(org.apache.jena.rdf.model.RDFErrorHandler)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String escapedId(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void escape(java.lang.StringBuffer,char)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setAttributeQuoteChar(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setWidth(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setTab(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowDoctypeDeclaration(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowXmlDeclaration(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean getBoolean(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Boolean getBooleanValue(java.lang.Object,java.lang.Boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setTypes(org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String checkURI(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean checkLegalPrefix(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:int str2flags(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void <clinit>()",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void setLocalName(java.lang.String)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void run(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.reasoner.Finder,org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)",
            "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:void <clinit>()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <clinit>()"
        ]
    },
    "org.apache.jena.rdfxml.xmlinput.impl.SAX2RDFImpl:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmlinput.StAX2SAX:void emitChars(javax.xml.stream.events.Characters)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SUB_PROPERTY_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSuperProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSuperProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SUB_CLASS_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSuperClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property DOMAIN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeDomain(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property RANGE()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeRange(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property LABEL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property COMMENT()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property SEE_ALSO()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSeeAlso(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OWLProfile:org.apache.jena.rdf.model.Property IS_DEFINED_BY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDefinedBy(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:java.lang.String NAMESPACE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Resource CLASS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listIndividuals()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass()",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.OntClass createClass(java.lang.String)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.ComplementClass createComplementClass(java.lang.String,org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.UnionClass createUnionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String,org.apache.jena.rdf.model.RDFList)",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isIndividual()"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SUB_PROPERTY_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSuperProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasSuperProperty(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeSuperProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setSubProperty(org.apache.jena.rdf.model.Property)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntProperty getSubProperty()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listSubProperties(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SUB_CLASS_OF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:void setSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void addSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSuperClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSuperClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClass(org.apache.jena.rdf.model.Resource,boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:void removeSuperClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:void setSubClass(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.ontology.OntClass getSubClass()",
            "org.apache.jena.ontology.impl.OntClassImpl:org.apache.jena.util.iterator.ExtendedIterator listSubClasses(boolean)",
            "org.apache.jena.ontology.impl.OntClassImpl:boolean hasSuperClassDirect(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listRDFTypes(boolean)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property DOMAIN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntClassImpl:boolean testDomain(org.apache.jena.rdf.model.Property,boolean)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDomain()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasDomain(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeDomain(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property RANGE()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:void setRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void addRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.ontology.OntResource getRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listRange()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:boolean hasRange(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void removeRange(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property LABEL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setLabel(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addLabel(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getLabel(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listLabels(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeLabel(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property COMMENT()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setComment(java.lang.String,java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addComment(org.apache.jena.rdf.model.Literal)",
            "org.apache.jena.ontology.impl.OntResourceImpl:java.lang.String getComment(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listComments(java.lang.String)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeComment(org.apache.jena.rdf.model.Literal)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property SEE_ALSO()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listSeeAlso()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean hasSeeAlso(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeSeeAlso(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:org.apache.jena.rdf.model.Property IS_DEFINED_BY()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntResourceImpl:void setIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void addIsDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.rdf.model.Resource getIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:org.apache.jena.util.iterator.ExtendedIterator listIsDefinedBy()",
            "org.apache.jena.ontology.impl.OntResourceImpl:boolean isDefinedBy(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.ontology.impl.OntResourceImpl:void removeDefinedBy(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:java.util.Iterator getAnnotationProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OWLDLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLLiteProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OWLProfile$2:boolean doCheck(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)"
        ]
    },
    "org.apache.jena.ontology.impl.RDFSProfile:java.util.Iterator getClassDescriptionTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntModelImpl:org.apache.jena.util.iterator.ExtendedIterator listClasses()"
        ]
    },
    "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.ComplementClassImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.ComplementClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ComplementClassImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.EnumeratedClassImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.EnumeratedClassImpl$lambda_listOneOf_0__50:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.IntersectionClassImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.IntersectionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IntersectionClassImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.RestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllValuesFromRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.CardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.CardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.HasValueRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MaxCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MaxCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.MinCardinalityQRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.MinCardinalityRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl$1:boolean canWrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:boolean isValid()",
            "org.apache.jena.ontology.impl.QualifiedRestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.RestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.RestrictionImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SomeValuesFromRestrictionImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.UnionClassImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.UnionClassImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.UnionClassImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.AllDifferentImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AllDifferentImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AllDifferentImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.AllDifferentImpl$lambda_listDistinctMembers_0__56:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.AnnotationPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.DataRangeImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.DataRangeImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DataRangeImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.DataRangeImpl$lambda_listOneOf_0__55:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.DatatypePropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.FunctionalPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.IndividualImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.IndividualImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.IndividualImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.IndividualImpl$lambda_listOntClasses_0__71:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.ObjectPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.DatatypePropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.FunctionalPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.InverseFunctionalPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.ObjectPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl:void <clinit>()",
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listInverse_0__52:java.lang.Object apply(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$lambda_listReferringRestrictions_1__54:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl:boolean isOntLanguageTerm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.OntPropertyImpl:org.apache.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)",
            "org.apache.jena.ontology.impl.OntModelImpl$isOntLanguageTerm__14:boolean test(java.lang.Object)",
            "org.apache.jena.ontology.impl.OntPropertyImpl$isOntLanguageTerm__53:boolean test(java.lang.Object)"
        ]
    },
    "org.apache.jena.ontology.impl.OntologyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.OntologyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.OntologyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.SymmetricPropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.SymmetricPropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.TransitivePropertyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.enhanced.BuiltinPersonalities:void <clinit>()",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl$1:org.apache.jena.enhanced.EnhNode wrap(org.apache.jena.graph.Node,org.apache.jena.enhanced.EnhGraph)",
            "org.apache.jena.ontology.impl.TransitivePropertyImpl:void <clinit>()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listLabels_3__65:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.ontology.impl.OntResourceImpl$lambda_listComments_4__66:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.graph.Node:java.lang.Object writeReplace()",
            "org.apache.jena.graph.Triple:java.lang.Object writeReplace()",
            "org.apache.jena.mem.HashedBunchMap:org.apache.jena.mem.TripleBunch getOrSet(java.lang.Object,java.util.function.Function)",
            "org.apache.jena.util.iterator.Map1Iterator:java.lang.Object next()"
        ]
    },
    "org.apache.jena.rdf.model.impl.PropertyImpl:int getOrdinal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.ontology.impl.AnnotationPropertyImpl:int getOrdinal()",
            "org.apache.jena.ontology.impl.OntPropertyImpl:int getOrdinal()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int size()",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:org.apache.jena.rdf.model.NodeIterator listContainerMembers(org.apache.jena.rdf.model.impl.NodeIteratorFactory)",
            "org.apache.jena.rdf.model.impl.ContainerImpl:int containerIndexOf(org.apache.jena.rdf.model.RDFNode)",
            "org.apache.jena.rdf.model.impl.SeqImpl:org.apache.jena.rdf.model.Container remove(org.apache.jena.rdf.model.Statement)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wTypedNodeOrDescription(org.apache.jena.rdfxml.xmloutput.impl.Unparser$WType,org.apache.jena.rdf.model.Resource,org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter$1:void warn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Abbreviated:void blockRule(org.apache.jena.rdf.model.Resource)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLDeclaration(java.io.Writer,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setAttributeQuoteChar(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setWidth(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setTab(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setTypes(org.apache.jena.rdf.model.Resource[])",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean checkLegalPrefix(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:int str2flags(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void blockRule(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter$1:void warn(java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String tag(java.lang.String,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdfxml.xmloutput.impl.SimpleLogger setLogger(org.apache.jena.rdfxml.xmloutput.impl.SimpleLogger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String longAnonId(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String anonId(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean isPredefinedEntityName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String substitutedAttribute(java.lang.String)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void generateDoctypeDeclaration(org.apache.jena.rdf.model.Model,java.io.PrintWriter)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void writeXMLDeclaration(java.io.Writer,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void write(org.apache.jena.rdf.model.Model,java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.RDFErrorHandler setErrorHandler(org.apache.jena.rdf.model.RDFErrorHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String escapedId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String longAnonId(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void escape(java.lang.StringBuffer,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String escapedId(java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setAttributeQuoteChar(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setWidth(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Integer setTab(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowDoctypeDeclaration(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowXmlDeclaration(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean getBoolean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Boolean getBooleanValue(java.lang.Object,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowDoctypeDeclaration(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String setShowXmlDeclaration(java.lang.Object)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean getBoolean(java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:org.apache.jena.rdf.model.Resource[] setTypes(org.apache.jena.rdf.model.Resource[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:boolean checkLegalPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setFromWriterSystemProperties(java.util.Map,java.util.Set)",
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:void setNsPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:int str2flags(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.Object setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void setLocalName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void <init>(org.apache.jena.rdfxml.xmloutput.impl.Abbreviated,java.lang.String,org.apache.jena.rdf.model.Model,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:void wRDF()"
        ]
    },
    "org.apache.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook:boolean needsRerun(org.apache.jena.reasoner.rulesys.FBRuleInfGraph,org.apache.jena.graph.Triple)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.FBRuleInfGraph:void performAdd(org.apache.jena.graph.Triple)"
        ]
    },
    "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <init>(org.apache.jena.reasoner.ReasonerFactory)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:boolean doSetParameter(org.apache.jena.rdf.model.Property,java.lang.Object)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:org.apache.jena.reasoner.Reasoner bindSchema(org.apache.jena.graph.Graph)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:java.util.List loadRulesLevel(java.lang.String)",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasoner:void <clinit>()",
            "org.apache.jena.reasoner.rulesys.RDFSRuleReasonerFactory:org.apache.jena.reasoner.Reasoner create(org.apache.jena.rdf.model.Resource)"
        ]
    },
    "org.apache.jena.ontology.impl.OntModelImpl$isOntLanguageTerm__14:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.ontology.impl.OntPropertyImpl$isOntLanguageTerm__53:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.util.iterator.FilterIterator:boolean hasNext()"
        ]
    },
    "org.apache.jena.rdfxml.xmloutput.impl.BaseXMLWriter:java.lang.String anonId(org.apache.jena.rdf.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceId(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Basic:void writeResourceReference(org.apache.jena.rdf.model.Resource,java.io.PrintWriter)",
            "org.apache.jena.rdfxml.xmloutput.impl.Unparser:boolean wNodeIDAttr(org.apache.jena.rdf.model.Resource)"
        ]
    }
}
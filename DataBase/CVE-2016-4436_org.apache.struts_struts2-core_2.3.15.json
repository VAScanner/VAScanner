{
    "org.apache.struts2.dispatcher.mapper.DefaultActionMapper:java.lang.String cleanupActionName(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.DefaultActionMapper:void parseNameAndNamespace(java.lang.String,org.apache.struts2.dispatcher.mapper.ActionMapping,com.opensymphony.xwork2.config.ConfigurationManager)"
        ]
    },
    "org.apache.struts2.dispatcher.mapper.DefaultActionMapper:void parseNameAndNamespace(java.lang.String,org.apache.struts2.dispatcher.mapper.ActionMapping,com.opensymphony.xwork2.config.ConfigurationManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.DefaultActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)"
        ]
    },
    "org.apache.struts2.dispatcher.mapper.DefaultActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.CompositeActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.mapper.Restful2ActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ServletRedirectResult:void doExecute(java.lang.String,com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.views.jsp.TagUtils:java.lang.String buildNamespace(org.apache.struts2.dispatcher.mapper.ActionMapper,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.struts2.dispatcher.mapper.CompositeActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.CompositeActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ServletRedirectResult:void doExecute(java.lang.String,com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.views.jsp.TagUtils:java.lang.String buildNamespace(org.apache.struts2.dispatcher.mapper.ActionMapper,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.CompositeActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ServletRedirectResult:void doExecute(java.lang.String,com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.views.jsp.TagUtils:java.lang.String buildNamespace(org.apache.struts2.dispatcher.mapper.ActionMapper,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.struts2.dispatcher.mapper.Restful2ActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.mapper.CompositeActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.mapper.PrefixBasedActionMapper:org.apache.struts2.dispatcher.mapper.ActionMapping getMapping(javax.servlet.http.HttpServletRequest,com.opensymphony.xwork2.config.ConfigurationManager)",
            "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ServletRedirectResult:void doExecute(java.lang.String,com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.views.jsp.TagUtils:java.lang.String buildNamespace(org.apache.struts2.dispatcher.mapper.ActionMapper,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.dispatcher.ServletRedirectResult:void doExecute(java.lang.String,com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.StrutsResultSupport:void execute(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "org.apache.struts2.views.jsp.TagUtils:java.lang.String buildNamespace(org.apache.struts2.dispatcher.mapper.ActionMapper,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ActionComponent:void executeAction()",
            "org.apache.struts2.components.Component:java.lang.String determineNamespace(java.lang.String,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.dispatcher.ng.PrepareOperations:org.apache.struts2.dispatcher.mapper.ActionMapping findActionMapping(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ng.servlet.StrutsServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.struts2.dispatcher.StrutsResultSupport:void execute(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.Dispatcher:void serviceAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.ServletContext,org.apache.struts2.dispatcher.mapper.ActionMapping)",
            "org.apache.struts2.dispatcher.ServletRedirectResult:void execute(com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.interceptor.debugging.DebuggingInterceptor$2:void beforeResult(com.opensymphony.xwork2.ActionInvocation,java.lang.String)",
            "org.apache.struts2.interceptor.debugging.DebuggingInterceptor$3:void beforeResult(com.opensymphony.xwork2.ActionInvocation,java.lang.String)",
            "org.apache.struts2.interceptor.ExecuteAndWaitInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.interceptor.TokenSessionStoreInterceptor:java.lang.String handleInvalidToken(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "org.apache.struts2.components.ActionComponent:void executeAction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ActionComponent:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.Component:java.lang.String determineNamespace(java.lang.String,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.Component:java.lang.String determineActionURL(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.struts2.components.ComponentUrlProvider:java.lang.String determineNamespace(java.lang.String,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)",
            "org.apache.struts2.components.ServletUrlRenderer:void renderFormUrl(org.apache.struts2.components.Form)"
        ]
    },
    "org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.dispatcher.ng.servlet.StrutsServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.dispatcher.Dispatcher:void serviceAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.ServletContext,org.apache.struts2.dispatcher.mapper.ActionMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.ng.ExecuteOperations:void executeAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.struts2.dispatcher.mapper.ActionMapping)",
            "org.apache.struts2.dispatcher.FilterDispatcher:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.struts2.dispatcher.ServletRedirectResult:void execute(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.Dispatcher:void serviceAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.ServletContext,org.apache.struts2.dispatcher.mapper.ActionMapping)",
            "org.apache.struts2.dispatcher.ServletActionRedirectResult:void execute(com.opensymphony.xwork2.ActionInvocation)",
            "org.apache.struts2.interceptor.TokenSessionStoreInterceptor:java.lang.String handleInvalidToken(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "org.apache.struts2.interceptor.debugging.DebuggingInterceptor$2:void beforeResult(com.opensymphony.xwork2.ActionInvocation,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.interceptor.debugging.DebuggingInterceptor$3:void beforeResult(com.opensymphony.xwork2.ActionInvocation,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.interceptor.ExecuteAndWaitInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.interceptor.TokenSessionStoreInterceptor:java.lang.String handleInvalidToken(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.components.ActionComponent:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.Component:java.lang.String determineActionURL(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ComponentUrlProvider:java.lang.String determineActionURL(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map,java.lang.String,boolean,boolean,boolean,boolean)"
        ]
    },
    "org.apache.struts2.components.ComponentUrlProvider:java.lang.String determineNamespace(java.lang.String,com.opensymphony.xwork2.util.ValueStack,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.components.ServletUrlRenderer:void renderFormUrl(org.apache.struts2.components.Form)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.Form:void populateComponentHtmlId(org.apache.struts2.components.Form)"
        ]
    },
    "org.apache.struts2.dispatcher.ng.ExecuteOperations:void executeAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.struts2.dispatcher.mapper.ActionMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.struts2.dispatcher.ng.servlet.StrutsServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.struts2.dispatcher.ServletActionRedirectResult:void execute(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.dispatcher.Dispatcher:void serviceAction(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.ServletContext,org.apache.struts2.dispatcher.mapper.ActionMapping)",
            "org.apache.struts2.interceptor.TokenSessionStoreInterceptor:java.lang.String handleInvalidToken(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.components.ComponentUrlProvider:java.lang.String determineActionURL(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ServletUrlRenderer:void renderUrl(java.io.Writer,org.apache.struts2.components.UrlProvider)"
        ]
    },
    "org.apache.struts2.components.Form:void populateComponentHtmlId(org.apache.struts2.components.Form)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.UIBean:void evaluateParams()"
        ]
    },
    "org.apache.struts2.components.ServletUrlRenderer:void renderUrl(java.io.Writer,org.apache.struts2.components.UrlProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.Anchor:void evaluateExtraParams()",
            "org.apache.struts2.components.URL:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.UIBean:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.Anchor:boolean end(java.io.Writer,java.lang.String)",
            "org.apache.struts2.components.ClosingUIBean:boolean start(java.io.Writer)",
            "org.apache.struts2.components.File:void evaluateParams()",
            "org.apache.struts2.components.Head:void evaluateParams()",
            "org.apache.struts2.components.Reset:void evaluateParams()",
            "org.apache.struts2.components.Submit:void evaluateParams()",
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)",
            "org.apache.struts2.components.UpDownSelect:void evaluateParams()"
        ]
    },
    "org.apache.struts2.components.Anchor:void evaluateExtraParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.UIBean:void evaluateParams()"
        ]
    },
    "org.apache.struts2.components.URL:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.Anchor:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.ClosingUIBean:boolean start(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.Anchor:boolean start(java.io.Writer)",
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int onStart()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doStartTag()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.File:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.Head:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.Reset:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ClosingUIBean:boolean start(java.io.Writer)",
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.Submit:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.ClosingUIBean:boolean start(java.io.Writer)",
            "org.apache.struts2.components.Submit:boolean end(java.io.Writer,java.lang.String)",
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.OptGroup:boolean end(java.io.Writer,java.lang.String)",
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.UpDownSelect:void evaluateParams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.components.UIBean:boolean end(java.io.Writer,java.lang.String)"
        ]
    },
    "org.apache.struts2.components.Anchor:boolean start(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int onStart()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doStartTag()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.views.freemarker.tags.CallbackWriter:int onStart()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.views.jsp.ComponentTagSupport:int doStartTag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.struts2.components.Submit:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    },
    "org.apache.struts2.components.OptGroup:boolean end(java.io.Writer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.struts2.views.freemarker.tags.CallbackWriter:int afterBody()",
            "org.apache.struts2.views.jsp.ComponentTagSupport:int doEndTag()",
            "org.apache.struts2.views.jsp.IteratorTag:int doAfterBody()",
            "org.apache.struts2.views.velocity.components.AbstractDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)"
        ]
    }
}
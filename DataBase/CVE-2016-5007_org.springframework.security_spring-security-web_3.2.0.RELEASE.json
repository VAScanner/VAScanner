{
    "org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource:java.util.LinkedHashMap processMap(java.util.LinkedHashMap,org.springframework.expression.ExpressionParser)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource:void <init>(java.util.LinkedHashMap,org.springframework.security.access.expression.SecurityExpressionHandler)"
        ]
    },
    "org.springframework.security.web.DefaultSecurityFilterChain:boolean matches(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.FilterChainProxy:java.util.List getFilters(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.debug.DebugFilter:java.util.List getFilters(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.springframework.security.web.header.writers.HstsHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.header.HeaderWriterFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.header.HeaderWriterFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.springframework.security.web.util.matcher.OrRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.DefaultSecurityFilterChain:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.header.writers.HstsHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint:void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)",
            "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:boolean requiresAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.logout.LogoutFilter:boolean requiresLogout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.util.matcher.NegatedRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.AndRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.OrRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.savedrequest.HttpSessionRequestCache:void saveRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.csrf.CsrfFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource:java.util.Collection getAttributes(java.lang.Object)"
        ]
    },
    "org.springframework.security.web.util.matcher.NegatedRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.DefaultSecurityFilterChain:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.header.writers.HstsHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint:void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)",
            "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:boolean requiresAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.logout.LogoutFilter:boolean requiresLogout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.util.matcher.NegatedRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.AndRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.OrRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.savedrequest.HttpSessionRequestCache:void saveRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.csrf.CsrfFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource:java.util.Collection getAttributes(java.lang.Object)"
        ]
    },
    "org.springframework.security.web.util.matcher.AndRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.DefaultSecurityFilterChain:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.header.writers.HstsHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.header.writers.DelegatingRequestMatcherHeaderWriter:void writeHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint:void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)",
            "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:boolean requiresAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.authentication.logout.LogoutFilter:boolean requiresLogout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.util.matcher.NegatedRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.AndRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.util.matcher.OrRequestMatcher:boolean matches(javax.servlet.http.HttpServletRequest)",
            "org.springframework.security.web.savedrequest.HttpSessionRequestCache:void saveRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.springframework.security.web.csrf.CsrfFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource:java.util.Collection getAttributes(java.lang.Object)"
        ]
    },
    "org.springframework.security.web.csrf.CsrfFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource:java.util.Collection getAttributes(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator:boolean isAllowed(java.lang.String,java.lang.String,java.lang.String,org.springframework.security.core.Authentication)",
            "org.springframework.security.web.access.channel.ChannelProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.springframework.security.web.savedrequest.HttpSessionRequestCache:void saveRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.access.ExceptionTranslationFilter:void sendStartAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.AuthenticationException)"
        ]
    },
    "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:boolean requiresAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint:void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint:void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)",
            "org.springframework.security.web.authentication.www.BasicAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.ExceptionTranslationFilter:void sendStartAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.AuthenticationException)",
            "org.springframework.security.web.servletapi.HttpServlet3RequestFactory$Servlet3SecurityContextHolderAwareRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.springframework.security.web.authentication.logout.LogoutFilter:boolean requiresLogout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource:void <init>(java.util.LinkedHashMap,org.springframework.security.access.expression.SecurityExpressionHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.FilterChainProxy:java.util.List getFilters(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.FilterChainProxy:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.FilterChainProxy:java.util.List getFilters(java.lang.String)"
        ]
    },
    "org.springframework.security.web.debug.DebugFilter:java.util.List getFilters(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.debug.DebugFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.springframework.security.web.header.HeaderWriterFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator:boolean isAllowed(java.lang.String,java.lang.String,java.lang.String,org.springframework.security.core.Authentication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator:boolean isAllowed(java.lang.String,org.springframework.security.core.Authentication)"
        ]
    },
    "org.springframework.security.web.access.channel.ChannelProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.access.ExceptionTranslationFilter:void sendStartAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.AuthenticationException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.www.BasicAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.servletapi.HttpServlet3RequestFactory$Servlet3SecurityContextHolderAwareRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.FilterChainProxy:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.FilterChainProxy:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.springframework.security.web.FilterChainProxy:java.util.List getFilters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.debug.DebugFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.FilterChainProxy$VirtualFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator:boolean isAllowed(java.lang.String,org.springframework.security.core.Authentication)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.FilterChainProxy:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.FilterChainProxy$VirtualFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.security.web.FilterChainProxy:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.FilterChainProxy$VirtualFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.springframework.security.web.header.HeaderWriterFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.session.ConcurrentSessionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.session.SessionManagementFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.AnonymousAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.switchuser.SwitchUserFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.logout.LogoutFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.www.BasicAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.www.DigestAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.context.SecurityContextPersistenceFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.jaasapi.JaasApiIntegrationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.jaasapi.JaasApiIntegrationFilter$1:java.lang.Object run()",
            "org.springframework.security.web.savedrequest.RequestCacheAwareFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.csrf.CsrfFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.ExceptionTranslationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.channel.ChannelProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.springframework.security.web.access.intercept.FilterSecurityInterceptor:void invoke(org.springframework.security.web.FilterInvocation)",
            "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.springframework.security.web.session.ConcurrentSessionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.session.SessionManagementFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.AnonymousAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.switchuser.SwitchUserFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.logout.LogoutFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.www.DigestAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.context.SecurityContextPersistenceFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.jaasapi.JaasApiIntegrationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.jaasapi.JaasApiIntegrationFilter$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.savedrequest.RequestCacheAwareFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.access.ExceptionTranslationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.access.intercept.FilterSecurityInterceptor:void invoke(org.springframework.security.web.FilterInvocation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
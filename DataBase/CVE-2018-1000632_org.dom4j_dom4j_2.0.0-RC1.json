{
    "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.Namespace:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.dom4j.tree.DefaultNamespace:void <init>(java.lang.String,java.lang.String)",
            "org.dom4j.tree.DefaultNamespace:void <init>(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.QName:void <init>(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.dom4j.QName:void <init>(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.QName:void <init>(java.lang.String,org.dom4j.Namespace,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMDocumentFactory:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.dom4j.tree.DefaultNamespace:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNamespace:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultNamespace:void <init>(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.Namespace:org.dom4j.Node createXPathResult(org.dom4j.Element)",
            "org.dom4j.dom.DOMNamespace:void <init>(org.dom4j.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace get(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace get(java.lang.String)"
        ]
    },
    "org.dom4j.QName:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:void modifyTag(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentFactory:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document createDomDocument(org.dom4j.Document,org.w3c.dom.DOMImplementation)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.Reader)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(char[])"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.Namespace:org.dom4j.Node createXPathResult(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:org.dom4j.Node asXPathResult(org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMNamespace:void <init>(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace get(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String,java.lang.String)",
            "org.dom4j.Namespace:void <clinit>()"
        ]
    },
    "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName createQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void writeOpen(org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXWriter:void endElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void writeClose(org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName intern(org.dom4j.QName)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:void modifyTag(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMWriter:org.w3c.dom.Document createDomDocument(org.dom4j.Document,org.w3c.dom.DOMImplementation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.InputStream)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.Reader,java.lang.String)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMReader:org.dom4j.Namespace getNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractNode:org.dom4j.Node asXPathResult(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Node getXPathResult(int)"
        ]
    },
    "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.QName:void readObject(java.io.ObjectInputStream)",
            "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()",
            "org.dom4j.datatype.SchemaParser:void <clinit>()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.Namespace:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String,java.lang.String)",
            "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String)",
            "org.dom4j.Namespace:void <clinit>()",
            "org.dom4j.QName:void <init>(java.lang.String)",
            "org.dom4j.QName:void <init>(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.QName:void <init>(java.lang.String,org.dom4j.Namespace,java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.QName:void readObject(java.io.ObjectInputStream)",
            "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()",
            "org.dom4j.datatype.SchemaParser:void <clinit>()",
            "org.dom4j.io.DOMReader:void clearNamespaceStack()",
            "org.dom4j.io.DOMWriter:boolean isNamespaceDeclaration(org.dom4j.Namespace)",
            "org.dom4j.io.DOMWriter:void resetNamespaceStack()",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXWriter:boolean isIgnoreableNamespace(org.dom4j.Namespace,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.XMLWriter:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void <init>()",
            "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream)",
            "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void <init>(org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:boolean isNamespaceDeclaration(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.NamespaceCache:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:java.util.Map getNamespaceCache(org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.Namespace:org.dom4j.Namespace get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String)",
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXWriter:void writeOpen(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXWriter:void writeClose(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.bean.BeanElement:void <init>(java.lang.String,org.dom4j.Namespace,java.lang.Object)",
            "org.dom4j.datatype.SchemaParser:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void setNamespace(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.tree.BaseElement:void <init>(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:void <init>(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.FlyweightAttribute:void <init>(java.lang.String,java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName createQName(java.lang.String,java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute createAttribute(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.dom4j.QName getQName(java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.QName createQName(javax.xml.namespace.QName)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.QName:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()",
            "org.dom4j.datatype.SchemaParser:void <clinit>()"
        ]
    },
    "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.QName:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.QNameCache:org.dom4j.QName intern(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.QName intern(org.dom4j.QName)"
        ]
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document)",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.File)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.net.URL)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMReader:org.dom4j.Namespace getNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Namespace readNamespace(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:void push(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Node getXPathResult(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.DocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMReader:org.dom4j.Namespace getNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.QName:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.DocumentFactory getInstance()",
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)",
            "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()",
            "org.dom4j.datatype.SchemaParser:void <init>()"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void <init>()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void <clinit>()"
        ]
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMReader:void clearNamespaceStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:org.dom4j.Document read(org.w3c.dom.Document)"
        ]
    },
    "org.dom4j.io.DOMWriter:boolean isNamespaceDeclaration(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.DOMWriter:void resetNamespaceStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document)",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)"
        ]
    },
    "org.dom4j.io.SAXWriter:boolean isIgnoreableNamespace(org.dom4j.Namespace,org.dom4j.tree.NamespaceStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.XMLWriter:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:void <init>(java.io.Writer)",
            "org.dom4j.io.HTMLWriter:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLResult:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void <init>(java.io.Writer)",
            "org.dom4j.tree.AbstractDocument:java.lang.String asXML()",
            "org.dom4j.tree.AbstractDocument:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:java.lang.String asXML()",
            "org.dom4j.tree.AbstractElement:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.io.XMLWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLResult:void <init>()",
            "org.dom4j.jaxb.JAXBWriter:org.dom4j.io.XMLWriter getWriter()"
        ]
    },
    "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLResult:void <init>(java.io.OutputStream)"
        ]
    },
    "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:void <init>(java.io.OutputStream)",
            "org.dom4j.io.HTMLWriter:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLResult:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)"
        ]
    },
    "org.dom4j.io.XMLWriter:void <init>(org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:void <init>()",
            "org.dom4j.io.HTMLWriter:void <init>(org.dom4j.io.OutputFormat)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.XMLWriter createXMLWriter()",
            "org.dom4j.jaxb.JAXBWriter:org.dom4j.io.XMLWriter getWriter()"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeOpen(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.XMLWriter:boolean isNamespaceDeclaration(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeAttribute:java.lang.String resolveNamespacePrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.xpath.DefaultNamespaceContext:java.lang.String translateNamespacePrefixToUri(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeAttribute:java.lang.String getNamespacePrefix(java.lang.String)",
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeAttribute:java.lang.String resolveNamespacePrefix(java.lang.String)",
            "org.dom4j.datatype.DatatypeElement:java.lang.String resolveNamespacePrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.xpath.DefaultNamespaceContext:java.lang.String translateNamespacePrefixToUri(java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeAttribute:java.lang.String getNamespacePrefix(java.lang.String)",
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)",
            "org.dom4j.datatype.DatatypeElement:java.lang.String getNamespacePrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)"
        ]
    },
    "org.dom4j.tree.QNameCache:java.util.Map getNamespaceCache(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.QNameCache:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.QName createQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.DocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.dom4j.DocumentHelper:org.dom4j.QName createQName(java.lang.String)",
            "org.dom4j.bean.BeanElement:void <init>(java.lang.String,java.lang.Object)",
            "org.dom4j.bean.BeanMetaData:void <init>(java.lang.Class)",
            "org.dom4j.datatype.NamedTypeResolver:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.datatype.SchemaParser:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttribute(java.lang.String)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute createAttribute(org.w3c.dom.Attr)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractElement:void setName(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.QName getQName(java.lang.String)",
            "org.dom4j.tree.BaseElement:void <init>(java.lang.String)",
            "org.dom4j.tree.DefaultElement:void <init>(java.lang.String)",
            "org.dom4j.tree.FlyweightAttribute:void <init>(java.lang.String,java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String)"
        ]
    },
    "org.dom4j.QName:org.dom4j.QName get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.QName:org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void <clinit>()"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Document)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanElement:void <init>(java.lang.String,org.dom4j.Namespace,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.SchemaParser:org.dom4j.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeAttribute(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory,org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype getTypeByName(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void setNamespace(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)"
        ]
    },
    "org.dom4j.tree.BaseElement:void <init>(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NonLazyElement:void <init>(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.DefaultElement:void <init>(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void <init>(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.FlyweightAttribute:void <init>(java.lang.String,java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultAttribute:void <init>(java.lang.String,java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultAttribute:void <init>(org.dom4j.Element,java.lang.String,java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.QName createQName(java.lang.String,java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName pushQName(java.lang.String,java.lang.String,org.dom4j.Namespace,java.lang.String)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.dom4j.Attribute createAttribute(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.dom4j.QName getQName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.QName createQName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Attribute createAttribute(org.dom4j.Element,javax.xml.stream.events.Attribute)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.DocumentFactory:org.dom4j.QName intern(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.lang.String)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.lang.String)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Namespace readNamespace(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Element readElement(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.QName getQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:void push(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.DocumentFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.dom4j.DocumentHelper:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttribute(java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Attribute createAttribute(org.dom4j.Element,javax.xml.stream.events.Attribute)",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void <clinit>()"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void build(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void build(org.dom4j.Document,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeAttribute(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory,org.dom4j.Element)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.DOMReader:org.dom4j.Document read(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.HTMLWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String,boolean,boolean,boolean,boolean)"
        ]
    },
    "org.dom4j.io.XMLResult:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XMLWriter:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DocumentInputSource:java.io.Reader getCharacterStream()",
            "org.dom4j.io.XMLResult:void <init>(java.io.Writer)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:java.lang.String asXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.lang.String asXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBSupport:javax.xml.bind.Element unmarshal(org.dom4j.Element)",
            "org.dom4j.tree.AbstractNode:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XMLResult:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:org.dom4j.io.XMLWriter getWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.File)",
            "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.OutputStream)",
            "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.Writer)",
            "org.dom4j.jaxb.JAXBWriter:void startDocument()",
            "org.dom4j.jaxb.JAXBWriter:void endDocument()",
            "org.dom4j.jaxb.JAXBWriter:void write(javax.xml.bind.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeClose(javax.xml.bind.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeOpen(javax.xml.bind.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeCloseElement(org.dom4j.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeOpenElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.XMLResult:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XMLResult:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void <init>(org.dom4j.io.OutputFormat)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.XMLWriter createXMLWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.File)",
            "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.OutputStream)",
            "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.Writer)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeOpen(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBWriter:void writeOpen(javax.xml.bind.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeOpenElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.datatype.DatatypeAttribute:java.lang.String resolveNamespacePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpath.DefaultNamespaceContext:java.lang.String translateNamespacePrefixToUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeAttribute:java.lang.String getNamespacePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeElement:java.lang.String resolveNamespacePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeElement:java.lang.String getNamespacePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMSAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Element createElement(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(java.lang.String)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.QName createQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanElement:void <init>(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanMetaData:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanMetaData:org.dom4j.bean.BeanMetaData get(java.lang.Class)"
        ]
    },
    "org.dom4j.datatype.NamedTypeResolver:org.dom4j.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:org.dom4j.QName getQNameOfSchemaElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Attr createAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.BaseElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NonLazyElement:void <init>(java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void <init>(java.lang.String)",
            "org.dom4j.util.IndexedElement:void <init>(java.lang.String)",
            "org.dom4j.util.UserDataElement:void <init>(java.lang.String)"
        ]
    },
    "org.dom4j.tree.FlyweightAttribute:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultAttribute:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.QName createQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.XMLErrorHandler:void <init>()",
            "org.dom4j.util.XMLErrorHandler:void <init>(org.dom4j.Element)",
            "org.dom4j.util.XMLErrorHandler:void <clinit>()"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onDatatypeAttribute(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype getTypeByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.NonLazyElement:void <init>(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:void <init>(java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultAttribute:void <init>(java.lang.String,java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultAttribute:void <init>(org.dom4j.Element,java.lang.String,java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.QName pushQName(java.lang.String,java.lang.String,org.dom4j.Namespace,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getQName(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)",
            "org.dom4j.io.DOMSAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItem(java.lang.String)",
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMElement:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Attribute createAttribute(org.dom4j.Element,javax.xml.stream.events.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Attribute readAttribute(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.XPP3Reader:org.dom4j.Document read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element readElement(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Element readElement(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractElement:void setAttributeValue(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.SchemaParser:void build(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)"
        ]
    },
    "org.dom4j.datatype.SchemaParser:void build(org.dom4j.Document,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String)",
            "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintXHTML(java.lang.String)"
        ]
    },
    "org.dom4j.io.DocumentInputSource:java.io.Reader getCharacterStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XMLResult:void <init>(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractNode:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBSupport:javax.xml.bind.Element unmarshal(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier$JAXBElementModifier:org.dom4j.Element modifyElement(org.dom4j.Element)",
            "org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler:void onEnd(org.dom4j.ElementPath)"
        ]
    },
    "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void setOutput(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void write(javax.xml.bind.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void writeClose(javax.xml.bind.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void writeOpen(javax.xml.bind.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void writeElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void writeCloseElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBWriter:void writeOpenElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:void setOutput(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void writeElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifyContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.jaxb.JAXBWriter:void write(javax.xml.bind.Element)",
            "org.dom4j.jaxb.JAXBWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String asXML()",
            "org.dom4j.tree.AbstractElement:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)",
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)"
        ]
    },
    "org.dom4j.bean.BeanElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.XMLErrorHandler:void <init>()"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(java.lang.String)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(java.lang.String)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void setAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void setAttributeValue(java.lang.String,java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void addException(org.dom4j.Element,org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanMetaData:org.dom4j.bean.BeanMetaData get(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanAttributeList:void <init>(org.dom4j.bean.BeanElement)"
        ]
    },
    "org.dom4j.datatype.NamedTypeResolver:org.dom4j.QName getQNameOfSchemaElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()"
        ]
    },
    "org.dom4j.util.NonLazyElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.IndexedElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.UserDataElement:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultAttribute:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void <init>(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXReader:org.dom4j.Document read(org.xml.sax.InputSource)",
            "org.dom4j.io.SAXValidator:void validate(org.dom4j.Document)"
        ]
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Attribute readAttribute(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.InputStream,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.Reader,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:org.dom4j.Document read(org.w3c.dom.Document)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void setAttributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:java.lang.Object clone()"
        ]
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String)"
        ]
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintXHTML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier$JAXBElementModifier:org.dom4j.Element modifyElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)"
        ]
    },
    "org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler:void onEnd(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DocumentInputSource:java.io.Reader getCharacterStream()",
            "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String,boolean,boolean,boolean,boolean)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)",
            "org.dom4j.tree.AbstractDocument:java.lang.String asXML()",
            "org.dom4j.tree.AbstractDocument:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:void setAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void addDeclaredNamespaces(org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void writeNamespace(org.w3c.dom.Element,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void setAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void addException(org.dom4j.Element,org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.XMLErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.dom4j.util.XMLErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.dom4j.util.XMLErrorHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.bean.BeanAttributeList:void <init>(org.dom4j.bean.BeanElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:java.util.List createAttributeList()",
            "org.dom4j.bean.BeanElement:java.util.List createAttributeList(int)"
        ]
    },
    "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveNamedTypes()"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)",
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String)",
            "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(org.xml.sax.InputSource)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.net.URL)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.lang.String)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)",
            "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader,java.lang.String)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(org.xml.sax.InputSource)"
        ]
    },
    "org.dom4j.io.SAXValidator:void validate(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.InputStream)"
        ]
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.Reader)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.util.UserDataElement:java.lang.Object clone()"
        ]
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.dom4j.datatype.DatatypeDocumentFactory:void loadSchema(org.dom4j.Document,java.lang.String,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeDocumentFactory:org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningDispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.PruningElementStack:org.dom4j.Element popElement()"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXWriter:void endElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void addDeclaredNamespaces(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.io.DOMWriter:void writeNamespace(org.w3c.dom.Element,org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.util.XMLErrorHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.XMLErrorHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanElement:java.util.List createAttributeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultElement:java.util.List attributeList()"
        ]
    },
    "org.dom4j.bean.BeanElement:java.util.List createAttributeList(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.util.List createAttributeList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList(int)"
        ]
    },
    "org.dom4j.datatype.NamedTypeResolver:void resolveNamedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.HTMLWriter:java.lang.String prettyPrintHTML(java.lang.String,boolean,boolean,boolean,boolean)"
        ]
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(org.xml.sax.InputSource)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.File)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.File)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.net.URL)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.net.URL)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.lang.String)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.InputStream)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.File,java.nio.charset.Charset)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.Reader)",
            "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.Reader,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node cloneNode(boolean)",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node cloneNode(boolean)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(org.dom4j.QName)",
            "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
            "org.dom4j.tree.DefaultElement:java.lang.Object clone()"
        ]
    },
    "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:void setContent(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.UserDataElement:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)"
        ]
    },
    "org.dom4j.io.PruningDispatchHandler:void onEnd(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.PruningElementStack:org.dom4j.Element popElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List attributeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttributeList getBeanAttributeList()",
            "org.dom4j.datatype.DatatypeElement:java.lang.String toString()",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String toString()",
            "org.dom4j.tree.AbstractElement:java.util.List attributes()",
            "org.dom4j.tree.AbstractElement:java.util.Iterator attributeIterator()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(int)",
            "org.dom4j.tree.AbstractElement:int attributeCount()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void ensureAttributesCapacity(int)",
            "org.dom4j.tree.DefaultElement:java.util.List attributes()",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List createAttributeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BaseElement:java.util.List attributeList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList()",
            "org.dom4j.util.NonLazyElement:void <init>(java.lang.String)",
            "org.dom4j.util.NonLazyElement:void <init>(org.dom4j.QName)",
            "org.dom4j.util.NonLazyElement:void <init>(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List attributeList(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)"
        ]
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File)"
        ]
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.net.URL)"
        ]
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.lang.String)"
        ]
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File,java.nio.charset.Charset)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBReader:org.dom4j.Document read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultDocument:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttributeList getBeanAttributeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttribute attribute(java.lang.String)",
            "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttribute attribute(org.dom4j.QName)"
        ]
    },
    "org.dom4j.datatype.DatatypeElement:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Element,org.dom4j.Node,java.lang.String)",
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Branch,org.dom4j.Node,java.lang.String)",
            "org.dom4j.bean.BeanAttribute:java.lang.String getValue()",
            "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMElement:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMElement:void removeAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:boolean hasAttributeNS(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Element,org.dom4j.Node,java.lang.String)",
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Branch,org.dom4j.Node,java.lang.String)",
            "org.dom4j.bean.BeanAttribute:java.lang.String getValue()",
            "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)",
            "org.dom4j.util.UserDataElement:java.lang.String toString()"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List attributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator attributeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeNamespaceUri(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeLocalName(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributePrefix(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeRawName(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValue(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:boolean isAttributeNamespaceDeclaration(int)"
        ]
    },
    "org.dom4j.tree.AbstractElement:int attributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean hasAttributes(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.xpp.ProxyXmlStartTag:int getAttributeCount()"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void ensureAttributesCapacity(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.xpp.ProxyXmlStartTag:void ensureAttributesCapacity(int)"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List attributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.BaseElement:java.util.List attributeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.lang.String toString()",
            "org.dom4j.tree.AbstractElement:java.util.List attributes()",
            "org.dom4j.tree.AbstractElement:java.util.Iterator attributeIterator()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(int)",
            "org.dom4j.tree.AbstractElement:int attributeCount()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void ensureAttributesCapacity(int)"
        ]
    },
    "org.dom4j.util.NonLazyElement:void <init>(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NonLazyDocumentFactory:org.dom4j.Element createElement(org.dom4j.QName)"
        ]
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.bean.BeanElement:org.dom4j.Attribute attribute(java.lang.String)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.bean.BeanAttribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.bean.BeanElement:org.dom4j.Attribute attribute(org.dom4j.QName)"
        ]
    },
    "org.dom4j.IllegalAddException:void <init>(org.dom4j.Element,org.dom4j.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void addNode(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void addNode(int,org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.IllegalAddException:void <init>(org.dom4j.Branch,org.dom4j.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void checkAddElementAllowed(org.dom4j.Element)",
            "org.dom4j.tree.DefaultDocument:void addNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:void addNode(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.bean.BeanAttribute:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:javax.xml.stream.events.Attribute next()",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.Attribute createAttribute(org.dom4j.Attribute)",
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeAttribute(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractAttribute:java.lang.String getText()",
            "org.dom4j.tree.AbstractAttribute:java.lang.Object getData()",
            "org.dom4j.tree.AbstractAttribute:java.lang.String toString()",
            "org.dom4j.tree.AbstractAttribute:java.lang.String asXML()",
            "org.dom4j.tree.AbstractAttribute:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractAttribute:org.dom4j.Node createXPathResult(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Attribute,org.dom4j.Attribute)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValue(int)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)"
        ]
    },
    "org.dom4j.dom.DOMElement:java.lang.String getAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:void removeAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMElement:boolean hasAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.UserDataElement:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Element,org.dom4j.Node,java.lang.String)",
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Branch,org.dom4j.Node,java.lang.String)",
            "org.dom4j.bean.BeanAttribute:java.lang.String getValue()",
            "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager$1:void run(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Node,org.dom4j.Node)"
        ]
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeNamespaceUri(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeRawName(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValue(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpp.ProxyXmlStartTag:boolean isAttributeNamespaceDeclaration(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNodeHelper:boolean hasAttributes(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:boolean hasAttributes()",
            "org.dom4j.dom.DOMCDATA:boolean hasAttributes()",
            "org.dom4j.dom.DOMComment:boolean hasAttributes()",
            "org.dom4j.dom.DOMDocument:boolean hasAttributes()",
            "org.dom4j.dom.DOMDocumentType:boolean hasAttributes()",
            "org.dom4j.dom.DOMElement:boolean hasAttributes()",
            "org.dom4j.dom.DOMEntityReference:boolean hasAttributes()",
            "org.dom4j.dom.DOMNamespace:boolean hasAttributes()",
            "org.dom4j.dom.DOMProcessingInstruction:boolean hasAttributes()",
            "org.dom4j.dom.DOMText:boolean hasAttributes()"
        ]
    },
    "org.dom4j.xpp.ProxyXmlStartTag:int getAttributeCount()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:org.dom4j.QName getQNameOfSchemaElement(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeAttribute(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory,org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:java.lang.String getAttribute(java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:java.lang.String elementID(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element readElement(javax.xml.stream.XMLEventReader)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node removeChild(org.dom4j.Node,org.w3c.dom.Node)",
            "org.dom4j.tree.AbstractNode:org.dom4j.Node detach()"
        ]
    },
    "org.dom4j.xpp.ProxyXmlStartTag:void ensureAttributesCapacity(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.NonLazyDocumentFactory:org.dom4j.Element createElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.DocumentFactory:org.dom4j.Element createElement(java.lang.String,java.lang.String)",
            "org.dom4j.DocumentHelper:org.dom4j.Element createElement(org.dom4j.QName)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createElement(org.dom4j.QName)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Element createElement(org.dom4j.QName)",
            "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(org.dom4j.QName)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:void setAttributeValue(java.lang.String,java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void addException(org.dom4j.Element,org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void addAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractElement:void setAttributeValue(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void appendAttributes(org.dom4j.Element)",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.dom4j.bean.BeanElement:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void addNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.CDATA)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Entity)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Text)",
            "org.dom4j.tree.BackedList:boolean add(org.dom4j.Node)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.util.IndexedElement:void addNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void addNode(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:void add(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void checkAddElementAllowed(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void add(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultDocument:void addNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.BackedList:boolean add(org.dom4j.Node)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.DefaultDocument:void addNode(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:void add(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$AttributeIterator:javax.xml.stream.events.Attribute next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter$AttributeIterator:java.lang.Object next()"
        ]
    },
    "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.Attribute createAttribute(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeAttribute(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeAttribute(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Attribute)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.dom.DOMNodeHelper:java.lang.String getNodeValue(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNodeText(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.swing.LeafTreeNode:java.lang.String toString()",
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsText(java.lang.Object)",
            "org.dom4j.tree.AbstractNode:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:java.lang.Object getData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Element,org.dom4j.Node,java.lang.String)",
            "org.dom4j.IllegalAddException:void <init>(org.dom4j.Branch,org.dom4j.Node,java.lang.String)",
            "org.dom4j.bean.BeanAttribute:java.lang.String getValue()",
            "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:java.lang.String asXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:void write(java.io.Writer)"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractAttribute:org.dom4j.Node createXPathResult(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:org.dom4j.Node asXPathResult(org.dom4j.Element)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compare(org.dom4j.Attribute,org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Node,org.dom4j.Node)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventWriter:void writeElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.rule.RuleManager$1:void run(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void fireRule(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compare(org.dom4j.Node,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)",
            "org.dom4j.util.NodeComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMElement:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Document)",
            "org.dom4j.swing.XMLTableModel:void <init>(org.dom4j.Element,java.lang.Object)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.lang.String elementID(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node appendChild(org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node removeChild(org.dom4j.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node removeChild(org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.tree.AbstractNode:org.dom4j.Node detach()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)",
            "org.dom4j.io.PruningDispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.jaxb.JAXBReader$PruningElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler:void onEnd(org.dom4j.ElementPath)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Element createElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.dom4j.util.XMLErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.dom4j.util.XMLErrorHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocumentFactory:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element createElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(org.dom4j.QName)"
        ]
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Element createElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element createCopy(org.dom4j.QName)"
        ]
    },
    "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:void removeAttribute(java.lang.String)",
            "org.dom4j.dom.DOMElement:void removeAttributeNS(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Document addComment(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void setRootElement(org.dom4j.Element)",
            "org.dom4j.tree.AbstractDocument:void add(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:void add(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Text splitText(int)",
            "org.dom4j.io.DOMSAXContentHandler:void endCDATA()",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void comment(char[],int,int)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.io.XPPReader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void addDeclaredNamespaces(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void add(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMText:org.w3c.dom.Text splitText(int)",
            "org.dom4j.io.DOMSAXContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.DOMSAXContentHandler:void completeCurrentTextNode()",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.BackedList:boolean add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean add(java.lang.Object)"
        ]
    },
    "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.dom4j.util.IndexedElement:void addNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.CDATA)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Entity)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Text)",
            "org.dom4j.tree.BackedList:boolean add(org.dom4j.Node)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.BackedList:void add(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void add(int,java.lang.Object)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void add(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.io.XPPReader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Element addElement(org.dom4j.QName)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$AttributeIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:javax.xml.stream.events.Attribute next()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:javax.xml.stream.events.Namespace next()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.STAXEventWriter:void writeAttribute(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNodeHelper:java.lang.String getNodeValue(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:java.lang.String getNodeValue()",
            "org.dom4j.dom.DOMCDATA:java.lang.String getNodeValue()",
            "org.dom4j.dom.DOMComment:java.lang.String getNodeValue()",
            "org.dom4j.dom.DOMNamespace:java.lang.String getNodeValue()",
            "org.dom4j.dom.DOMProcessingInstruction:java.lang.String getNodeValue()",
            "org.dom4j.dom.DOMText:java.lang.String getNodeValue()"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeNodeText(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.BranchTreeNode:java.util.List getChildList()"
        ]
    },
    "org.dom4j.swing.LeafTreeNode:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.bean.BeanAttribute:java.lang.String getValue()",
            "org.dom4j.tree.AbstractAttribute:void setData(java.lang.Object)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Attribute)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsText(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.lang.String getText()",
            "org.dom4j.tree.DefaultElement:java.lang.String getText()"
        ]
    },
    "org.dom4j.tree.AbstractNode:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsStringValue(java.lang.Object)"
        ]
    },
    "org.dom4j.io.STAXEventWriter:void writeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)"
        ]
    },
    "org.dom4j.rule.Mode:void fireRule(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Document)",
            "org.dom4j.rule.Stylesheet:void run(org.dom4j.Node,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document,java.lang.String)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Document,org.dom4j.Document)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableModel:void <init>(org.dom4j.Document,java.lang.Object)"
        ]
    },
    "org.dom4j.swing.XMLTableModel:void <init>(org.dom4j.Element,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMSAXContentHandler:void comment(char[],int,int)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.jaxb.JAXBReader$PruningElementHandler:void onEnd(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMElement:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:void add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Document addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void comment(char[],int,int)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void setRootElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.Document createDocument(org.dom4j.Element)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.AbstractDocument:boolean remove(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()"
        ]
    },
    "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Text splitText(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMSAXContentHandler:void endCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void endCDATA()"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)",
            "org.dom4j.io.XMLWriter:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document parseDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.Reader)",
            "org.dom4j.io.XPPReader:org.dom4j.Document read(char[])"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void addDeclaredNamespaces(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Text splitText(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMSAXContentHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(java.lang.String)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void completeCurrentTextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMSAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.DOMSAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMSAXContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.DOMSAXContentHandler:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleSet:void addAll(org.dom4j.rule.RuleSet)",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()"
        ]
    },
    "org.dom4j.tree.BackedList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.DispatchHandler:void onStart(org.dom4j.ElementPath)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void addDTDDeclaration(org.dom4j.dtd.Decl)",
            "org.dom4j.io.SAXContentHandler:void addExternalDTDDeclaration(org.dom4j.dtd.Decl)",
            "org.dom4j.io.SAXEventRecorder$SAXEvent:void addParm(java.lang.Object)",
            "org.dom4j.io.SAXEventRecorder:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endPrefixMapping(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startDocument()",
            "org.dom4j.io.SAXEventRecorder:void endDocument()",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void characters(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endDTD()",
            "org.dom4j.io.SAXEventRecorder:void startEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startCDATA()",
            "org.dom4j.io.SAXEventRecorder:void endCDATA()",
            "org.dom4j.io.SAXEventRecorder:void comment(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void elementDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.rule.RuleSet:void addRule(org.dom4j.rule.Rule)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.swing.XMLTableDefinition:void addColumn(org.dom4j.swing.XMLTableColumnDefinition)",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void addNewNode(org.dom4j.Node)",
            "org.dom4j.tree.ContentListFacade:boolean add(org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultDocument:java.util.List contentList()",
            "org.dom4j.tree.DefaultDocument:void addNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:void addNewNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:java.util.List contentList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList(int)",
            "org.dom4j.tree.NamespaceStack:void push(org.dom4j.Namespace)",
            "org.dom4j.util.IndexedElement:void addToElementIndex(java.lang.Object,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.BackedList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.ContentListFacade:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.tree.NamespaceStack:java.util.Map getNamespaceCache()"
        ]
    },
    "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.BackedList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.tree.AbstractElement:void addNewNode(int,org.dom4j.Node)",
            "org.dom4j.tree.ContentListFacade:void add(int,org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:void addNode(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.File)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(org.xml.sax.InputSource)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.net.URL)",
            "org.dom4j.io.SAXModifier:org.dom4j.Document modify(java.lang.String)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$NamespaceIterator:javax.xml.stream.events.Namespace next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:java.lang.Object next()"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.File,java.nio.charset.Charset)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(org.xml.sax.InputSource)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.InputStream,java.lang.String)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.io.Reader,java.lang.String)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.lang.String)",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.Document modify(java.net.URL)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void run(java.util.List)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:java.lang.Object getVariableValue(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:void contentRemoved()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultDocument:void clearContent()",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void clearContent()"
        ]
    },
    "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:java.lang.String getNodeValue(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNodeText(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.swing.LeafTreeNode:java.lang.String toString()",
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsText(java.lang.Object)",
            "org.dom4j.tree.AbstractNode:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.DTD createDTD(org.dom4j.DocumentType)",
            "org.dom4j.io.XMLWriter:void writeDocType(org.dom4j.DocumentType)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(org.dom4j.QName)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List elements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator()"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.tree.AbstractElement:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(org.dom4j.QName)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:boolean hasMixedContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:boolean isTextOnly()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeElement:void setText(java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void setNodeValue(org.dom4j.Node,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsStringValue(java.lang.Object)",
            "org.dom4j.tree.AbstractDocument:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element)",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultProcessingInstruction:void setValues(java.util.Map)",
            "org.dom4j.tree.FlyweightProcessingInstruction:void <init>(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.tree.BackedList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void resetHandlers()",
            "org.dom4j.swing.XMLTableDefinition:void clear()",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.BaseElement:void clearContent()",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.NamespaceStack:void clear()"
        ]
    },
    "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.ContentListFacade:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:void clear()",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.BaseElement:void clearContent()",
            "org.dom4j.tree.ContentListFacade:void clear()"
        ]
    },
    "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsStringValue(java.lang.Object)",
            "org.dom4j.tree.AbstractDocument:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element)",
            "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:void removeAttribute(java.lang.String)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.dom4j.dom.DOMElement:boolean hasAttribute(java.lang.String)",
            "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(org.w3c.dom.Attr)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.FilterIterator:java.lang.Object findNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.FilterIterator:boolean hasNext()",
            "org.dom4j.tree.FilterIterator:java.lang.Object next()"
        ]
    },
    "org.dom4j.tree.QNameCache:java.util.List getQNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:java.util.List getQNames()"
        ]
    },
    "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:java.util.List elements(java.lang.String)",
            "org.dom4j.util.IndexedElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.util.IndexedElement:java.util.Iterator asElementIterator(java.lang.Object)"
        ]
    },
    "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.util.IndexedElement:org.dom4j.Attribute attribute(org.dom4j.QName)"
        ]
    },
    "org.dom4j.util.IndexedElement:java.util.Map elementIndex()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.util.IndexedElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.util.IndexedElement:java.util.List elements(java.lang.String)",
            "org.dom4j.util.IndexedElement:java.util.List elements(org.dom4j.QName)"
        ]
    },
    "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:void sort(java.util.List,java.lang.String,boolean)",
            "org.dom4j.xpath.DefaultXPath:java.util.List selectNodes(java.lang.Object,org.dom4j.XPath,boolean)",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List)"
        ]
    },
    "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMCDATA:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMComment:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMNamespace:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMProcessingInstruction:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMText:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.swing.BranchTreeNode:java.util.List getChildList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.BranchTreeNode:javax.swing.tree.TreeNode getChildAt(int)",
            "org.dom4j.swing.BranchTreeNode:int getChildCount()",
            "org.dom4j.swing.BranchTreeNode:int getIndex(javax.swing.tree.TreeNode)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:java.lang.String getNodeValue(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNodeText(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.swing.LeafTreeNode:java.lang.String toString()",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsText(java.lang.Object)",
            "org.dom4j.tree.AbstractBranch:java.lang.String getTextTrim()",
            "org.dom4j.tree.AbstractElement:java.lang.Object getData()",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)",
            "org.dom4j.tree.AbstractNode:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:java.lang.String getText()"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:java.lang.String getNodeValue(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNodeText(org.dom4j.Node)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.swing.LeafTreeNode:java.lang.String toString()",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsText(java.lang.Object)",
            "org.dom4j.tree.AbstractBranch:java.lang.String getTextTrim()",
            "org.dom4j.tree.AbstractElement:java.lang.Object getData()",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)",
            "org.dom4j.tree.AbstractNode:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsStringValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()"
        ]
    },
    "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.io.STAXEventWriter:void writeDocument(org.dom4j.Document)"
        ]
    },
    "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager$1:void run(org.dom4j.Node)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void run(org.dom4j.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void run(org.dom4j.Node)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Node,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Node,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)"
        ]
    },
    "org.dom4j.util.NodeComparator:int compare(org.dom4j.Document,org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Node,org.dom4j.Node)"
        ]
    },
    "org.dom4j.swing.XMLTableModel:void <init>(org.dom4j.Document,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Element getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void comment(char[],int,int)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)",
            "org.dom4j.io.XMLWriter:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.Document createDocument(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Document createDocument(org.dom4j.Element)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Document createDocument(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:boolean remove(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.XMLWriter:void endCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endCDATA()",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void endCDATA()"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.XMLWriter:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void comment(char[],int,int)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)",
            "org.dom4j.io.XMLWriter:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.InputStream)",
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.Reader,java.lang.String)"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.rule.RuleSet:void addAll(org.dom4j.rule.RuleSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:org.dom4j.rule.RuleSet getRuleSet(int)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.DispatchHandler:void onStart(org.dom4j.ElementPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onStart(org.dom4j.ElementPath)",
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void addDTDDeclaration(org.dom4j.dtd.Decl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void elementDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void addExternalDTDDeclaration(org.dom4j.dtd.Decl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void elementDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder$SAXEvent:void addParm(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endPrefixMapping(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void characters(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void comment(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void elementDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startDocument()"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endDocument()"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.XMLWriter:void startDTD(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endDTD()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.XMLWriter:void endDTD()"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void startEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void endEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void startCDATA()"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void endCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void endCDATA()"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)",
            "org.dom4j.io.XMLWriter:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXEventRecorder:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.rule.RuleSet:void addRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void addRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.Mode:java.util.Map addToNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void addColumn(org.dom4j.swing.XMLTableColumnDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:void addColumn(java.lang.String,java.lang.String,int)",
            "org.dom4j.swing.XMLTableDefinition:void addColumnWithXPathName(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void addNewNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addCDATA(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addComment(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addEntity(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:void addNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:boolean add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean add(java.lang.Object)"
        ]
    },
    "org.dom4j.tree.DefaultDocument:java.util.List contentList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.util.List content()",
            "org.dom4j.tree.AbstractBranch:java.lang.String getText()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Node node(int)",
            "org.dom4j.tree.AbstractBranch:int nodeCount()",
            "org.dom4j.tree.AbstractBranch:int indexOf(org.dom4j.Node)",
            "org.dom4j.tree.AbstractBranch:java.util.Iterator nodeIterator()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.tree.BackedList createResultList()",
            "org.dom4j.tree.AbstractBranch:java.util.List createSingleResultList(org.dom4j.Node)",
            "org.dom4j.tree.AbstractBranch:java.util.List createEmptyList()",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void addNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:void addNode(int,org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:boolean removeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.DefaultElement:void addNewNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addCDATA(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addComment(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addEntity(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:void addNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.DefaultElement:java.util.List contentList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.util.List content()",
            "org.dom4j.tree.AbstractBranch:java.lang.String getText()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Node node(int)",
            "org.dom4j.tree.AbstractBranch:int nodeCount()",
            "org.dom4j.tree.AbstractBranch:int indexOf(org.dom4j.Node)",
            "org.dom4j.tree.AbstractBranch:java.util.Iterator nodeIterator()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.tree.BackedList createResultList()",
            "org.dom4j.tree.AbstractBranch:java.util.List createSingleResultList(org.dom4j.Node)",
            "org.dom4j.tree.AbstractBranch:java.util.List createEmptyList()",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Node node(int)",
            "org.dom4j.tree.AbstractElement:int indexOf(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:int nodeCount()",
            "org.dom4j.tree.AbstractElement:java.util.Iterator nodeIterator()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:void normalize()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractElement:void addNewNode(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void addNewNode(int,org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:boolean removeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:void push(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void clearNamespaceStack()",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.DOMWriter:void resetNamespaceStack()",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.XMLWriter:void <init>(java.io.Writer,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void <init>()",
            "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream)",
            "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream,org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void <init>(org.dom4j.io.OutputFormat)",
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeAttributes(org.dom4j.Element)",
            "org.dom4j.tree.NamespaceStack:void push(java.lang.String,java.lang.String)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.util.IndexedElement:void addToElementIndex(java.lang.Object,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:void addToElementIndex(org.dom4j.Element)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:org.dom4j.Node set(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:java.util.Map getNamespaceCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceStack:org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void addNewNode(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:void addNode(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:void add(int,org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void add(int,java.lang.Object)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$NamespaceIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:javax.xml.stream.events.Attribute next()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:javax.xml.stream.events.Namespace next()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.XMLWriter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXWriter:void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void run(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.XMLTableDefinition:java.lang.Object getVariableValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultDocument:void clearContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void setRootElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultElement:void clearContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.DTD createDTD(org.dom4j.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeDocumentType(org.dom4j.DocumentType)"
        ]
    },
    "org.dom4j.io.XMLWriter:void writeDocType(org.dom4j.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)",
            "org.dom4j.io.XMLWriter:void write(org.dom4j.DocumentType)",
            "org.dom4j.io.XMLWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.Namespace:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractAttribute:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractCharacterData:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractComment:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractEntity:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String getUniquePath(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.datatype.DatatypeElement:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeElement:void setData(java.lang.Object)",
            "org.dom4j.dom.DOMNodeHelper:void setNodeValue(org.dom4j.Node,java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:void setNodeValue(org.dom4j.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:void setNodeValue(java.lang.String)",
            "org.dom4j.dom.DOMCDATA:void setNodeValue(java.lang.String)",
            "org.dom4j.dom.DOMComment:void setNodeValue(java.lang.String)",
            "org.dom4j.dom.DOMNamespace:void setNodeValue(java.lang.String)",
            "org.dom4j.dom.DOMProcessingInstruction:void setNodeValue(java.lang.String)",
            "org.dom4j.dom.DOMText:void setNodeValue(java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractDocument:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:java.lang.String getContentAsStringValue(java.lang.Object)"
        ]
    },
    "org.dom4j.io.STAXEventWriter:javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultProcessingInstruction:void setValues(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.FlyweightProcessingInstruction:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultProcessingInstruction:void <init>(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.io.DispatchHandler:void resetHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXReader:void resetHandlers()"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.BaseElement:void clearContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.NamespaceStack:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void clearNamespaceStack()",
            "org.dom4j.io.DOMSAXContentHandler:void startDocument()",
            "org.dom4j.io.DOMSAXContentHandler:void endDocument()",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document)",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)",
            "org.dom4j.io.DOMWriter:void resetNamespaceStack()",
            "org.dom4j.io.SAXContentHandler:void startDocument()",
            "org.dom4j.io.SAXContentHandler:void endDocument()"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Attr getAttributeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node removeNamedItem(java.lang.String)"
        ]
    },
    "org.dom4j.dom.DOMElement:boolean hasAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.FilterIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:boolean hasNext()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:boolean hasNext()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object next()",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.FilterIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:javax.xml.stream.events.Attribute next()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:javax.xml.stream.events.Namespace next()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentFactory:java.util.List getQNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.IndexedElement:java.util.List elements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(java.lang.String)"
        ]
    },
    "org.dom4j.util.IndexedElement:java.util.List elements(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.tree.AbstractElement:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator(org.dom4j.QName)"
        ]
    },
    "org.dom4j.util.IndexedElement:java.util.Iterator asElementIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.IndexedElement:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaComplexType(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:void onNamedSchemaSimpleType(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:boolean isElementSpacePreserved(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.dom4j.util.IndexedElement:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.util.AttributeHelper:boolean booleanValue(org.dom4j.Element,org.dom4j.QName)",
            "org.dom4j.util.NodeComparator:int compare(org.dom4j.Element,org.dom4j.Element)"
        ]
    },
    "org.dom4j.util.IndexedElement:org.dom4j.Element element(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(java.lang.String)"
        ]
    },
    "org.dom4j.util.IndexedElement:org.dom4j.Element element(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementText(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String,org.dom4j.Namespace)"
        ]
    },
    "org.dom4j.DocumentHelper:void sort(java.util.List,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpath.DefaultXPath:java.util.List selectNodes(java.lang.Object,org.dom4j.XPath,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.dom4j.xpath.DefaultXPath:void sort(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:void sort(java.util.List,java.lang.String)",
            "org.dom4j.xpath.DefaultXPath:java.util.List selectNodes(java.lang.Object,org.dom4j.XPath)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:boolean isNodeEquals(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:boolean isEqualNode(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMCDATA:boolean isEqualNode(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMComment:boolean isEqualNode(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMDocumentType:boolean isEqualNode(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMElement:boolean isEqualNode(org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNamespace:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.dom4j.swing.BranchTreeNode:javax.swing.tree.TreeNode getChildAt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.BranchTreeNode$1:javax.swing.tree.TreeNode nextElement()"
        ]
    },
    "org.dom4j.swing.BranchTreeNode:int getChildCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.BranchTreeNode$1:boolean hasMoreElements()"
        ]
    },
    "org.dom4j.swing.BranchTreeNode:int getIndex(javax.swing.tree.TreeNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:java.lang.String getTextTrim()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeElement:java.lang.Object getData()",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String elementTextTrim(org.dom4j.QName)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.lang.Object getData()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.STAXEventWriter:void writeDocument(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void run(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Node)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Comment)",
            "org.dom4j.io.XMLWriter:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.DocumentHelper:org.dom4j.Document createDocument(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.Document createDocument(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node removeChild(org.dom4j.Node,org.w3c.dom.Node)",
            "org.dom4j.tree.AbstractNode:org.dom4j.Node detach()"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void endCDATA()"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.File)",
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.net.URL)",
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Node)",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.rule.Mode:org.dom4j.rule.RuleSet getRuleSet(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void addRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.Mode:void removeRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXContentHandler:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)"
        ]
    },
    "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.io.SAXWriter:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Document)"
        ]
    },
    "org.dom4j.io.SAXWriter:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Document)"
        ]
    },
    "org.dom4j.io.XMLWriter:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.XMLWriter:void startDTD(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.XMLWriter:void endDTD()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endDTD()",
            "org.dom4j.io.XMLWriter:void endDTD()"
        ]
    },
    "org.dom4j.io.XMLWriter:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startEntity(java.lang.String)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void startEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.XMLWriter:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endEntity(java.lang.String)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void endEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.XMLWriter:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startCDATA()",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void startCDATA()"
        ]
    },
    "org.dom4j.rule.Mode:void addRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:void addRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.RuleManager:void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)"
        ]
    },
    "org.dom4j.rule.Mode:java.util.Map addToNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void addRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void addColumn(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:void addColumn(java.lang.String,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:void addStringColumn(java.lang.String,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:void addNumberColumn(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void addColumnWithXPathName(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addCDATA(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void endCDATA()",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void comment(char[],int,int)",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void characters(char[],int,int)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Element addText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeElement:org.dom4j.Element addText(java.lang.String)",
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.SAXContentHandler:void completeCurrentTextNode()",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.io.XPPReader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void addException(org.dom4j.Element,org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void addDTDDeclaration(org.dom4j.dtd.Decl)",
            "org.dom4j.io.SAXContentHandler:void addExternalDTDDeclaration(org.dom4j.dtd.Decl)",
            "org.dom4j.io.SAXEventRecorder$SAXEvent:void addParm(java.lang.Object)",
            "org.dom4j.io.SAXEventRecorder:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endPrefixMapping(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startDocument()",
            "org.dom4j.io.SAXEventRecorder:void endDocument()",
            "org.dom4j.io.SAXEventRecorder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void characters(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endDTD()",
            "org.dom4j.io.SAXEventRecorder:void startEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void endEntity(java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void startCDATA()",
            "org.dom4j.io.SAXEventRecorder:void endCDATA()",
            "org.dom4j.io.SAXEventRecorder:void comment(char[],int,int)",
            "org.dom4j.io.SAXEventRecorder:void elementDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXEventRecorder:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:void addColumn(org.dom4j.swing.XMLTableColumnDefinition)",
            "org.dom4j.tree.AbstractElement:void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)",
            "org.dom4j.tree.AbstractElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:void addNewNode(org.dom4j.Node)",
            "org.dom4j.tree.ContentListFacade:boolean add(org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultDocument:java.util.List contentList()",
            "org.dom4j.tree.DefaultDocument:void addNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:void add(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:void addNewNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:java.util.List contentList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList()",
            "org.dom4j.tree.DefaultElement:java.util.List attributeList(int)",
            "org.dom4j.util.IndexedElement:void addToElementIndex(java.lang.Object,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.util.List content()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getChildNodes()",
            "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getChildNodes()",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document)",
            "org.dom4j.io.DOMWriter:org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.Node node(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getFirstChild()",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getLastChild()",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)",
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Document)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document,java.lang.String)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:int nodeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getLastChild()",
            "org.dom4j.dom.DOMDocument:boolean hasChildNodes()",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)",
            "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Document)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document,java.lang.String)",
            "org.dom4j.swing.BranchTreeNode:boolean isLeaf()",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.tree.AbstractBranch:boolean hasContent()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:int indexOf(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:java.util.Iterator nodeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:org.dom4j.tree.BackedList createResultList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.util.List createSingleResultList(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:java.util.List createEmptyList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)"
        ]
    },
    "org.dom4j.tree.DefaultDocument:boolean removeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:boolean remove(java.lang.Object)",
            "org.dom4j.tree.BackedList:org.dom4j.Node remove(int)"
        ]
    },
    "org.dom4j.tree.AbstractElement:org.dom4j.Node node(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getPreviousSibling(org.dom4j.Node)",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getNextSibling(org.dom4j.Node)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)",
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element,java.lang.String)",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Node getXPathResult(int)",
            "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractElement:int indexOf(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getPreviousSibling(org.dom4j.Node)",
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getNextSibling(org.dom4j.Node)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)"
        ]
    },
    "org.dom4j.tree.AbstractElement:int nodeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getNextSibling(org.dom4j.Node)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String)",
            "org.dom4j.dom.DOMNodeHelper:void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String)",
            "org.dom4j.io.HTMLWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.io.STAXEventWriter:void writeChildNodes(org.dom4j.Branch)",
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)",
            "org.dom4j.rule.Mode:void applyTemplates(org.dom4j.Element)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element,java.lang.String)",
            "org.dom4j.swing.BranchTreeNode:boolean isLeaf()",
            "org.dom4j.swing.BranchTreeNode:java.util.List createChildList()",
            "org.dom4j.tree.AbstractBranch:boolean hasContent()",
            "org.dom4j.tree.AbstractBranch:org.dom4j.Element elementByID(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void appendContent(org.dom4j.Branch)",
            "org.dom4j.tree.AbstractElement:void accept(org.dom4j.Visitor)",
            "org.dom4j.util.NodeComparator:int compareContent(org.dom4j.Branch,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.tree.AbstractElement:java.util.Iterator nodeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)"
        ]
    },
    "org.dom4j.tree.AbstractElement:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:void normalize()",
            "org.dom4j.tree.AbstractElement:void normalize()"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean removeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.CDATA)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Entity)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Text)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:boolean remove(java.lang.Object)",
            "org.dom4j.tree.BackedList:org.dom4j.Node remove(int)"
        ]
    },
    "org.dom4j.util.IndexedElement:void addToElementIndex(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:void addNode(org.dom4j.Node)",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()"
        ]
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.ContentListFacade:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.io.SAXModifyElementHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.ContentListFacade:org.dom4j.Node set(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.dom4j.tree.AbstractElement:void addNewNode(int,org.dom4j.Node)",
            "org.dom4j.tree.ContentListFacade:void add(int,org.dom4j.Node)",
            "org.dom4j.tree.DefaultDocument:void addNode(int,org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.STAXEventWriter:void writeDocumentType(org.dom4j.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.STAXEventWriter:void writeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.io.XMLWriter:void write(org.dom4j.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.Namespace:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.tree.AbstractAttribute:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.tree.AbstractCharacterData:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.tree.AbstractComment:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.tree.AbstractEntity:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.lang.String getUniquePath()"
        ]
    },
    "org.dom4j.datatype.DatatypeElement:void setData(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(java.lang.String)",
            "org.dom4j.util.UserDataElement:org.dom4j.Element createElement(org.dom4j.QName)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.DefaultProcessingInstruction:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.dom.DOMProcessingInstruction:void <init>(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.io.SAXReader:void resetHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXModifier:void resetModifiers()",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.jaxb.JAXBReader:void resetHandlers()"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startDocument()"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endDocument()"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void startDocument()",
            "org.dom4j.io.SAXWriter:void startDocument()"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endDocument()",
            "org.dom4j.io.SAXWriter:void endDocument()"
        ]
    },
    "org.dom4j.dom.DOMAttributeNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$AttributeIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:boolean hasNext()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:boolean hasNext()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.STAXEventWriter$NamespaceIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.NamedTypeResolver:void resolveElementTypes()",
            "org.dom4j.datatype.SchemaParser:void internalBuild(org.dom4j.Document)",
            "org.dom4j.datatype.SchemaParser:void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory)",
            "org.dom4j.datatype.SchemaParser:void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory)",
            "org.dom4j.datatype.SchemaParser:com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element)",
            "org.dom4j.dom.DOMElement:org.dom4j.Attribute attribute(java.lang.String,java.lang.String)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.HTMLWriter:void setOmitElementCloseSet(java.util.Set)",
            "org.dom4j.io.HTMLWriter:void setPreformattedTags(java.util.Set)",
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXEventRecorder:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXModifier:org.dom4j.io.SAXReader installModifyReader()",
            "org.dom4j.io.SAXWriter:void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack)",
            "org.dom4j.io.SAXWriter:org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes)",
            "org.dom4j.io.STAXEventReader:org.dom4j.Element createElement(javax.xml.stream.events.StartElement)",
            "org.dom4j.io.STAXEventWriter$AttributeIterator:boolean hasNext()",
            "org.dom4j.io.STAXEventWriter$NamespaceIterator:boolean hasNext()",
            "org.dom4j.io.XMLWriter:void write(java.lang.Object)",
            "org.dom4j.io.XMLWriter:void writeElementContent(org.dom4j.Element)",
            "org.dom4j.io.XMLWriter:void writeNamespaces()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()",
            "org.dom4j.rule.Stylesheet:void run(java.util.List,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.util.List,java.lang.String)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element)",
            "org.dom4j.swing.XMLTableDefinition:org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String)",
            "org.dom4j.tree.AbstractBranch:void setProcessingInstructions(java.util.List)",
            "org.dom4j.tree.AbstractBranch:void contentRemoved()",
            "org.dom4j.tree.AbstractDocument:void accept(org.dom4j.Visitor)",
            "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
            "org.dom4j.tree.AbstractDocumentType:void write(java.io.Writer)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List elements()",
            "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List elements(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions()",
            "org.dom4j.tree.AbstractElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.AbstractElement:boolean hasMixedContent()",
            "org.dom4j.tree.AbstractElement:boolean isTextOnly()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.lang.String getStringValue()",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List getNamespacesForURI(java.lang.String)",
            "org.dom4j.tree.AbstractElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.AbstractElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString(java.util.Map)",
            "org.dom4j.tree.BackedList:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.BackedList:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean addAll(java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:boolean addAll(int,java.util.Collection)",
            "org.dom4j.tree.ContentListFacade:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean removeAll(java.util.Collection)",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultDocument:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultDocument:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:java.lang.String getStringValue()",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List declaredNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces()",
            "org.dom4j.tree.DefaultElement:java.util.List additionalNamespaces(java.lang.String)",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions()",
            "org.dom4j.tree.DefaultElement:java.util.List processingInstructions(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:boolean removeProcessingInstruction(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Element element(org.dom4j.QName)",
            "org.dom4j.tree.DefaultElement:void setContent(java.util.List)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
            "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.dom4j.tree.FilterIterator:java.lang.Object findNext()",
            "org.dom4j.tree.QNameCache:java.util.List getQNames()",
            "org.dom4j.util.IndexedElement:java.util.List asElementList(java.lang.Object)",
            "org.dom4j.util.IndexedElement:java.util.Map attributeIndex()",
            "org.dom4j.util.IndexedElement:java.util.Map elementIndex()",
            "org.dom4j.xpath.DefaultXPath:void sort(java.util.List,boolean)",
            "org.dom4j.xpath.DefaultXPath:void removeDuplicates(java.util.List,java.util.Map)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromRawName(java.lang.String)",
            "org.dom4j.xpp.ProxyXmlStartTag:java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.tree.AbstractNode:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractNode:java.util.List selectNodes(java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.DocumentHelper:void sort(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.xpath.DefaultXPath:java.util.List selectNodes(java.lang.Object,org.dom4j.XPath)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttribute:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.BranchTreeNode$1:javax.swing.tree.TreeNode nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.BranchTreeNode$1:java.lang.Object nextElement()"
        ]
    },
    "org.dom4j.swing.BranchTreeNode$1:boolean hasMoreElements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.datatype.DatatypeElement:java.lang.Object getData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.datatype.DatatypeElement:java.lang.String toString()"
        ]
    },
    "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.lang.String)"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.XPPReader:org.dom4j.Document read(java.lang.String)"
        ]
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Mode:void removeRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:void removeRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.XMLWriter:void startDTD(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endDTD()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.XMLWriter:void endDTD()"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void startEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.Entity)",
            "org.dom4j.io.XMLWriter:void endEntity(java.lang.String)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void startCDATA()"
        ]
    },
    "org.dom4j.rule.RuleManager:void addRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void addRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.rule.RuleManager:void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:void addDefaultRules(org.dom4j.rule.Mode)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void addColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.XMLTableDefinition:void addStringColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.XMLTableDefinition:void addNumberColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXContentHandler:void endCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endCDATA()",
            "org.dom4j.io.SAXWriter:void write(org.dom4j.CDATA)",
            "org.dom4j.io.XMLWriter:void endCDATA()"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.SAXWriter:void write(java.lang.String)"
        ]
    },
    "org.dom4j.datatype.DatatypeElement:org.dom4j.Element addText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.SAXContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.SAXContentHandler:void completeCurrentTextNode()",
            "org.dom4j.io.XPP3Reader:org.dom4j.Document parseDocument()",
            "org.dom4j.io.XPPReader:org.dom4j.Document parseDocument()",
            "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
            "org.dom4j.util.XMLErrorHandler:void addException(org.dom4j.Element,org.xml.sax.SAXParseException)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void completeCurrentTextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXContentHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.dom4j.io.SAXContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void characters(char[],int,int)",
            "org.dom4j.io.SAXContentHandler:void comment(char[],int,int)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:org.dom4j.Document read(org.w3c.dom.Document)",
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getFirstChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readTree(org.w3c.dom.Node,org.dom4j.Branch)"
        ]
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getLastChild()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:boolean hasChildNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.BranchTreeNode:boolean isLeaf()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:boolean hasContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractDocument:boolean remove(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.BackedList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleSet:void removeRule(org.dom4j.rule.Rule)",
            "org.dom4j.swing.XMLTableDefinition:void removeColumn(org.dom4j.swing.XMLTableColumnDefinition)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean remove(java.lang.Object)",
            "org.dom4j.tree.DefaultDocument:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.util.IndexedElement:void removeFromElementIndex(java.lang.Object,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.BackedList:org.dom4j.Node remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.BackedList:java.lang.Object remove(int)"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getPreviousSibling(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node getPreviousSibling()",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.dom4j.dom.DOMNodeHelper:org.w3c.dom.Node getNextSibling(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMComment:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMElement:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node getNextSibling()",
            "org.dom4j.dom.DOMText:org.w3c.dom.Node getNextSibling()"
        ]
    },
    "org.dom4j.tree.AbstractDocument:void normalize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.PruningElementStack:void pathMatches(org.dom4j.Element,org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Node)",
            "org.dom4j.tree.AbstractElement:void normalize()"
        ]
    },
    "org.dom4j.DocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.dom.DOMProcessingInstruction:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.dom.DOMDocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.io.SAXModifier:void resetModifiers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.jaxb.JAXBModifier:void resetObjectModifiers()",
            "org.dom4j.jaxb.JAXBModifier:org.dom4j.io.SAXModifier installModifier()"
        ]
    },
    "org.dom4j.jaxb.JAXBReader:void resetHandlers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.SAXModifyContentHandler:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void startDocument()"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endDocument()"
        ]
    },
    "org.dom4j.tree.AbstractNode:java.util.List selectNodes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.swing.BranchTreeNode$1:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.io.XPPReader:org.dom4j.Document read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.RuleManager:void removeRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Stylesheet:void removeRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.rule.Stylesheet:void addRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.RuleManager:void addDefaultRules(org.dom4j.rule.Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:org.dom4j.rule.Mode createMode()"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void write(java.lang.String)"
        ]
    },
    "org.dom4j.rule.RuleSet:void removeRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void removeRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.Mode:void removeFromNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.swing.XMLTableDefinition:void removeColumn(org.dom4j.swing.XMLTableColumnDefinition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.tree.ContentListFacade:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.swing.XMLTableDefinition:void removeColumn(org.dom4j.swing.XMLTableColumnDefinition)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.AbstractElement:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.tree.BackedList:void clear()",
            "org.dom4j.tree.ContentListFacade:boolean remove(java.lang.Object)",
            "org.dom4j.tree.DefaultDocument:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
            "org.dom4j.tree.DefaultElement:boolean removeNode(org.dom4j.Node)",
            "org.dom4j.util.IndexedElement:void removeFromElementIndex(java.lang.Object,org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.DefaultElement:boolean removeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.CDATA)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Entity)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Text)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:boolean remove(java.lang.Object)",
            "org.dom4j.tree.BackedList:org.dom4j.Node remove(int)",
            "org.dom4j.util.IndexedElement:boolean removeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.util.IndexedElement:void removeFromElementIndex(java.lang.Object,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:void removeFromElementIndex(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.BackedList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DispatchHandler:void onEnd(org.dom4j.ElementPath)",
            "org.dom4j.tree.ContentListFacade:org.dom4j.Node remove(int)",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace remove(int)"
        ]
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMAttribute:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMCDATA:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMComment:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocument:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentType:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMElement:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMEntityReference:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMNamespace:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMProcessingInstruction:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMText:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.DocumentHelper:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.util.ProxyDocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.dom.DOMDocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.DocumentHelper:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractDocument:org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.tree.AbstractElement:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.dom4j.util.ProxyDocumentFactory:org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.dom4j.jaxb.JAXBModifier:void resetObjectModifiers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.Stylesheet:void removeRule(org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.dom4j.rule.RuleManager:org.dom4j.rule.Mode createMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:org.dom4j.rule.Mode getMode(java.lang.String)"
        ]
    },
    "org.dom4j.rule.Mode:void removeFromNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.Mode:void removeRule(org.dom4j.rule.Rule)"
        ]
    },
    "org.dom4j.util.IndexedElement:boolean removeNode(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractBranch:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.CDATA)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Comment)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Entity)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Namespace)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Text)",
            "org.dom4j.tree.BackedList:org.dom4j.Node set(int,org.dom4j.Node)",
            "org.dom4j.tree.BackedList:boolean remove(java.lang.Object)",
            "org.dom4j.tree.BackedList:org.dom4j.Node remove(int)"
        ]
    },
    "org.dom4j.util.IndexedElement:void removeFromElementIndex(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.util.IndexedElement:boolean removeNode(org.dom4j.Node)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:org.dom4j.Node remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:java.lang.Object remove(int)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace pop()",
            "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace pop(java.lang.String)"
        ]
    },
    "org.dom4j.rule.RuleManager:org.dom4j.rule.Mode getMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.rule.RuleManager:void addRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.RuleManager:void removeRule(org.dom4j.rule.Rule)",
            "org.dom4j.rule.Stylesheet:void run(org.dom4j.Node,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Element,java.lang.String)",
            "org.dom4j.rule.Stylesheet:void applyTemplates(org.dom4j.Document,java.lang.String)"
        ]
    },
    "org.dom4j.tree.ContentListFacade:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.tree.ContentListFacade:org.dom4j.Node remove(int)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace pop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMReader:void readElement(org.w3c.dom.Node,org.dom4j.Branch)",
            "org.dom4j.io.DOMWriter:void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element)",
            "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)",
            "org.dom4j.io.XMLWriter:void writeElement(org.dom4j.Element)"
        ]
    },
    "org.dom4j.tree.NamespaceStack:org.dom4j.Namespace pop(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.DOMSAXContentHandler:void endPrefixMapping(java.lang.String)",
            "org.dom4j.io.SAXContentHandler:void endPrefixMapping(java.lang.String)"
        ]
    },
    "org.dom4j.io.DOMSAXContentHandler:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)"
        ]
    },
    "org.dom4j.io.SAXContentHandler:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXModifyContentHandler:void endPrefixMapping(java.lang.String)",
            "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)"
        ]
    },
    "org.dom4j.io.SAXModifyContentHandler:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.dom4j.io.SAXEventRecorder:void replay(org.xml.sax.ContentHandler)",
            "org.dom4j.io.SAXWriter:void endPrefixMapping(org.dom4j.tree.NamespaceStack,int)"
        ]
    }
}
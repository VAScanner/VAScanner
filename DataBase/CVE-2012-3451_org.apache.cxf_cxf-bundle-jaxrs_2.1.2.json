{
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void resume()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.SchemaInfo:org.w3c.dom.Element getElement()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.SchemaInfo:org.w3c.dom.Element getElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addRequiredSchemaImports(org.apache.cxf.service.model.SchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()"
        ]
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addRequiredSchemaImports(org.apache.cxf.service.model.SchemaInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo findSubResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String creatPrefix()",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder encodings(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder languages(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder mediaTypes(javax.ws.rs.core.MediaType[])"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()"
        ]
    },
    "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)",
            "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()",
            "org.apache.cxf.service.model.ServiceInfo:void refresh()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void walk()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void initializeBus(org.apache.cxf.Bus)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toThreadingParameters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void check()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.All,org.apache.neethi.All)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.ExactlyOne,org.apache.neethi.ExactlyOne)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:java.util.Collection intersect(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean writeToOutputStream(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo findSubResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo findSubResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo findSubResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI build()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI build()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder add()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo findSubResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParams(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParams(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(javax.ws.rs.ext.MessageBodyReader,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(javax.ws.rs.ext.MessageBodyWriter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(javax.ws.rs.PathParam,java.lang.Class,java.lang.reflect.Type,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:java.util.List getResourceClasses()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void cleatThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String creatPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.String toString()",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder encodings(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder languages(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder mediaTypes(javax.ws.rs.core.MediaType[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.NSManager:java.util.Set getNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.DeferredMap:void undefer()"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerRegistryImpl:void preShutdown()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void stop()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void flush()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)",
            "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.SchemaInfo:org.w3c.dom.Element getElement()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void refresh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:void initializeBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void initializeBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void access$000(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(javax.net.ssl.HttpsURLConnection)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.All,org.apache.neethi.All)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.ExactlyOne,org.apache.neethi.ExactlyOne)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:java.util.Collection intersect(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean writeToOutputStream(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean containsKey(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MappingsHandler:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaTools:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:void initializeBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder clone()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder add()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParams(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParams(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder uri(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(javax.ws.rs.ext.MessageBodyReader,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(javax.ws.rs.ext.MessageBodyWriter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(javax.ws.rs.PathParam,java.lang.Class,java.lang.reflect.Type,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(javax.ws.rs.PathParam,java.lang.Class,java.lang.reflect.Type,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:java.util.List getResourceClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void initializeServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setUserProviders(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void cleatThreadLocalProxies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:int size()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:void readAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(byte[])",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.ClassReader:void readCode()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParameters getTlsServerParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters getThreadingParameters(org.springframework.beans.MutablePropertyValues,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerRegistryImpl:void register()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void initializeBus(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyConstants getPolicyConstants()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getResourceFieldProxy(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getHeaderValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap getParams(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getLanguage()",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$2:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:java.lang.String getBaseURI()"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder clone()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.extension.DeferredMap:void undefer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.MethodDispatcher createOperation(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerRegistryImpl:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void setupAttachment(org.apache.cxf.attachment.AttachmentImpl,javax.mail.internet.InternetHeaders)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void initializeBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void destroy()"
        ]
    },
    "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getBackChannel()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.servlet.ServletTransportFactory,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void access$000(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$300(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(javax.net.ssl.HttpsURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(java.net.Proxy,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void shutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void shutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.MappingsHandler:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.Object clone()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void <init>(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder clone()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getBaseUriBuilder()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder uri(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setUserProviders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void registerUserProvider(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBUtils:void splitWord(java.util.List,int)",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.common.util.ASMHelper:org.objectweb.asm.ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.NSManager:void <init>()"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void updateResponseHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void setupAttachment(org.apache.cxf.attachment.AttachmentImpl,javax.mail.internet.InternetHeaders)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void register()",
            "org.apache.cxf.endpoint.ServerRegistryImpl:void register()",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:void init()",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:void init()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void register()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void register()",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void register()",
            "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()",
            "org.apache.cxf.headers.HeaderManagerImpl:void register()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:void register()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void register()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.MethodDispatcher createOperation(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void checkContextMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MappingsHandler:boolean handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object access$000(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerRegistryImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadSpringBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveEngineFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyConstants getPolicyConstants()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.xml.XMLPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.apache.cxf.bus.spring.BusApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.lang.String getLanguage()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(javax.ws.rs.PathParam,java.lang.Class,java.lang.reflect.Type,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils$2:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$2:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSClientParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Node,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XMLBeansJSONProvider:void writeTo(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.Object clone()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.MethodDispatcher createOperation(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.MethodDispatcher createOperation(org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void setupAttachment(org.apache.cxf.attachment.AttachmentImpl,javax.mail.internet.InternetHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getBackChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.WSAContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType retrieveReplyTo(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:void copy(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.servlet.ServletTransportFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$300(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(java.net.Proxy,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void close()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.ext.MappingsHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int hashCode()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$1:void run()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.jaxb.JAXBUtils$IdentifierType[] values()",
            "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()",
            "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()",
            "org.apache.cxf.wsdl.WSDLConstants$WSDLVersion:org.apache.cxf.wsdl.WSDLConstants$WSDLVersion[] values()",
            "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()",
            "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip[] values()",
            "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()",
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()",
            "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()",
            "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()",
            "org.apache.cxf.transports.http.configuration.ClientCacheControlType:org.apache.cxf.transports.http.configuration.ClientCacheControlType[] values()",
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()",
            "org.apache.cxf.transports.http.configuration.ServerCacheControlType:org.apache.cxf.transports.http.configuration.ServerCacheControlType[] values()",
            "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getBaseUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getRequestUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void registerUserProvider(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageBodyWorkers:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:void splitWord(java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.objectweb.asm.ClassWriter createClassWriter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.NSManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void updateResponseHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.headers.HeaderManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:void <init>(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void checkContextMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextSetterMethods()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap cloneMap(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.SchemaInfo:org.w3c.dom.Element getElement()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object access$000(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadSpringBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.xml.XMLPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.lang.String getLanguage()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils$2:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Node,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XMLBeansJSONProvider:void writeTo(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XMLBeansJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.XMLBeansElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.jaxb.JAXBUtils$IdentifierType[] values()",
            "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()",
            "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()",
            "org.apache.cxf.wsdl.WSDLConstants$WSDLVersion:org.apache.cxf.wsdl.WSDLConstants$WSDLVersion[] values()",
            "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()",
            "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip[] values()",
            "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()",
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()",
            "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()",
            "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()",
            "org.apache.cxf.transports.http.configuration.ClientCacheControlType:org.apache.cxf.transports.http.configuration.ClientCacheControlType[] values()",
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()",
            "org.apache.cxf.transports.http.configuration.ServerCacheControlType:org.apache.cxf.transports.http.configuration.ServerCacheControlType[] values()",
            "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.WSAContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType retrieveReplyTo(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:void copy(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:void copy(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:void copy(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:void copy(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingReaderProvider:javax.ws.rs.core.MultivaluedMap readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void reset()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$1:void run()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.jaxb.JAXBUtils$IdentifierType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.WSDLConstants$WSDLVersion:org.apache.cxf.wsdl.WSDLConstants$WSDLVersion[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.configuration.ClientCacheControlType:org.apache.cxf.transports.http.configuration.ClientCacheControlType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ClientCacheControlType:org.apache.cxf.transports.http.configuration.ClientCacheControlType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.ServerCacheControlType:org.apache.cxf.transports.http.configuration.ServerCacheControlType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ServerCacheControlType:org.apache.cxf.transports.http.configuration.ServerCacheControlType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MessageBodyWorkersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ProviderInfo:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextSetterMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()",
            "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)"
        ]
    },
    "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XMLBeansJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XMLBeansElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.configuration.ClientCacheControlType:org.apache.cxf.transports.http.configuration.ClientCacheControlType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.configuration.ServerCacheControlType:org.apache.cxf.transports.http.configuration.ServerCacheControlType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void access$100(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.ForkedCommand:int execute()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.StringProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void access$100(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)",
            "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaTools:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaTools:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.SchemaInfo:org.w3c.dom.Element getElement()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addRequiredSchemaImports(org.apache.cxf.service.model.SchemaInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Transformer getTransformer()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setAddress(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType duplicate(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()"
        ]
    },
    "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)"
        ]
    },
    "org.apache.cxf.BusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.clustering.FailoverTargetSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger access$200()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean canAssert(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:void <init>()",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:void <init>()",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:boolean canAssert(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:java.io.InputStream getPartialResponse(java.net.HttpURLConnection,int)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$200()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(javax.net.ssl.HttpsURLConnection)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <init>(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(java.net.Proxy,java.net.URL)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(javax.net.ssl.HttpsURLConnection)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getUnSupported()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getDerivative()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.mortbay.jetty.AbstractConnector createConnector(int)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.mortbay.jetty.AbstractConnector createConnector(int)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes()",
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParams(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParams(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$2:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getConsumeTypes(javax.ws.rs.ConsumeMime)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProduceTypes(javax.ws.rs.ProduceMime)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(java.lang.'annotation'.Annotation[],java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,java.lang.String,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createResourceValue(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List parseMediaTypes(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(javax.ws.rs.ext.MessageBodyReader,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(javax.ws.rs.ext.MessageBodyWriter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void initContextFields()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void handleSetters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(javax.ws.rs.PathParam,java.lang.Class,java.lang.reflect.Type,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(javax.ws.rs.QueryParam,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoList(java.lang.reflect.Type,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoSet(java.lang.reflect.Type,java.util.List,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.ResourceBundle access$000()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.logging.Logger access$100()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean objectFactoryForType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContexts(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void reset()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Transformer getTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setAddress(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType duplicate(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory$HttpEndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void <init>(org.apache.cxf.transport.http.AbstractHTTPDestination,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()",
            "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean canAssert(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:boolean canAssert(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.io.InputStream getPartialResponse(java.net.HttpURLConnection,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory()"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <init>(org.apache.cxf.configuration.jsse.TLSClientParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getUnSupported()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getDerivative()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.mortbay.jetty.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.mortbay.jetty.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void setAnnotatedMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getConsumeTypes(javax.ws.rs.ConsumeMime)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(javax.ws.rs.ext.MessageBodyReader,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProduceTypes(javax.ws.rs.ProduceMime)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(javax.ws.rs.ext.MessageBodyWriter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createResourceValue(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectResourceFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List parseMediaTypes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.ResourceBundle access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean objectFactoryForType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory$HttpEndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void <init>(org.apache.cxf.transport.http.AbstractHTTPDestination,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>()"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void setAnnotatedMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getAbsolutePath()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLResolver:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.XmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.MethodDispatcher createOperation(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getAbsolutePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(javax.ws.rs.ext.MessageBodyWriter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(javax.ws.rs.ext.MessageBodyReader,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)",
            "org.apache.cxf.wsdl11.WSDLResolver:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLResolver:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.XmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLLocatorImpl:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    }
}
{
    "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult verifyIdentityToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,boolean,boolean,boolean,java.lang.String,javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response tokenExchange()",
            "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,boolean)",
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(java.lang.String,org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:void expireUserSessionCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,javax.ws.rs.core.HttpHeaders,org.keycloak.common.ClientConnection)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders,boolean,boolean)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.IdentityCookieToken createIdentityToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.UserSessionModel,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:void createLoginCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response tokenExchange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response logoutRequest(org.keycloak.dom.saml.v2.protocol.LogoutRequestType,org.keycloak.models.ClientModel,java.lang.String)",
            "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response clientInitiatedAccountLinking(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.authentication.authenticators.browser.CookieAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(java.lang.String,org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.authorization.util.Tokens:org.keycloak.representations.AccessToken getAccessToken(java.lang.String,org.keycloak.models.KeycloakSession)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:void logout(org.keycloak.models.UserSessionModel,boolean)",
            "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders,boolean)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:void createLoginCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response redirectAfterSuccessfulFlow(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionContext,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.events.EventBuilder,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol)",
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)",
            "org.keycloak.services.resources.admin.UserResource:java.util.Map impersonate()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response logoutRequest(org.keycloak.dom.saml.v2.protocol.LogoutRequestType,org.keycloak.models.ClientModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response clientInitiatedAccountLinking(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.authenticators.browser.CookieAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)",
            "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession)",
            "org.keycloak.services.resources.admin.AdminConsole:javax.ws.rs.core.Response whoAmI(javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.services.resources.admin.AdminRoot:org.keycloak.services.resources.admin.AdminAuth authenticateRealmAdminRequest(javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response getToken(java.lang.String,boolean)",
            "org.keycloak.authorization.util.Tokens:org.keycloak.representations.AccessToken getAccessToken(org.keycloak.models.KeycloakSession)"
        ]
    },
    "org.keycloak.authorization.util.Tokens:org.keycloak.representations.AccessToken getAccessToken(java.lang.String,org.keycloak.models.KeycloakSession)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.authorization.AuthorizationTokenService:org.keycloak.authorization.policy.evaluation.EvaluationContext lambda$static$0(org.keycloak.representations.idm.authorization.AuthorizationRequest,org.keycloak.authorization.AuthorizationProvider)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:void logout(org.keycloak.models.UserSessionModel,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken()"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,javax.ws.rs.core.HttpHeaders,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.oidc.TokenManager:org.keycloak.protocol.oidc.TokenManager$TokenValidation validateToken(org.keycloak.models.KeycloakSession,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.models.RealmModel,org.keycloak.representations.RefreshToken,javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response logoutRequest(org.keycloak.dom.saml.v2.protocol.LogoutRequestType,org.keycloak.models.ClientModel,java.lang.String)",
            "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,boolean)",
            "org.keycloak.services.managers.AuthenticationManager:org.keycloak.services.managers.AuthenticationManager$AuthResult verifyIdentityToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,boolean,boolean,boolean,java.lang.String,javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processSessionsLogout(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processPasswordUpdate(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.admin.RealmAdminResource:void deleteSession(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:java.util.Map impersonate()",
            "org.keycloak.services.resources.admin.UserResource:void logout()",
            "org.keycloak.broker.oidc.KeycloakOIDCIdentityProvider$KeycloakEndpoint:javax.ws.rs.core.Response backchannelLogout(java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response logoutRequest(org.keycloak.dom.saml.v2.protocol.LogoutRequestType,java.lang.String)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response redirectAfterSuccessfulFlow(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionContext,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.events.EventBuilder,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response redirectAfterSuccessfulFlow(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionContext,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.events.EventBuilder,org.keycloak.sessions.AuthenticationSessionModel)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response finishAuthentication(org.keycloak.protocol.LoginProtocol)"
        ]
    },
    "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateIdentityCookie(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountConsole:void init()",
            "org.keycloak.services.resources.account.AccountFormService:void init()"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.Map impersonate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.managers.AppAuthManager:org.keycloak.services.managers.AuthenticationManager$AuthResult authenticateBearerToken(org.keycloak.models.KeycloakSession)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountLoader:java.lang.Object getAccountService(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.services.resources.admin.AdminConsole:javax.ws.rs.core.Response whoAmI(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.AdminRoot:org.keycloak.services.resources.admin.AdminAuth authenticateRealmAdminRequest(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.AdminRoot:java.lang.Object getRealmsAdmin(javax.ws.rs.core.HttpHeaders)",
            "org.keycloak.services.resources.admin.AdminRoot:java.lang.Object getServerInfo(javax.ws.rs.core.HttpHeaders)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response getToken(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response retrieveToken(java.lang.String)"
        ]
    },
    "org.keycloak.authorization.util.Tokens:org.keycloak.representations.AccessToken getAccessToken(org.keycloak.models.KeycloakSession)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()",
            "org.keycloak.authorization.common.KeycloakIdentity:void <init>(org.keycloak.models.KeycloakSession)"
        ]
    },
    "org.keycloak.authorization.authorization.AuthorizationTokenService:org.keycloak.authorization.policy.evaluation.EvaluationContext lambda$static$0(org.keycloak.representations.idm.authorization.AuthorizationRequest,org.keycloak.authorization.AuthorizationProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.authorization.AuthorizationTokenService$lambda_static_0__79:java.lang.Object apply(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.TokenManager:org.keycloak.protocol.oidc.TokenManager$TokenValidation validateToken(org.keycloak.models.KeycloakSession,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.models.RealmModel,org.keycloak.representations.RefreshToken,javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.TokenManager:org.keycloak.protocol.oidc.TokenManager$RefreshResult refreshAccessToken(org.keycloak.models.KeycloakSession,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.models.RealmModel,org.keycloak.models.ClientModel,java.lang.String,org.keycloak.events.EventBuilder,javax.ws.rs.core.HttpHeaders,org.jboss.resteasy.spi.HttpRequest)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:void backchannelLogout(org.keycloak.models.KeycloakSession,org.keycloak.models.UserSessionModel,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountRestService:javax.ws.rs.core.Response sessionsLogout(boolean)",
            "org.keycloak.services.resources.account.AccountRestService:javax.ws.rs.core.Response sessionLogout(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processSessionsLogout(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processPasswordUpdate(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RealmAdminResource:void deleteSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void logout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.KeycloakOIDCIdentityProvider$KeycloakEndpoint:javax.ws.rs.core.Response backchannelLogout(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response logoutRequest(org.keycloak.dom.saml.v2.protocol.LogoutRequestType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response redirectAfterSuccessfulFlow(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserSessionModel,org.keycloak.models.ClientSessionContext,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.events.EventBuilder,org.keycloak.sessions.AuthenticationSessionModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response finishedRequiredActions(org.keycloak.models.KeycloakSession,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.models.UserSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processConsent(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response finishAuthentication(org.keycloak.protocol.LoginProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)"
        ]
    },
    "org.keycloak.services.resources.account.AccountConsole:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountLoader:java.lang.Object getAccountService(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountLoader:java.lang.Object getAccountService(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)",
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response resourceOwnerPasswordCredentialsGrant()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountLoader:java.lang.Object getAccountService(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.RealmsResource:java.lang.Object getAccountService(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.AdminRoot:java.lang.Object getRealmsAdmin(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.AdminRoot:java.lang.Object getServerInfo(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response retrieveToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.authorization.common.KeycloakIdentity:void <init>(org.keycloak.models.KeycloakSession)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.protection.ProtectionService:org.keycloak.authorization.common.KeycloakIdentity createIdentity(boolean)"
        ]
    },
    "org.keycloak.authorization.authorization.AuthorizationTokenService$lambda_static_0__79:java.lang.Object apply(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.authorization.AuthorizationTokenService:org.keycloak.authorization.policy.evaluation.EvaluationContext createEvaluationContext(org.keycloak.authorization.authorization.AuthorizationTokenService$KeycloakAuthorizationRequest)",
            "org.keycloak.authorization.admin.ResourceSetService:java.lang.Object lambda$find$8(java.util.function.BiFunction,java.lang.Boolean,org.keycloak.authorization.model.Resource)"
        ]
    },
    "org.keycloak.protocol.oidc.TokenManager:org.keycloak.protocol.oidc.TokenManager$RefreshResult refreshAccessToken(org.keycloak.models.KeycloakSession,javax.ws.rs.core.UriInfo,org.keycloak.common.ClientConnection,org.keycloak.models.RealmModel,org.keycloak.models.ClientModel,java.lang.String,org.keycloak.events.EventBuilder,javax.ws.rs.core.HttpHeaders,org.jboss.resteasy.spi.HttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response refreshTokenGrant()"
        ]
    },
    "org.keycloak.services.resources.account.AccountRestService:javax.ws.rs.core.Response sessionsLogout(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountRestService:javax.ws.rs.core.Response sessionLogout(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response finishedRequiredActions(org.keycloak.models.KeycloakSession,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.models.UserSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response nextActionAfterAuthentication(org.keycloak.models.KeycloakSession,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishBrokerAuthentication(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationComplete()"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processConsent(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)",
            "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()",
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:void authorizeClient()",
            "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response resourceOwnerPasswordCredentialsGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result,boolean)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.services.resources.RealmsResource:java.lang.Object getAccountService(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.protection.ProtectionService:org.keycloak.authorization.common.KeycloakIdentity createIdentity(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.protection.ProtectionService:java.lang.Object resource()",
            "org.keycloak.authorization.protection.ProtectionService:java.lang.Object permission()",
            "org.keycloak.authorization.protection.ProtectionService:java.lang.Object ticket()",
            "org.keycloak.authorization.protection.ProtectionService:java.lang.Object policy()"
        ]
    },
    "org.keycloak.authorization.authorization.AuthorizationTokenService:org.keycloak.authorization.policy.evaluation.EvaluationContext createEvaluationContext(org.keycloak.authorization.authorization.AuthorizationTokenService$KeycloakAuthorizationRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.authorization.AuthorizationTokenService:javax.ws.rs.core.Response authorize(org.keycloak.authorization.authorization.AuthorizationTokenService$KeycloakAuthorizationRequest)"
        ]
    },
    "org.keycloak.authorization.admin.ResourceSetService:java.lang.Object lambda$find$8(java.util.function.BiFunction,java.lang.Boolean,org.keycloak.authorization.model.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.admin.ResourceSetService$lambda_find_8__54:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response refreshTokenGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.managers.AuthenticationManager:javax.ws.rs.core.Response nextActionAfterAuthentication(org.keycloak.models.KeycloakSession,org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.common.ClientConnection,org.jboss.resteasy.spi.HttpRequest,javax.ws.rs.core.UriInfo,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsServiceChecks$IsActionRequired:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishBrokerAuthentication(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlowSuccess(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler$ResetCredsAuthenticationProcessor:javax.ws.rs.core.Response authenticationComplete()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()"
        ]
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:void authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(java.lang.String,org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)"
        ]
    },
    "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)",
            "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService$processFlow__13:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.authorization.protection.ProtectionService:java.lang.Object resource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.protection.ProtectionService:java.lang.Object permission()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.protection.ProtectionService:java.lang.Object ticket()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.protection.ProtectionService:java.lang.Object policy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.authorization.AuthorizationTokenService:javax.ws.rs.core.Response authorize(org.keycloak.authorization.authorization.AuthorizationTokenService$KeycloakAuthorizationRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()"
        ]
    },
    "org.keycloak.authorization.admin.ResourceSetService$lambda_find_8__54:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRequireAction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsServiceChecks$IsActionRequired:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlowSuccess(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishOrRedirectToPostBrokerLogin(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlow(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler$ResetCredsAuthenticationProcessor:javax.ws.rs.core.Response authenticationComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(java.lang.String,org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)"
        ]
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)",
            "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService$brokerLoginFlow__14:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService$processFlow__13:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.protection.resource.ResourceService:javax.ws.rs.core.Response findById(java.lang.String)",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response requiredActionGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__86:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishOrRedirectToPostBrokerLogin(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response authenticated(org.keycloak.broker.provider.BrokeredIdentityContext)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlow(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService$brokerLoginFlow__14:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response brokerFlow(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.authorization.protection.resource.ResourceService:javax.ws.rs.core.Response findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__86:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response authenticated(org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlowSuccess(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response brokerFlow(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    }
}
{
    "org.apache.pdfbox.io.ScratchFileBuffer:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)",
            "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[])",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int readRemainingBytes(byte[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.InputStreamSource:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[])"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNoFollowingBinData(org.apache.pdfbox.pdfparser.SequentialSource)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:int checkForEndOfString(int)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNoFollowingBinData(org.apache.pdfbox.pdfparser.SequentialSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:int checkForEndOfString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSOutputStream:void close()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(org.apache.pdfbox.io.RandomAccessBufferedFileInputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void <init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createRawOutputStream()",
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:java.io.File createTmpFile(java.io.InputStream)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfparser.FDFParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(org.apache.pdfbox.io.RandomAccessBufferedFileInputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.type1.Type1Font getType1Font(java.lang.String,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner signatureImage(java.lang.String)",
            "org.apache.pdfbox.util.Version:java.lang.String getVersion()"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void close()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void close()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject encode()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(org.apache.pdfbox.io.RandomAccessBufferedFileInputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.File)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.rendering.PageDrawer:void access$1400(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void <init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream()",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createRawOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createFilteredStream()",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.cos.COSStream:java.lang.String getString()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:java.io.File createTmpFile(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.type1.Type1Font getType1Font(java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createThumbnail(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateAppearanceStreams()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner signatureImage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.Version:java.lang.String getVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void finalize()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void close()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void close()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void closeTemplate(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptArray(org.apache.pdfbox.cos.COSArray,long,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject encode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.InputStream getUnfilteredStream()",
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.XrefTrailerResolver)",
            "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:byte[] getBytes()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.NextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.ShowTextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void access$1300(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void access$1400(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.rendering.PageDrawer:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createUnfilteredStream()",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.OutputStream createOutputStream()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createFilteredStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:boolean removeObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:int indexOf(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:int indexOfObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:boolean isValueChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField)",
            "org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.pdmodel.font.PDCIDFont getCIDFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void subset()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDICCBased create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createThumbnail(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateAppearanceStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void <init>()",
            "org.apache.pdfbox.cos.COSDocument:void <init>(org.apache.pdfbox.io.ScratchFile)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:void buildSignature()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void closeTemplate(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.awt.image.BufferedImage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.awt.image.BufferedImage,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptArray(org.apache.pdfbox.cos.COSArray,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.InputStream getUnfilteredStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.XrefTrailerResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:java.io.InputStream exportXMPMetadata()",
            "org.apache.pdfbox.pdmodel.common.PDStream:byte[] toByteArray()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:org.w3c.dom.Document getDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.NextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void access$1300(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getDisplacement(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createUnfilteredStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.io.OutputStream createOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:boolean removeObject(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:int indexOf(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:int indexOfObject(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void checkPages(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:boolean hasNext()",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:boolean isValueChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void notifyChanged()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.cos.COSInteger,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.cos.COSInteger)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void potentiallyNotifyChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList create(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.SmallMap:boolean containsKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:java.lang.Object get(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.SmallMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFontBoxFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:org.apache.pdfbox.pdmodel.font.FontProvider access$100()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.pdmodel.font.PDCIDFont getCIDFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void subset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void subset()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDICCBased create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getOpaqueImage()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void init()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void <init>(org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void <init>()",
            "org.apache.pdfbox.pdfparser.PDFParser:void init(org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:void buildSignature()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.awt.image.BufferedImage,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.awt.image.BufferedImage,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.fdf.FDFDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processPages()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObjects()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:java.io.InputStream exportXMPMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:byte[] toByteArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$FF3ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont$FF3ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:byte[] getLookupData()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:org.w3c.dom.Document getDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextString(byte[])",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getNormalAppearanceAsContentStream(boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void checkPages(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.contentstream.operator.OperatorProcessor:boolean checkArrayTypesClass(java.util.List,java.lang.Class)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObjectKey getKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:void print()",
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.filter.Filter:javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()",
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.COSParser:void addNewToList(java.util.Queue,java.util.Collection,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:int[] getWEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:java.util.List getIndexEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:java.util.Set getContainedObjectNumbers(int)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void reset()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Long[] getXRefRanges(java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Set getMetadataKeys()",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:byte[][] computeRecipientsField(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.lang.String toDebugString()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.Map createFontInfoByName(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void writeTo(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions retrieveDimensions(java.io.ByteArrayInputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:javax.imageio.ImageWriter getJPEGImageWriter()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:boolean checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem next()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setInteger(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfNumber(java.lang.String,float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void notifyChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.cos.COSInteger,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.cos.COSInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void potentiallyNotifyChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:java.util.List getOCGs()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.SmallMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.PDFDocEncoding:boolean containsChar(char)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(int,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void addObjectToWrite(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsKey(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:boolean contains(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)",
            "org.apache.pdfbox.text.TextPosition:java.lang.String combineDiacritic(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.cos.COSName:org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)",
            "org.apache.pdfbox.cos.PDFDocEncoding:byte[] getBytes(java.lang.String)",
            "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void seek(long)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(int,int)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getFirstTrailer()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getLastTrailer()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void addObjectToWrite(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object get(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.pdmodel.common.PDPageLabelRange getPageLabelRange(int)",
            "org.apache.pdfbox.pdmodel.common.function.type4.Operators:org.apache.pdfbox.pdmodel.common.function.type4.Operator getOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.CMapManager:org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FontCache:org.apache.fontbox.FontBoxFont getFont(org.apache.pdfbox.pdmodel.font.FontInfo)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List copySubstitutes(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List getSubstitutes(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidthForCID(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getPositionVector(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getVerticalDisplacementVectorY(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:org.apache.fontbox.afm.FontMetrics getAFM(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.lang.String getMappedFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:java.lang.String getName(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String codePointToName(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String sequenceToName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getInstance(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:java.lang.String getTextForRegion(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.text.TextPosition:java.lang.String combineDiacritic(java.lang.String)",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:java.lang.Object find(byte[])",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:void addPath(java.lang.Object,byte[][])"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void registerOperatorProcessor(java.lang.String,org.apache.pdfbox.contentstream.operator.OperatorProcessor)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.PDFDocEncoding:void set(int,char)",
            "org.apache.pdfbox.filter.FilterFactory:void <init>()",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void seek(long)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addEntry(org.apache.pdfbox.pdfwriter.COSWriterXRefEntry)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$1:void newLabel(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",
            "org.apache.pdfbox.pdmodel.common.function.type4.Operators:void <init>()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.pdfbox.pdmodel.font.CMapManager:org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontCache:void addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readWidths()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readVerticalDisplacements()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void parseBidiFile(java.io.InputStream)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void addRegion(java.lang.String,java.awt.geom.Rectangle2D)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:void addPath(java.lang.Object,byte[][])"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void removeItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject removeObject(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void removeRegion(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:void addXRefTable(java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void checkXrefOffsets()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.util.SmallMap:void <init>(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean containsValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFontBoxFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:org.apache.pdfbox.pdmodel.font.FontProvider access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void subset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean access$500(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getOpaqueImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.File)",
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void init(org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.ScratchFile)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.fdf.FDFDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:void processPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:java.util.List split(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$FF3ByteSource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont$FF3ByteSource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDMMType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:byte[] getLookupData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void readColorTable()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpolate()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextString(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.ShowText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)"
        ]
    },
    "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getNormalAppearanceAsContentStream(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getNormalAppearanceAsContentStream()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void removePage(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void removePage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.OperatorProcessor:boolean checkArrayTypesClass(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CurveTo:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.Concatenate:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetFlatness:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetMatrix:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String toString()",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getCatalog()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(java.lang.String)",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObjectKey getKey(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:void print()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.Filter:javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:java.lang.Object clone()"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void addNewToList(java.util.Queue,java.util.Collection,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void checkXrefOffsets()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:int[] getWEntry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:java.util.List getIndexEntry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()"
        ]
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:java.util.Set getContainedObjectNumbers(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Long[] getXRefRanges(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefTable()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeToken(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeToken(org.apache.pdfbox.contentstream.operator.Operator)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.lang.Object[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Set getMetadataKeys()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void <init>(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.pdmodel.PDPage get(int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:int indexOf(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFileFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setColorantNames(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setFilters(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setExportValues(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setThreads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setThreadBeads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodeParms(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFileDecodeParams(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setPages(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEmbeddedFDFs(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setTemplates(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setAlternateColorSpaces(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setNext(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilter(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasons(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestation(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsage(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setChildren(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:void setColorants(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getDecodeParms()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileDecodeParams()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:java.util.Map getRoleMap()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.util.Map getPageIndicesByLabels()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.lang.String[] getLabelsByPageIndices()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:byte[][] computeRecipientsField(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.lang.String toDebugString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.Map createFontInfoByName(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void setProvider(org.apache.pdfbox.pdmodel.font.FontProvider)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:float getAverageFontWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isSymbolic()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.awt.geom.GeneralPath getPath(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void writeTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions retrieveDimensions(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:javax.imageio.ImageWriter getJPEGImageWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:boolean checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubject()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getIssuer()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getOID()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:java.lang.Object next()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsDisplayValues()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void checkValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValue(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:boolean isChecked()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void check()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$1)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void endText()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void writePage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setSummary(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setAlternateName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setSummary(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setHeaders(java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setHeaders(java.lang.String[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setListNumbering(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setScope(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setPlacement(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWritingMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderStyles(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextAlign(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidthAuto()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeightAuto()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBlockAlign(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setInlineAlign(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTBorderStyles(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeightNormal()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeightAuto()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setRubyAlign(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setRubyPosition(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setGlyphOrientationVertical(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:void setListNumbering(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setRole(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setCheckedState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setScope(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderStyles(java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTBorderStyles(java.lang.String[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setInteger(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setRowSpan(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setColSpan(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnCount(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setRowSpan(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setColSpan(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderThicknesses(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllPaddings(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceBefore(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceAfter(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setStartIndent(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setEndIndent(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextIndent(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidth(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeight(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTPaddings(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBaselineShift(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeight(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationThickness(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGap(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllColumnWidths(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderThicknesses(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllPaddings(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceBefore(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceAfter(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setStartIndent(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setEndIndent(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextIndent(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidth(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeight(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTPaddings(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBaselineShift(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeight(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationThickness(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGap(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllColumnWidths(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfNumber(java.lang.String,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderThicknesses(float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setPaddings(float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTPaddings(float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGaps(float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnWidths(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBackgroundColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderColors(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderColors(org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:java.util.List getOCGs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(java.lang.String)",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.FDFParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasWidths()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasMissingWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean hasXFA()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)"
        ]
    },
    "org.apache.pdfbox.cos.PDFDocEncoding:boolean containsChar(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setXRef(org.apache.pdfbox.cos.COSObjectKey,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void addObjectToWrite(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.PDFDocEncoding:boolean containsChar(char)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(int,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void addObjectToWrite(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsKey(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:boolean contains(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)",
            "org.apache.pdfbox.text.TextPosition:java.lang.String combineDiacritic(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFont(java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void access$1300(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,org.apache.fontbox.ttf.TrueTypeFont,java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:float getHeight(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void add(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:boolean contains(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String normalizeWord(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.text.TextPosition:java.lang.String combineDiacritic(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.TextPosition:void insertDiacritic(int,org.apache.pdfbox.text.TextPosition)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String[])",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSDictionary getCOSDictionary(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSStream getCOSStream(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSArray getCOSArray(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(org.apache.pdfbox.cos.COSName,long)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(org.apache.pdfbox.cos.COSName,float)",
            "org.apache.pdfbox.cos.COSDocument:boolean isEncrypted()",
            "org.apache.pdfbox.cos.COSObject:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSBase getFilters()",
            "org.apache.pdfbox.filter.CryptFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CryptFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void checkPages(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination convertCOSToPD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDPageTree getPages()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences getViewerPreferences()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getThreads()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary getURI()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDPageLabels getPageLabels()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties getOCProperties()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void <init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode getDests()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode getEmbeddedFiles()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode getJavaScript()",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.Iterator getContentStreams()",
            "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.PDPage:boolean hasContents()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getThreadBeads()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition getTransition()",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations(org.apache.pdfbox.pdmodel.interactive.'annotation'.AnnotationFilter)",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getViewports()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void increaseParents(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSObject getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSBase get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getNames(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getUpperLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getLowerLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.Map getNumbers()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getUpperLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getLowerLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream getExtends()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getDecodeParms()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileFilters()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileDecodeParams()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSDictionary getEFDictionary()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSBase getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacSubtype()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacCreator()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacResFork()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacResFork(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getRangeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getDomainValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getSize()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getEncodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getDecodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getFunctions()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getBounds()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getEncode()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode getParent()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSArray getKArray()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSBase getK()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNameTreeNode getIDTree()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNumberTreeNode getParentTree()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:java.util.Map getRoleMap()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.util.List getOwnerUserProperties()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:org.apache.pdfbox.cos.COSBase getValue()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isAttached(java.lang.String)",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:org.apache.pdfbox.cos.COSName getCryptFilterMethod()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerEncryptionKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserEncryptionKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:boolean isEncryptMetaData()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getCryptFilterDictionary(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStreamFilterName()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStringFilterName()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getPerms()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.Integer getPage()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.awt.Color getColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:float[] getCallout()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float[] getLine()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionHorizontalOffset()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionVerticalOffset()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.fdf.FDFDictionary getFDF()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSArray getID()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getPages()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getAnnotations()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSStream getDifferences()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getEmbeddedFDFs()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.fdf.FDFJavaScript getJavaScript()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.cos.COSBase getCOSValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetWidgetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearWidgetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearanceDictionary()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getAppearanceStreamReference()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFIconFit getIconFit()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions getAdditionalActions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.util.Map getDoc()",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFileSpecification()",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:java.util.List getTemplates()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getTemplateReference()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readWidths()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readVerticalDisplacements()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getDefaultWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo getCIDSystemInfo()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor loadFontDescriptor()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.util.List getWidths()",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontName()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontFamily()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontStretch()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getCharSet()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile2()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getCIDSet()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.font.PDPanose getPanose()",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:boolean hasGlyph(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Matrix getFontMatrix()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.cos.COSDictionary getCharProcs()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getWhitepoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getBlackPoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.common.PDRange getRangeForComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.cos.COSStream getMetadata()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getARange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getBRange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.cos.COSStream getDestOutputIntent()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes getGroup()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getColorKeyMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getDecode()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:java.util.List getOCGs()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSDictionary getD()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.lang.String[] getGroupNames()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtendedGraphicsState()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.cos.COSArray getBackground()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.cos.COSArray getDomain()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getExtend()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getDomain()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getCoords()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:org.apache.pdfbox.cos.COSArray getDecodeValues()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDFontSetting getFontSetting()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getFloatItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer2()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSName getSubType()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSArray getBackdropColor()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.util.List getNext()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:org.apache.pdfbox.cos.COSBase getT()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.cos.COSBase getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:org.apache.pdfbox.cos.COSArray getFields()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:org.apache.pdfbox.cos.COSStream getSound()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:float getVolume()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getSynchronous()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getRepeat()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getMix()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.cos.COSArray getFields()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getB()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getURI()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getK()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getV()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination getNamedDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getAnnotationIndex()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getAnnotationName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSArray getBorder()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float[] getLine()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionHorizontalOffset()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionVerticalOffset()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:float[] getQuadPoints()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getInkList()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getCallout()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getPath()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:float[] getQuadPoints()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary getAppearanceCharacteristics()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getNormalIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getRolloverIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getAlternateIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getDashStyle()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getSubFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getDigestMethod()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getReasons()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate getSeedValueCertificate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getLegalAttestation()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubject()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getIssuer()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getOID()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:int[] getByteRange()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement getStructureElement()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode getParent()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getOutlineItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.PDResources getDefaultResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource getXFA()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsDisplayValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getSelectedOptionsIndex()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValueFor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:int getFieldFlags()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.util.List getChildren()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue getSeedValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:int getFieldFlags()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.util.List getWidgets()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultStyleString()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getAreas()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary getMeasure()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSObject getCOSObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSObject:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:void addExcludedToList(org.apache.pdfbox.cos.COSName[],org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSObject getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRecipientsLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSString getRecipientStringAt(int)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:float[] getCoords()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.cos.COSName getRelationship()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getRectDifferences()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:float[] getRectDifferences()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getOS()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:org.apache.pdfbox.cos.COSBase getDirection()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSName:org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void setName(int,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String[])",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDictionary:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setName(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setLong(java.lang.String,long)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setFloat(java.lang.String,float)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String,long)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String,float)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(java.lang.String)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(java.lang.String)",
            "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(java.lang.String)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontStretch(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:boolean hasGlyph(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setColorantName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setOpen(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:boolean getOpen()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createProcSetArray()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.cos.PDFDocEncoding:byte[] getBytes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.util.List getFilterList()",
            "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void seek(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.File)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read()",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:long skip(long)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void rewind(int)",
            "org.apache.pdfbox.io.RandomAccessInputStream:void restorePosition()",
            "org.apache.pdfbox.io.RandomAccessInputStream:long skip(long)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkObjectKey(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(char[])",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseHeader(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getFirstTrailer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getLastTrailer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeReference(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDICCBased create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFont(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.cos.COSName:org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)",
            "org.apache.pdfbox.cos.PDFDocEncoding:byte[] getBytes(java.lang.String)",
            "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void seek(long)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(int,int)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getFirstTrailer()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:org.apache.pdfbox.cos.COSDictionary getLastTrailer()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void addObjectToWrite(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object get(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.pdmodel.common.PDPageLabelRange getPageLabelRange(int)",
            "org.apache.pdfbox.pdmodel.common.function.type4.Operators:org.apache.pdfbox.pdmodel.common.function.type4.Operator getOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.CMapManager:org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FontCache:org.apache.fontbox.FontBoxFont getFont(org.apache.pdfbox.pdmodel.font.FontInfo)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List copySubstitutes(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List getSubstitutes(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidthForCID(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getPositionVector(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getVerticalDisplacementVectorY(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:org.apache.fontbox.afm.FontMetrics getAFM(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.lang.String getMappedFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:java.lang.String getName(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String codePointToName(int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String sequenceToName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getInstance(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:java.lang.String getTextForRegion(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.text.TextPosition:java.lang.String combineDiacritic(java.lang.String)",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:java.lang.Object find(byte[])",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:void addPath(java.lang.Object,byte[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.pdmodel.common.PDPageLabelRange getPageLabelRange(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Operators:org.apache.pdfbox.pdmodel.common.function.type4.Operator getOperator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:org.apache.pdfbox.pdmodel.encryption.SecurityHandler newSecurityHandlerForFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.CMapManager:org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontCache:org.apache.fontbox.FontBoxFont getFont(org.apache.pdfbox.pdmodel.font.FontInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List copySubstitutes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.List getSubstitutes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidthForCID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getDefaultPositionVector(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:boolean hasExplicitWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:boolean hasExplicitWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getPositionVector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getPositionVector(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getVerticalDisplacementVectorY(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getDisplacement(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:boolean hasGlyph(int)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:int getGIDForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String codeToName(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.awt.geom.GeneralPath getPath(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:boolean hasGlyph(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:org.apache.fontbox.afm.FontMetrics getAFM(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.lang.String getMappedFontName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:java.lang.String getName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:float getStandard14Width(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String codeToName(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String codeToName(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String codePointToName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String sequenceToName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getInstance(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:java.awt.image.Raster getRaster(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:java.lang.String getTextForRegion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.filetypedetector.ByteTrie:java.lang.Object find(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)",
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(byte[])"
        ]
    },
    "org.apache.pdfbox.util.filetypedetector.ByteTrie:void addPath(java.lang.Object,byte[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void registerOperatorProcessor(java.lang.String,org.apache.pdfbox.contentstream.operator.OperatorProcessor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:void <init>(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:void setBoolean(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDictionary:void setName(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setString(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setInt(org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setLong(org.apache.pdfbox.cos.COSName,long)",
            "org.apache.pdfbox.cos.COSDictionary:void setFloat(org.apache.pdfbox.cos.COSName,float)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:void setDocumentID(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSStream:void setFilters(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()",
            "org.apache.pdfbox.pdmodel.PDDocument:void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getThreads()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setThreads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void <init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.pdmodel.PDPage:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setThreadBeads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",
            "org.apache.pdfbox.pdmodel.PDPage:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>()",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void sanitizeType(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(int,java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void clear()",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream createStream(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodeParms(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFileFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileDos(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileMac(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnix(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacResFork(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setRangeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setDomainValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setEncodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setDecodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setK(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setLineDashPattern(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setCryptFilterMethod(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRecipients(byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStreamFilterName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStringFilterName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPerms(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void removeV45filters()",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void setCoords(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setID(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setPages(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setDifferences(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEmbeddedFDFs(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSString)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setBefore(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setAfter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setTemplates(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:boolean buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFamily(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontStretch(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCharacterSet(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void setGamma(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:void setColorants(java.util.Map)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setAlternateColorSpaces(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setMetadata(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setDecode(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setDecode(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSDictionary buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setVisibilityPolicy(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSArray getOCGs()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSDictionary getD()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBackground(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setDomain(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setExtend(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setDomain(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setCoords(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setDecodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer2(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setNext(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setT(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setH(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFields(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSound(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFields(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setB(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setRelationship(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setBorder(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void setParent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setDashStyle(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getDashStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilter(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasons(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestation(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsage(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSubFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setByteRange(int[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContents(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setExportValues(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setChildren(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setDefaultValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setRichTextValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDuration(float)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyScale(float)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyAreaOpaque(boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)",
            "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.PDFDocEncoding:void set(int,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.PDFDocEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.filter.FilterFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FilterFactory:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void checkXrefOffsets()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void addEntry(org.apache.pdfbox.pdfwriter.COSWriterXRefEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDICCBased create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void registerOperatorProcessor(java.lang.String,org.apache.pdfbox.contentstream.operator.OperatorProcessor)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.PDFDocEncoding:void set(int,char)",
            "org.apache.pdfbox.filter.FilterFactory:void <init>()",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void seek(long)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addEntry(org.apache.pdfbox.pdfwriter.COSWriterXRefEntry)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.DefaultResourceCache:void put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$1:void newLabel(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",
            "org.apache.pdfbox.pdmodel.common.function.type4.Operators:void <init>()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.pdfbox.pdmodel.font.CMapManager:org.apache.fontbox.cmap.CMap getPredefinedCMap(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontCache:void addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readWidths()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readVerticalDisplacements()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void add(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:java.awt.Paint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void parseBidiFile(java.io.InputStream)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void addRegion(java.lang.String,java.awt.geom.Rectangle2D)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.util.filetypedetector.ByteTrie:void addPath(java.lang.Object,byte[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels$1:void newLabel(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:void setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Operators:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontCache:void addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readWidths()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readVerticalDisplacements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength1(byte[],int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength2(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.util.Matrix getFontMatrix()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void add(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void parseBidiFile(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void addRegion(java.lang.String,java.awt.geom.Rectangle2D)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:void removeItem(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupFieldCOSDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupWidgetCOSDictionary(org.apache.pdfbox.cos.COSDictionary,boolean)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDPage:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.PDPage:void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setPrefix(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setPageNumber(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationIndex(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setExportValues(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void setTopIndex(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setRichTextValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject removeObject(org.apache.pdfbox.cos.COSObjectKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void removeItem(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject removeObject(org.apache.pdfbox.cos.COSObjectKey)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:void overwrite(int,java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void removeRegion(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void removeRegion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void addXRefTable(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void checkXrefOffsets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.util.SmallMap:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean containsValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:org.apache.pdfbox.pdmodel.font.PDFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer:boolean access$500(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void strokePath()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(org.apache.pdfbox.io.RandomAccessBufferedFileInputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void createNewDocumentIfNecessary()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void check()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void unCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:java.util.List split(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDMMType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void readColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpolate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getNormalAppearanceAsContentStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void removePage(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void removePage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.color.SetColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CurveTo:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.Concatenate:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetFlatness:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetMatrix:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getValueAsString()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getCatalog()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:void setValue(byte[])",
            "org.apache.pdfbox.multipdf.Overlay$Position:org.apache.pdfbox.multipdf.Overlay$Position[] values()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode:org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode[] values()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode:org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode[] values()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType:org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType[] values()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode:org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode[] values()",
            "org.apache.pdfbox.pdmodel.PageLayout:org.apache.pdfbox.pdmodel.PageLayout[] values()",
            "org.apache.pdfbox.pdmodel.PageMode:org.apache.pdfbox.pdmodel.PageMode[] values()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$State:org.apache.pdfbox.pdmodel.common.function.type4.Parser$State[] values()",
            "org.apache.pdfbox.pdmodel.font.FontFormat:org.apache.pdfbox.pdmodel.font.FontFormat[] values()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State:org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State[] values()",
            "org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:float[] getDashArray()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:void <init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:void <init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:float[] getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState[] values()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState[] values()",
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.awt.geom.Point2D[] getFlag1Edge()",
            "org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:void <init>(java.awt.geom.Point2D,float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:void <init>(java.awt.geom.Point2D[],int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Line:void <init>(java.awt.Point,java.awt.Point,float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Patch:void <init>(java.awt.geom.Point2D[],float[][])",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:void <init>(java.awt.geom.Point2D[],float[][])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Vertex:void <init>(java.awt.geom.Point2D,float[])",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent[] values()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:org.apache.pdfbox.pdmodel.graphics.state.RenderingMode[] values()",
            "org.apache.pdfbox.pdmodel.interactive.action.OpenMode:org.apache.pdfbox.pdmodel.interactive.action.OpenMode[] values()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$TextAlign[] values()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign[] values()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension[] values()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection[] values()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion[] values()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle[] values()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY[] values()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX[] values()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE[] values()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING[] values()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION[] values()",
            "org.apache.pdfbox.printing.Orientation:org.apache.pdfbox.printing.Orientation[] values()",
            "org.apache.pdfbox.printing.Scaling:org.apache.pdfbox.printing.Scaling[] values()",
            "org.apache.pdfbox.rendering.ImageType:org.apache.pdfbox.rendering.ImageType[] values()",
            "org.apache.pdfbox.rendering.RenderDestination:org.apache.pdfbox.rendering.RenderDestination[] values()",
            "org.apache.pdfbox.util.filetypedetector.FileType:org.apache.pdfbox.util.filetypedetector.FileType[] values()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeToken(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeToken(org.apache.pdfbox.contentstream.operator.Operator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void <init>(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void <init>(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDPageTree$1)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.pdmodel.PDPage get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage getPage(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:int indexOf(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int findPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setFileFilters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setColorantNames(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setFilters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setExportValues(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setThreads(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setThreadBeads(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setAnnotations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setFilters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodeParms(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setFileDecodeParams(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void setKids(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFields(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setPages(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setAnnotations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEmbeddedFDFs(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setKids(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setOptions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setTemplates(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setFields(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setAlternateColorSpaces(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setNext(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilter(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasons(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasonsd(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestation(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsage(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setFields(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setChildren(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void addAll(java.util.Collection)",
            "org.apache.pdfbox.cos.COSArray:void addAll(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSources(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void addAll(int,java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:void setColorants(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getDecodeParms()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileDecodeParams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:java.util.Map getRoleMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.util.Map getRoleMap()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDPageLabels getPageLabels()"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void setFont(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:void setPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDPage:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.PDPage:void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.PDPage:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.PDPage:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions)",
            "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition)",
            "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setExtends(org.apache.pdfbox.pdmodel.common.PDObjectStream)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileDos(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileMac(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnix(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange)",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:void setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream()",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(int)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(byte[])",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()",
            "org.apache.pdfbox.io.RandomAccessBuffer:void clear()",
            "org.apache.pdfbox.io.RandomAccessBuffer:void expandBuffer()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.io.File)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.io.InputStream)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.Splitter:void createNewDocumentIfNecessary()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void parse()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void addXRefEntry(org.apache.pdfbox.pdfwriter.COSWriterXRefEntry)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void <init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addInteger(int)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addReal(float)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addBoolean(boolean)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:void addObject(java.lang.Object,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addText(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:void addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFontImpl(org.apache.fontbox.ttf.TrueTypeFont,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addType1Font(java.io.File)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void addSubstitute(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState parsePNGChunks(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:void addWord(org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainText$Word)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:void addWord(org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List getListItemPatterns()",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.StringBuilder normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void addRegion(java.lang.String,java.awt.geom.Rectangle2D)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:void set(int,int)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:void setRevisionNumber(java.lang.Object,int)",
            "org.apache.pdfbox.util.QuickSort:void swap(java.util.List,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(int,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.util.Map getPageIndicesByLabels()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.lang.String[] getLabelsByPageIndices()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:org.apache.pdfbox.pdmodel.font.FontMapper access$000()",
            "org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.FontMappers:org.apache.pdfbox.pdmodel.font.FontMapper instance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void setProvider(org.apache.pdfbox.pdmodel.font.FontProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:float getAverageFontWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isSymbolic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.awt.geom.GeneralPath getPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getIssuer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getOID()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.contentstream.operator.OperatorProcessor:boolean checkArrayTypesClass(java.util.List,java.lang.Class)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObjectKey getKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:void print()",
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.filter.Filter:javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()",
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.COSParser:void addNewToList(java.util.Queue,java.util.Collection,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:int[] getWEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:java.util.List getIndexEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:java.util.Set getContainedObjectNumbers(int)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void reset()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Long[] getXRefRanges(java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Set getMetadataKeys()",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:byte[][] computeRecipientsField(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.lang.String toDebugString()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.Map createFontInfoByName(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void writeTo(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions retrieveDimensions(java.io.ByteArrayInputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:javax.imageio.ImageWriter getJPEGImageWriter()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:boolean checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsDisplayValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void checkValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setDefaultValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:boolean isChecked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void check()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:java.util.Iterator iterator()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void endText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.EndText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.rendering.PageDrawer:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.rendering.PageDrawer:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setSummary(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setAlternateName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setSummary(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setHeaders(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setHeaders(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setListNumbering(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setScope(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setPlacement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWritingMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderStyles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidthAuto()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeightAuto()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBlockAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setInlineAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTBorderStyles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeightNormal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeightAuto()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setRubyAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setRubyPosition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setGlyphOrientationVertical(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:void setListNumbering(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void setCheckedState(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setScope(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderStyles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTBorderStyles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setRowSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void setColSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnCount(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setRowSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void setColSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderThicknesses(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllPaddings(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceBefore(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceAfter(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setStartIndent(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setEndIndent(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextIndent(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidth(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeight(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTPaddings(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBaselineShift(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeight(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationThickness(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGap(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllColumnWidths(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderThicknesses(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllPaddings(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceBefore(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setSpaceAfter(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setStartIndent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setEndIndent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextIndent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setWidth(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllTPaddings(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBaselineShift(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setLineHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationThickness(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGap(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllColumnWidths(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderThicknesses(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setPaddings(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTPaddings(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnGaps(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColumnWidths(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBackgroundColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setAllBorderColors(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setTextDecorationColor(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBorderColors(org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean isInfo(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean access$100(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasWidths()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasMissingWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean hasExplicitWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.PDResources getResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.PDResources pushResources(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int retrievePageNumber()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean hasXFA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean xfaIsDynamic()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.List getExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void setString(int,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setString(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:void <init>()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:void setFile(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setBefore(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setAfter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setDefaultAppearanceString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFamily(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCharacterSet(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:void setNamedDestination(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setRichTextValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addTrueTypeFont(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void access$1300(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,org.apache.fontbox.ttf.TrueTypeFont,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$1:void process(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:org.apache.fontbox.afm.FontMetrics getAFM(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:boolean containsName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.util.Set getNames()",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.lang.String getMappedFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.lang.String normalizeWord(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions createWord(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.pdfbox.text.TextPosition:void insertDiacritic(int,org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.TextPosition:void mergeDiacritic(org.apache.pdfbox.text.TextPosition)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getObjectFromPath(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:org.apache.pdfbox.cos.COSBase getAttributeValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:org.apache.pdfbox.cos.COSBase getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:boolean isSpecified(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String[] getArrayOfString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNameOrArrayOfName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNumberOrName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setInteger(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfNumber(java.lang.String,float[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getColorOrFourColors(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getWidgetFieldFlags()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState getRenderState(org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams getWinLaunchParams()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getE()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getX()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getU()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getFo()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getBl()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPV()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPI()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDActionURI getPreviousURI()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationPopup getPopup()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getInReplyTo()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDExternalDataDictionary getExternalData()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getChangeXs()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getChangeYs()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getDistances()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getAngles()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getLineSloaps()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:float[] getCoordSystemOrigin()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:org.apache.pdfbox.pdmodel.PDDocumentInformation getThreadInfo()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getFirstBead()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread getThread()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getNextBead()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getPreviousBead()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.PDPage getPage()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.util.List getFilters()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getDecode()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getColorKeyMask()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup getParent()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int findPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String[],int)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String[],long)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void sanitizeType(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean isImageXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSName getAppearanceState()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode getParent()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSDictionary getCOSDictionary(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSDictionary getEncryptionDictionary()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:org.apache.pdfbox.pdmodel.fdf.FDFPageInfo getPageInfo()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess getProcess()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getPubSec()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getApp()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP getMDP()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp getTimeStamp()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild getPropBuild()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSStream getCOSStream(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSArray getCOSArray(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSArray getDocumentID()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSArray getOCGs()",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:org.apache.pdfbox.cos.COSName getVisibilityPolicy()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageMode getPageMode()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageLayout getPageLayout()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getVersion()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTrapped()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:java.lang.String getOwner()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStructureType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.common.COSObjectable createObjectFromDic(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getSubFilter()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.fdf.FDFAnnotation create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getIntent()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getLineEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:java.lang.String getVersion()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getEncoding()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleOption()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleType()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getRegistry()",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getOrdering()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getSubType()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:boolean isNChannel()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getSubType()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:org.apache.pdfbox.pdmodel.interactive.action.PDAction createAction(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getCaptionPositioning()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getIntent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURLType()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getSubFilter()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getFieldType()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.lang.String getFieldType()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getDuplex()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getAuthor()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getKeywords()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getCreator()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getProducer()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getPrefix()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnicode()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFile()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDos()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileMac()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnix()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDescription()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getElementIdentifier()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getAlternateDescription()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getExpandedForm()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getActualText()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getFormattedValue()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getActualText()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getAlternateDescription()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getExpandedForm()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getDate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getContents()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:java.lang.String getSymbol()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getRotation()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getCaptionStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getState()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getStateModel()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getStatus()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getTarget()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getPartialFieldName()",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getInfo()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputCondition()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputConditionIdentifier()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getRegistryName()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.lang.String[] getGroupNames()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getURI()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getFilename()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getFilename()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getExecuteParam()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getModifiedDate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getAnnotationName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getTitlePopup()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultStyleString()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getState()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getStateModel()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getNormalCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getRolloverCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getAlternateCaption()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getDate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getOS()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURL()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:java.lang.String getURL()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getLocation()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getReason()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getContactInfo()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getPartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getAlternateFieldName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getMappingName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:java.lang.String getScaleRatio()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getModificationDate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.util.Calendar getSignDate()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:long getLong(org.apache.pdfbox.cos.COSName,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String,long)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:float getFloat(org.apache.pdfbox.cos.COSName,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.PDPage:float getUserUnit()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:float getGuidelineWidth()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:float getOpacity()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getFontWeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getItalicAngle()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAscent()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getDescent()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getLeading()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getCapHeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getXHeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemV()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemH()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAverageWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMaxWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMissingWidth()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getXStep()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getYStep()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineExtensionLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineOffsetLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float getConstantOpacity()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getDuration()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getFlyScale()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:boolean isEncrypted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:boolean isEncrypted()"
        ]
    },
    "org.apache.pdfbox.cos.COSObject:org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSBase getFilters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.util.List getFilterList()",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFilters()"
        ]
    },
    "org.apache.pdfbox.filter.CryptFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.CryptFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage getPage(int)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPageTree getPages()",
            "org.apache.pdfbox.pdmodel.PDDocument:int getNumberOfPages()",
            "org.apache.pdfbox.pdmodel.PDDocument:float getVersion()",
            "org.apache.pdfbox.pdmodel.PDDocument:void setVersion(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroForm(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDPageTree getPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage getPage(int)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPageTree getPages()",
            "org.apache.pdfbox.pdmodel.PDDocument:int getNumberOfPages()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences getViewerPreferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getThreads()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions getActions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary getURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDPageLabels getPageLabels()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties getOCProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void <init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode getDests()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode getEmbeddedFiles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode getJavaScript()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.util.Iterator getContentStreams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:boolean hasContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.util.List getThreadBeads()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions getActions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition getTransition()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations(org.apache.pdfbox.pdmodel.interactive.'annotation'.AnnotationFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.util.List getViewports()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:int getRotation()",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void increaseParents(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:boolean isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSObject getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSBase get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean hasColorSpace(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean isImageXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getNames(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getColorSpaceNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getXObjectNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getFontNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPropertiesNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getShadingNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPatternNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getExtGStateNames()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName createKey(org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.List getKids()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getUpperLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getLowerLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable getValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.List getKids()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.Map getNumbers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getUpperLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getLowerLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Object getValue(java.lang.Integer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream getExtends()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileFilters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSDictionary getEFDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSBase getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileDos(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileMac(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnix(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSBase getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFile()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileDos()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileMac()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnix()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnicode()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacSubtype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacCreator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacCreator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacResFork()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacResFork(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getRangeValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:int getNumberOfOutputParameters()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:float[] clipToRange(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getDecodeValues()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getDomainValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:int getNumberOfInputParameters()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int calcSampleIndex(int[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getEncodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getEncodeValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getDecodeValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getFunctions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getBounds()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getEncode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:org.apache.pdfbox.pdmodel.PDPage getPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode getParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.PDPage getPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSArray getKArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSBase getK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNameTreeNode getIDTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNumberTreeNode getParentTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.util.List getOwnerUserProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:org.apache.pdfbox.cos.COSBase getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isAttached(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isTopAttached()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isBottomAttached()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isLeftAttached()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isRightAttached()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:org.apache.pdfbox.cos.COSName getCryptFilterMethod()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerEncryptionKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserEncryptionKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:boolean isEncryptMetaData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getCryptFilterDictionary(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getStdCryptFilterDictionary()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getDefaultCryptFilterDictionary()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStreamFilterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStringFilterName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getPerms()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.Integer getPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.awt.Color getColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:java.awt.Color getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:float[] getCallout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float[] getLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getStartPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getEndPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.awt.Color getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionHorizontalOffset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionVerticalOffset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:float[] getVertices()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:java.awt.Color getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:float[] getVertices()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initStyles(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getStartPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initStyles(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getEndPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.awt.Color getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:java.awt.Color getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.fdf.FDFDictionary getFDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSArray getID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getPages()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getAnnotations()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSStream getDifferences()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getEmbeddedFDFs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.fdf.FDFJavaScript getJavaScript()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getKids()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.cos.COSBase getCOSValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetWidgetFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearWidgetFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearanceDictionary()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getAppearanceStreamReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFIconFit getIconFit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getOptions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions getAdditionalActions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.util.Map getDoc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFileSpecification()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFPage:java.util.List getTemplates()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getTemplateReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:java.util.List getFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$FF3ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getDefaultWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidthForCID(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo getCIDSystemInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor loadFontDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getAverageFontWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getAverageFontWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String toUnicode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.util.List getWidths()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.lang.String getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void addNameTag(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontFamily()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontStretch()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getCharSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$FF3ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont$FF3ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getCIDSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.font.PDPanose getPanose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:boolean hasGlyph(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Matrix getFontMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.PDResources getResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.PDResources getResources()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.cos.COSDictionary getCharProcs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:boolean hasGlyph(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getWhitepoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void <init>(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getBlackPoint()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float getGamma()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float[] toRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getGamma()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] toRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] getMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] toRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:boolean isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.common.PDRange getRangeForComponent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.cos.COSStream getMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getARange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:float[] getDefaultDecode(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getBRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setARange(org.apache.pdfbox.pdmodel.common.PDRange)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setBRange(org.apache.pdfbox.pdmodel.common.PDRange)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.cos.COSStream getDestOutputIntent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes getGroup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.util.Matrix getMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getColorKeyMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getDecode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSDictionary getD()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.lang.String[] getGroupNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean hasGroup(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.util.Matrix getMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:void intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.geom.Rectangle2D getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtendedGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:void intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.PDResources getResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.PDResources pushResources(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void <init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.geom.Rectangle2D getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.cos.COSArray getBackground()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",
            "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.util.Matrix getMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.cos.COSArray getDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getExtend()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getCoords()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:org.apache.pdfbox.cos.COSArray getDecodeValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDFontSetting getFontSetting()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getFloatItem(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getLineWidth()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getMiterLimit()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getOverprintMode()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getFlatnessTolerance()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getSmoothnessTolerance()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getStrokingAlphaConstant()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getNonStrokingAlphaConstant()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSName getSubType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSArray getBackdropColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.util.List getNext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:org.apache.pdfbox.cos.COSBase getT()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.cos.COSBase getD()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:org.apache.pdfbox.cos.COSArray getFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:org.apache.pdfbox.cos.COSStream getSound()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:float getVolume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getSynchronous()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getRepeat()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getMix()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.cos.COSArray getFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getD()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getB()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getD()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getK()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getV()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getO()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getPageNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination getNamedDestination()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getAnnotationIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getAnnotationName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSArray getBorder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.PDPage getPage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float[] getLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getStartPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getEndPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionHorizontalOffset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionVerticalOffset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:float getLineWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:float[] getQuadPoints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getInkList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getCallout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getStartPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getEndPointEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getVertices()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float[][] getPathArray(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float[][] getPathArray(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:float[] getQuadPoints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary getAppearanceCharacteristics()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:int resolveRotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions getActions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getNormalIcon()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getRolloverIcon()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getAlternateIcon()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:float getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getDashStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getSubFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getDigestMethod()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getReasons()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate getSeedValueCertificate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getLegalAttestation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeSubject(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(char,char,char,char,char,char,char,char,char)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeKeyUsage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeIssuer(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeOID(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:int[] getByteRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement getStructureElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode getParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getOutlineItem(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getPreviousSibling()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getNextSibling()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getFirstChild()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getLastChild()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.List getFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean xfaIsDynamic()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.PDResources getDefaultResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource getXFA()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:int getQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getSelectedOptionsIndex()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValueFor(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getDefaultValue()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions getActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:int getFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:int getFieldFlags()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.util.List getChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String getValueAsString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue getSeedValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:int getFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.util.List getWidgets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValue(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultStyleString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getAreas()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary getMeasure()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSObject getCOSObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.cos.COSObject:org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:void addExcludedToList(org.apache.pdfbox.cos.COSName[],org.apache.pdfbox.cos.COSDictionary,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRecipientsLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSString getRecipientStringAt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:float[] getCoords()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.cos.COSName getRelationship()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getRectDifferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:float[] getRectDifferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBorderColour()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBackground()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getOS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:org.apache.pdfbox.cos.COSBase getDirection()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void setName(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:void setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setPopup(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationPopup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInReplyTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setExternalData(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDExternalDataDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setMarked(boolean)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setUserProperties(boolean)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setSuspect(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setTrackMousePosition(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void setOpen(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setFD(boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFileDecodeParams(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfNumber(java.lang.String,float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setCoordSystemOrigin(float[])"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setRenderingIntent(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:void setN(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setReplyType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setName(org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageMode(org.apache.pdfbox.pdmodel.PageMode)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLayout(org.apache.pdfbox.pdmodel.PageLayout)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setVersion(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTrapped(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void setOwner(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setStructureType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setSubFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setIntent(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setLineEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setIcon(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setVersion(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEncoding(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void addNameTag(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setSubType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearanceState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachementName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachmentName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionPositioning(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setHighlightMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setIntent(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setLineEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setHighlightingMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void <init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setDate(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setModDate(java.util.Calendar)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCustomMetadataValue(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:void setBase(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setVersion(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setUnits(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setFractionalDisplay(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setThousandsSeparator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setDecimalSeparator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelPrefixString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelSuffixString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelPositionToValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setCheckSum(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacResFork(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setInt(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setInteger(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setDenominator(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setLong(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setSize(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setFloat(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setNumber(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:void setIntensity(float)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setConversionFactor(float)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setCYX(float)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent getRenderingIntent()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:java.lang.String getN()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getReplyType()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:java.lang.String getStyle()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.Object getPropertyStringValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getCustomMetadataValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:java.lang.String getBase()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getVersion()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getUnits()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getFractionalDisplay()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getThousandsSeparator()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getDecimalSeparator()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelPrefixString()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelSuffixString()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelPositionToValue()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getCheckSum()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacSubtype()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacCreator()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacResFork()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.util.Calendar getModDate()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean isMarked()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean usesUserProperties()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean isSuspect()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:boolean shouldTrackMousePosition()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:boolean getOpen()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:boolean isFD()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:int getSize()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:int getDenominator()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:int getInteger(java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:float getNumber(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:float getConversionFactor()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:float getCYX()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:float getNumber(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:float getIntensity()"
        ]
    },
    "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void addNameTag(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontStretch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setColorantName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setOpen(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:boolean getOpen()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getDefaultValue()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createProcSetArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.util.List getFilterList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.File)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85InputStream:int read()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:boolean readBit()",
            "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int peek()",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(char[])",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:int readCode(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read(byte[])",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:byte[] readFully(int)",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void rewind(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int peek()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseHeader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(int)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(byte[])",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:void restorePosition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessInputStream:int available()",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read()",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.io.RandomAccessInputStream:long skip(long)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean checkObjectKey(org.apache.pdfbox.cos.COSObjectKey,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long bfSearchForXRef(long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long bfSearchForXRef(long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean isString(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:long parseStartXref()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parseHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean parsePDFHeader()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseFDFHeader()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void writeReference(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFont(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getDefaultPositionVector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.util.Vector getPositionVector(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:float getWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:boolean hasExplicitWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getPositionVector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextInternal(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextInternal(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.awt.geom.GeneralPath getPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:boolean hasGlyph(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:int getGIDForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String codeToName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.awt.geom.GeneralPath getPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:boolean hasGlyph(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:float getStandard14Width(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String codeToName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getHeight(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getStringWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getNameInFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.SoftMask:void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)",
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:org.apache.pdfbox.util.filetypedetector.FileType detectFileType(byte[])",
            "org.apache.pdfbox.util.filetypedetector.FileTypeDetector:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:void <init>(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void <init>(org.apache.pdfbox.rendering.PageDrawerParameters)"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripper:void <init>()"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setBoolean(org.apache.pdfbox.cos.COSName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setVolatile(boolean)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaption(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleToFitAnnotation(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setRename(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setInterpolate(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStencil(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setInterpolate(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setStencil(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setAntiAlias(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingOverprintControl(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingOverprintControl(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAutomaticStrokeAdjustment(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAlphaSourceFlag(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTextKnockoutFlag(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSynchronous(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setRepeat(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setMix(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaption(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setOpen(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setPreRelease(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setNonEFontNoWarn(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setTrustedMode(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setNeedAppearances(java.lang.Boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideToolbar(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideMenubar(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideWindowUI(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setFitWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setCenterWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDisplayDocTitle(boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setString(org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setLanguage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setAuthor(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setKeywords(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setProducer(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setPrefix(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFile(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDos(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileMac(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnix(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDescription(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setElementIdentifier(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setLanguage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAlternateDescription(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setExpandedForm(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setActualText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setSymbol(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setStateModel(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setStatus(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setTarget(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setPartialFieldName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary toCIDSystemInfo(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:void <init>(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setInfo(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputCondition(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputConditionIdentifier(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setRegistryName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSDictionary getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void setAction(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setD(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setO(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setP(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setURI(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setFilename(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setFilename(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setDirectory(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setOperation(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setExecuteParam(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setTitlePopup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setStateModel(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setNormalCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRolloverCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setAlternateCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURL(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setURL(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setLocation(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setReason(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContactInfo(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setPartialName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setAlternateFieldName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setMappingName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setScaleRatio(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setInt(org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",
            "org.apache.pdfbox.cos.COSStream$1:void close()",
            "org.apache.pdfbox.cos.COSStream$2:void close()",
            "org.apache.pdfbox.cos.COSStream:void <init>(org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdmodel.PDPage:void setStructParents(int)",
            "org.apache.pdfbox.pdmodel.PDPage:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void increaseParents(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setNumberOfObjects(int)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setFirstByteOffset(int)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStart(int)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodedStreamLength(int)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setBitsPerSample(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setMCID(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setRevisionNumber(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTreeNextKey(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setLength(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setVersion(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setLength(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRevision(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPermissions(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPage(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setJustification(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary toCIDSystemInfo(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:void <init>(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setNumberOfComponents(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setFormType(int)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setStructParents(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStructParent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setHeight(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setWidth(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setHeight(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setWidth(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPaintType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPatternType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setPaintType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setTilingType(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setShadingType(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerFlag(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setVerticesPerRow(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerCoordinate(int)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setPageNumber(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationIndex(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setStructParent(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setQ(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setWidth(float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:void setP(int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setTimestampRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setOpenCount(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setQ(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void setTopIndex(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMaxLen(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setQ(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setLong(org.apache.pdfbox.cos.COSName,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setLong(java.lang.String,long)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setRevision(long)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setMinimumRevision(long)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setFloat(org.apache.pdfbox.cos.COSName,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setFloat(java.lang.String,float)",
            "org.apache.pdfbox.pdmodel.PDPage:void setUserUnit(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineWidth(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setOpacity(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderLength(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderExtend(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontWeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setItalicAngle(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAscent(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setDescent(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCapHeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setXHeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemV(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemH(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAverageWidth(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMaxWidth(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMissingWidth(float)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setXStep(float)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setYStep(float)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setVolume(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineExtensionLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineOffsetLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setConstantOpacity(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setWidth(float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setV(float)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void setDocumentID(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:void setFilters(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDPageTree getPages()",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void sanitizeType(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.pdmodel.PDPage get(int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void access$300(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void clear()",
            "org.apache.pdfbox.io.RandomAccessBuffer:void close()",
            "org.apache.pdfbox.io.RandomAccessBuffer:void clear()",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void clear()",
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.StringBuilder normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream createStream(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification convertCOSToPD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification createFS(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileDos(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileMac(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnix(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:void <init>(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setRangeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setDomainValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setEncodeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setDecodeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setK(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setLineDashPattern(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setCryptFilterMethod(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerEncryptionKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserEncryptionKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRecipients(byte[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStreamFilterName(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStringFilterName(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPerms(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void removeV45filters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRichContents(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setInteriorColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setCallout(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initCallout(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLine(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setInteriorColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setVertices(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void initVertices(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setInteriorColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setVertices(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initVertices(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setInteriorColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initStyles(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setInteriorColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void setCoords(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setID(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setDifferences(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setBefore(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setAfter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:boolean buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFamily(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCharacterSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void setGamma(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setMetadata(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setMatrix(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setDecode(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setDecode(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSDictionary buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setVisibilityPolicy(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSArray getOCGs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setMatrix(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBackground(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setMatrix(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setDomain(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setExtend(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setDomain(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setCoords(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setDecodeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setDecodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setDecodeValues(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineWidth(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setMiterLimit(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setOverprintMode(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFlatnessTolerance(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setSmoothnessTolerance(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingAlphaConstant(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingAlphaConstant(java.lang.Float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer2(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setT(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setH(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFields(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSound(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFields(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setB(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setRelationship(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setBorder(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLine(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setQuadPoints(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRichContents(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCallout(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setVertices(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void setParent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setQuadPoints(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setDashStyle(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilter(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setType(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setFilter(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSubFilter(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setByteRange(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContents(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroForm(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setDefaultValue(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultStyleString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setRichTextValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDuration(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyScale(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyAreaOpaque(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.cos.PDFDocEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:void <init>(java.lang.String)",
            "org.apache.pdfbox.cos.COSString:java.lang.String getString()",
            "org.apache.pdfbox.cos.PDFDocEncoding:void set(int,char)",
            "org.apache.pdfbox.cos.PDFDocEncoding:java.lang.String toString(byte[])",
            "org.apache.pdfbox.cos.PDFDocEncoding:byte[] getBytes(java.lang.String)",
            "org.apache.pdfbox.cos.PDFDocEncoding:boolean containsChar(char)",
            "org.apache.pdfbox.cos.PDFDocEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.filter.FilterFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.util.List getFilterList()",
            "org.apache.pdfbox.filter.FilterFactory:void <clinit>()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength1(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength2(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.util.Matrix getFontMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void <init>()",
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List getListItemPatterns()",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String handleDirection(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripper:void parseBidiFile(java.io.InputStream)",
            "org.apache.pdfbox.text.PDFTextStripper:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupFieldCOSDictionary(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupWidgetCOSDictionary(org.apache.pdfbox.cos.COSDictionary,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setResources(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setPageNumber(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void setTopIndex(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:org.apache.pdfbox.pdmodel.font.PDFont getFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void strokePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.StrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Splitter:void createNewDocumentIfNecessary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void unCheck()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:void setValue(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:void <init>(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptString(org.apache.pdfbox.cos.COSString,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptString(org.apache.pdfbox.cos.COSString,long,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay$Position:org.apache.pdfbox.multipdf.Overlay$Position[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay$1:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode:org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode:org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType:org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode:org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PageLayout:org.apache.pdfbox.pdmodel.PageLayout[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PageLayout:org.apache.pdfbox.pdmodel.PageLayout fromString(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PageMode:org.apache.pdfbox.pdmodel.PageMode[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PageMode:org.apache.pdfbox.pdmodel.PageMode fromString(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser$State:org.apache.pdfbox.pdmodel.common.function.type4.Parser$State[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$1:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontFormat:org.apache.pdfbox.pdmodel.font.FontFormat[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$2:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State:org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:float[] getDashArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.rendering.PageDrawer:float[] getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:void <init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:void <init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:float[] getComponents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.awt.geom.Point2D[] getFlag1Edge()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:void <init>(java.awt.geom.Point2D,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][] getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][] getPatchCoordinatesColor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:void <init>(java.awt.geom.Point2D[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.util.List getTriangles()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Line:void <init>(java.awt.Point,java.awt.Point,float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:void <init>(java.awt.geom.Point2D[],float[][])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Patch:void <init>(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:void <init>(java.awt.geom.Point2D[],float[][])",
            "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:void <init>(java.awt.geom.Point2D[],float[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:void <init>(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Patch:java.util.List getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Vertex:void <init>(java.awt.geom.Point2D,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent fromString(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:org.apache.pdfbox.pdmodel.graphics.state.RenderingMode[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.OpenMode:org.apache.pdfbox.pdmodel.interactive.action.OpenMode[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo$1:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$TextAlign[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$TextAlign valueOf(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign valueOf(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.printing.Orientation:org.apache.pdfbox.printing.Orientation[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPageable$1:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.printing.Scaling:org.apache.pdfbox.printing.Scaling[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.ImageType:org.apache.pdfbox.rendering.ImageType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.RenderDestination:org.apache.pdfbox.rendering.RenderDestination[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.filetypedetector.FileType:org.apache.pdfbox.util.filetypedetector.FileType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void <init>(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDPageTree$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:java.util.Iterator iterator()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage getPage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.printing.PDFPageable:java.awt.print.PageFormat getPageFormat(int)",
            "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int findPageNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasonsd(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFontColor(java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void addAll(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSArray getBorder()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSources(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.util.Map getRoleMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void setFont(org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:void setPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroForm(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setContents(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setExtends(org.apache.pdfbox.pdmodel.common.PDObjectStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void <init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.fdf.FDFDictionary getFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setResources(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setResources(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:void setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultResources(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void growToSize(int,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:void setFloatArray(float[])",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:void addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void <init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDRange:void <init>()",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(org.apache.fontbox.util.BoundingBox)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getEncodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfString(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfNumber(java.lang.String,float[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRecipients(byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:boolean buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getWidths(int[])",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getVerticalMetrics(int[])",
            "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void <init>(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getWhitepoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getBlackPoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:org.apache.pdfbox.cos.COSArray toCOSArray()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.cos.COSArray getDefaultRangeArray()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void <init>(float[])",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSArray getBorder()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getDashStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setByteRange(int[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createProcSetArray()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)",
            "org.apache.pdfbox.util.Matrix:org.apache.pdfbox.cos.COSArray toCOSArray()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void <init>(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream createStream(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.cos.COSStream createCOSStream()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>()",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void expandBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:void write(int)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void write(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void addXRefEntry(org.apache.pdfbox.pdfwriter.COSWriterXRefEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefTable()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:void <init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFilters()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getDecodeParms()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileFilters()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileDecodeParams()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.util.List getFilters()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.util.List getNext()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addInteger(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addReal(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addBoolean(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:void addObject(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addText(org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:void addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:void addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void addType1Font(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState parsePNGChunks(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:void addWord(org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainText$Word)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:void addWord(org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.util.List getListItemPatterns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.lang.StringBuilder normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void setInt(int,int)",
            "org.apache.pdfbox.cos.COSArray:void setName(int,java.lang.String)",
            "org.apache.pdfbox.cos.COSArray:void setString(int,java.lang.String)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteSignature()",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDRange:void setMin(float)",
            "org.apache.pdfbox.pdmodel.common.PDRange:void setMax(float)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void setLowerLeftX(float)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void setLowerLeftY(float)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void setUpperRightX(float)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void setUpperRightY(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setDefaultAppearanceString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void setFontSize(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setColorantNames(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setR(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setG(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setB(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setColorantName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setX(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setY(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setZ(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setBottom(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setRight(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setZoom(float)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void set(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void setHighValue(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:void setPageNumber(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:void setRevisionNumber(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()"
        ]
    },
    "org.apache.pdfbox.util.QuickSort:void swap(java.util.List,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.QuickSort:int partition(java.util.List,java.util.Comparator,int,int,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void add(int,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:org.apache.pdfbox.pdmodel.font.FontMapper access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMappers:org.apache.pdfbox.pdmodel.font.FontMapper instance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMappers:org.apache.pdfbox.pdmodel.font.FontMapper instance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsExportValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setDefaultValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Iterator getFieldIterator()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.EndText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:org.apache.pdfbox.text.PDFTextStripper$PositionWrapper handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:boolean access$100(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.PDResources pushResources(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int retrievePageNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean xfaIsDynamic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:boolean isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:boolean isChecked()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.List getExportValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:int getQ()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.util.List getChildren()"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void setString(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:void setFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setOption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:void setDefaultAppearanceString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:void setNamedDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$1:void process(org.apache.fontbox.ttf.TrueTypeFont)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:boolean containsName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.Standard14Fonts:java.util.Set getNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions createWord(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.StringBuilder normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)"
        ]
    },
    "org.apache.pdfbox.text.TextPosition:void mergeDiacritic(org.apache.pdfbox.text.TextPosition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getObjectFromPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:org.apache.pdfbox.cos.COSBase getAttributeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:org.apache.pdfbox.cos.COSBase getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:boolean isSpecified(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String[] getArrayOfString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String[] getHeaders()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String[] getHeaders()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNameOrArrayOfName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderStyle()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getTBorderStyle()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNumberOrName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getWidth()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getHeight()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getLineHeight()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getNumberOrArrayOfNumber(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderThickness()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getPadding()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getTPadding()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getColumnGap()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getColumnWidths()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getBackgroundColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getTextDecorationColor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getColorOrFourColors(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderColors()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getWidgetFieldFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState getRenderState(org.apache.pdfbox.rendering.RenderDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams getWinLaunchParams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getX()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getU()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getFo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getBl()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPO()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPC()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPV()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWC()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWP()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDP()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDActionURI getPreviousURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationPopup getPopup()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getInReplyTo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDExternalDataDictionary getExternalData()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getChangeXs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getChangeYs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getDistances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getAngles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getLineSloaps()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:float[] getCoordSystemOrigin()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:org.apache.pdfbox.pdmodel.PDDocumentInformation getThreadInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getFirstBead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread getThread()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getNextBead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead getPreviousBead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.PDPage getPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean getInterpolate()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean isStencil()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getHeight()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getWidth()"
        ]
    },
    "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.util.List getFilters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.lang.String getSuffix()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getDecode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getColorKeyMask()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup getParent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String[],long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:boolean isImageXObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSName getAppearanceState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSDictionary getEncryptionDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFPage:org.apache.pdfbox.pdmodel.fdf.FDFPageInfo getPageInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess getProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getPubSec()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getApp()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP getMDP()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp getTimeStamp()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild getPropBuild()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSArray getDocumentID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:java.util.List access$200(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:org.apache.pdfbox.cos.COSName getVisibilityPolicy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:java.lang.String getGuidelineStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:java.lang.String getAttachmentName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:java.lang.String getHighlightMode()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getLineEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:java.lang.String getHighlightingMode()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getDimension()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getMotion()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getNonFullScreenPageMode()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getReadingDirection()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewArea()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewClip()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintArea()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintClip()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintScaling()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageMode getPageMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageLayout getPageLayout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:float getVersion()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTrapped()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.String next()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:java.lang.String getOwner()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:boolean isEmpty()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStructureType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStandardStructureType()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode getParent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.common.COSObjectable createObjectFromDic(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.lang.Object createObject(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getSubFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.fdf.FDFAnnotation create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getAnnotations()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getIntent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getLineEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:java.lang.String getVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getEncoding()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleOption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:java.lang.String getBaseFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:void <init>(org.apache.pdfbox.pdmodel.font.PDCIDFontType0)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getRegistry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getOrdering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getSubType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.lang.String getBaseFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.lang.String getName()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String getBaseFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getBaseFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getName()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getBaseFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getName()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:boolean isNChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:boolean isNChannel()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getSubType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:org.apache.pdfbox.pdmodel.interactive.action.PDAction createAction(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()",
            "org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript convertCOSToPD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.util.Map getDoc()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.util.List getNext()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getE()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getX()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getU()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getFo()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getBl()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPV()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getPI()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getWP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getDP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getK()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getV()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:java.lang.String getS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:java.lang.String getS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:java.lang.String getS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getS()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations(org.apache.pdfbox.pdmodel.interactive.'annotation'.AnnotationFilter)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getInReplyTo()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup getParent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getCaptionPositioning()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getIntent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.lang.String getFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURLType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getSubFilter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getFieldType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.lang.String getFieldType()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.lang.String getFieldType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getDuplex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(org.apache.pdfbox.cos.COSName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getOperation()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.lang.String getDefaultAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getAuthor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getSubject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getKeywords()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getCreator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getProducer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.String next()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnicode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDos()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileMac()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDescription()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getElementIdentifier()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getLanguage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getAlternateDescription()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getExpandedForm()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getActualText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getFormattedValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getActualText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getAlternateDescription()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getExpandedForm()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getSubject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:java.lang.String getSymbol()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getRotation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultAppearance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getCaptionStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getState()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getStateModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getStatus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getPartialFieldName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputCondition()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputConditionIdentifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getRegistryName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getF()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getD()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getO()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getP()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getFilename()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getFilename()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getDirectory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getExecuteParam()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getModifiedDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getAnnotationName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getTitlePopup()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getSubject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultStyleString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getState()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getStateModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getNormalCaption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getRolloverCaption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getAlternateCaption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:java.lang.String getURL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getLocation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getReason()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getContactInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getPartialName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getFullyQualifiedName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getAlternateFieldName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getMappingName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:java.lang.String getScaleRatio()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getModificationDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.util.Calendar getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.util.Calendar getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.util.Calendar getSignDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:long getLong(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getRevision()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getMinimumRevision()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:float getFloat(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderLength()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderExtend()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderOffset()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:float getV()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:float getUserUnit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:float getGuidelineWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:float getOpacity()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getFontWeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getItalicAngle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAscent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getDescent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getLeading()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getCapHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getXHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemV()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemH()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAverageWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMaxWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMissingWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getXStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.geom.Rectangle2D getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getYStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.geom.Rectangle2D getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineExtensionLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineOffsetLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float getConstantOpacity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getDuration()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getFlyScale()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:boolean isEncrypted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()",
            "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFilters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.lang.String getSuffix()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPageTree getPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.pdmodel.PDDocument:void addPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:void removePage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:void removePage(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:int getNumberOfPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$2:void newLabel(int,java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.util.Map getPageIndicesByLabels()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:java.lang.String[] getLabelsByPageIndices()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)",
            "org.apache.pdfbox.printing.PDFPageable:int getNumberOfPages()",
            "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:float getVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.PDDocument:void setVersion(float)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void setVersion(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroForm(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.PDResources getResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.PDResources pushResources(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.awt.geom.AffineTransform calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void initPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void transform(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.PDPage,float,float)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:int getRotation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void transform(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.PDPage,float,float)",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:boolean hasColorSpace(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:boolean isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getColorSpaceNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getXObjectNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getFontNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPropertiesNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getShadingNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPatternNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getExtGStateNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileDos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileMac()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnix()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnicode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:int getNumberOfOutputParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:void <init>(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0,float[],int[],int[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:float[] clipToRange(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:int getNumberOfInputParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int calcSampleIndex(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.util.Map getRoleMap()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isTopAttached()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isBottomAttached()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isLeftAttached()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isRightAttached()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getStdCryptFilterDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getDefaultCryptFilterDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initStyles(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:float getAverageFontWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String toUnicode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:java.lang.String getGlyphName(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.lang.String getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void addNameTag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.util.Matrix getMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.PDResources getResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:org.apache.pdfbox.pdmodel.PDResources pushResources(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void <init>(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:boolean isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:float[] getDefaultDecode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] getDefaultDecode(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setARange(org.apache.pdfbox.pdmodel.common.PDRange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setBRange(org.apache.pdfbox.pdmodel.common.PDRange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean hasGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:java.awt.geom.Rectangle2D getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getMiterLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getOverprintMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getFlatnessTolerance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getSmoothnessTolerance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getStrokingAlphaConstant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getNonStrokingAlphaConstant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:float getLineWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:float[][] getPathArray(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:int resolveRotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getNormalAppearanceAsContentStream(boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(char,char,char,char,char,char,char,char,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCountForAddedChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void switchNodeCount()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:boolean hasNext()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem next()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getFirstChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode$1:java.util.Iterator iterator()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:boolean hasChildren()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getLastChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBorderColour()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBackground()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void setFitBoundingBox(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setFitBoundingBox(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setFitBoundingBox(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:void setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:void setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setPopup(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationPopup)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInReplyTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setExternalData(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDExternalDataDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setMarked(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setUserProperties(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:void setSuspect(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setTrackMousePosition(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void setOpen(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setFD(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setCoordSystemOrigin(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setRenderingIntent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:void setN(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setReplyType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:void setStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageMode(org.apache.pdfbox.pdmodel.PageMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLayout(org.apache.pdfbox.pdmodel.PageLayout)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void setVersion(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTrapped(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void setOwner(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setStructureType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void <init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void <init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setSubFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setIntent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setLineEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setIcon(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleOption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setSubType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void setS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearanceState(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachementName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachmentName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionPositioning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setHighlightMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setIntent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setLineEndingStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.util.List getWidgets()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setHighlightingMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void setSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode getParent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void setSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void <init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setCreationDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setModDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCustomMetadataValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:void setBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setUnits(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setFractionalDisplay(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setThousandsSeparator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setDecimalSeparator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelPrefixString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelSuffixString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setLabelPositionToValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setCheckSum(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setDenominator(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:void setIntensity(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void setConversionFactor(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setCYX(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getScope()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getRole()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String getScope()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent getRenderingIntent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:java.lang.String getN()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getListNumbering()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getPlacement()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getWritingMode()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getTextAlign()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getBlockAlign()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getInlineAlign()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getTextDecorationType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getRubyAlign()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getRubyPosition()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getGlyphOrientationVertical()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String getListNumbering()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getCheckedState()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getReplyType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.Object getPropertyStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getCustomMetadataValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getSummary()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getAlternateName()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String getSummary()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:java.lang.String getBase()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getUnits()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getFractionalDisplay()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getThousandsSeparator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getDecimalSeparator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelPrefixString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelSuffixString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:java.lang.String getLabelPositionToValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getCheckSum()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.util.Calendar getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.util.Calendar getModDate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean isMarked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean usesUserProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:boolean isSuspect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:boolean shouldTrackMousePosition()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:boolean getOpen()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:boolean isFD()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:int getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:int getDenominator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:int getInteger(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:int getRowSpan()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:int getColSpan()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:int getColumnCount()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:int getRowSpan()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:int getColSpan()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:float getNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getTextDecorationThickness()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:float getConversionFactor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:float getCYX()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:float getNumber(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getSpaceBefore()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getSpaceAfter()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getStartIndent()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getEndIndent()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getTextIndent()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getBaselineShift()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:float getIntensity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor loadFontDescriptor()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.ASCII85InputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85InputStream:int read()",
            "org.apache.pdfbox.filter.ASCII85InputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:boolean readBit()",
            "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:int readCode(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:boolean readBit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decode2D()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType4()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int peek()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:boolean isEOF()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int peek()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85InputStream:int read()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:boolean readBit()",
            "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:int readCode(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:boolean readUntilEndOfCOSDictionary()",
            "org.apache.pdfbox.pdfparser.BaseParser:void skipWhiteSpaces()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSHexString()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString()",
            "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedString(char[],boolean)",
            "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedChar(char)",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString(int)",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readLine()",
            "org.apache.pdfbox.pdfparser.BaseParser:void skipSpaces()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.StringBuilder readStringNumber()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.String readOperator()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int readCode(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:int readCode(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:int readCode(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:int readCode(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(java.io.InputStream)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:byte[] readFully(int)",
            "org.apache.pdfbox.io.ScratchFile:org.apache.pdfbox.io.RandomAccess createBuffer(java.io.InputStream)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getConvertedContents(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:boolean readUntilEndOfCOSDictionary()",
            "org.apache.pdfbox.pdfparser.BaseParser:void skipWhiteSpaces()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString(int)",
            "org.apache.pdfbox.pdfparser.BaseParser:void skipSpaces()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.StringBuilder readStringNumber()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.BaseParser:int readInt()",
            "org.apache.pdfbox.pdfparser.BaseParser:long readLong()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:void unread(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:int checkForEndOfString(int)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNoFollowingBinData(org.apache.pdfbox.pdfparser.SequentialSource)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:int available()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long bfSearchForXRef(long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long calculateXRefFixedOffset(long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long parseStartXref()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parsePDFHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parseFDFHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:void intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showText(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask:void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void <init>(org.apache.pdfbox.rendering.PageDrawerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:org.apache.pdfbox.rendering.PageDrawer createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripperByArea:void <init>()"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setVolatile(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaption(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleToFitAnnotation(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setRename(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setInterpolate(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStencil(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setInterpolate(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setStencil(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setAntiAlias(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingOverprintControl(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingOverprintControl(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAutomaticStrokeAdjustment(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAlphaSourceFlag(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTextKnockoutFlag(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSynchronous(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setRepeat(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setMix(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaption(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setPreRelease(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setNonEFontNoWarn(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setTrustedMode(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setNeedAppearances(java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideToolbar(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideMenubar(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideWindowUI(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setFitWindow(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setCenterWindow(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDisplayDocTitle(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:void setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName,java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setModificationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSignDate(java.util.Calendar)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setLanguage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setAuthor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setSubject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setKeywords(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setProducer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnicode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDos(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileMac(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDescription(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setElementIdentifier(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setLanguage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAlternateDescription(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setExpandedForm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setActualText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setContents(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setSubject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultAppearance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setState(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setStateModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setStatus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setPartialFieldName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary toCIDSystemInfo(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:void <init>(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputCondition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputConditionIdentifier(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setRegistryName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void setAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setD(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setO(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setP(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setFilename(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setFilename(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setDirectory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setOperation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setExecuteParam(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setContents(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setTitlePopup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setSubject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultAppearance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultStyleString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setState(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setStateModel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setNormalCaption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRolloverCaption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setAlternateCaption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setReason(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContactInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultAppearance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDefaultValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setPartialName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setAlternateFieldName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setMappingName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDefaultValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultAppearance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setScaleRatio(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setInvisible(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPrinted(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoZoom(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoRotate(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoView(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLocked(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setToggleNoView(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLockedContents(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setInvisible(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPrinted(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoZoom(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoRotate(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoView(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLocked(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setToggleNoView(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLockedContents(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilterRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilterRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethodRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setVRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasonRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestationRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setAddRevInfoRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuerRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOIDRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDNRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsageRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setItalic(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setBold(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setSignaturesExist(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setAppendOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setPushButton(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setRadioButton(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSort(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setMultiSelect(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDoNotSpellCheck(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCommitOnSelChange(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCombo(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void setEdit(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setNoExport(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void setRadiosInUnison(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMultiline(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setPassword(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setFileSelect(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotSpellCheck(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotScroll(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setComb(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setRichText(boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream$2:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:void <init>(org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream()",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSStream:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setStructParents(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setRotation(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setNumberOfObjects(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setFirstByteOffset(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStart(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodedStreamLength(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setBitsPerSample(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setMCID(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setRevisionNumber(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void incrementRevisionNumber()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTreeNextKey(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setVersion(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRevision(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPermissions(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setJustification(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setRotation(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlags(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlagBit(int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setNumberOfComponents(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setFormType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setStructParents(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStructParent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setBitsPerComponent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setHeight(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setBitsPerComponent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setWidth(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPaintType(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPatternType(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setPaintType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setTilingType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setShadingType(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerFlag(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setVerticesPerRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerComponent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setBitsPerComponent(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerCoordinate(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerCoordinate(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setBitsPerCoordinate(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFlags(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationFlags(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setStructParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRotation(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:void setP(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setTimestampRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setOpenCount(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void switchNodeCount()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setFieldFlags(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMaxLen(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setQ(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setRevision(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setMinimumRevision(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPage:void setUserUnit(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setOpacity(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderLength(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderExtend(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderOffset(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontWeight(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setItalicAngle(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAscent(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setDescent(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCapHeight(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setXHeight(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemV(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemH(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAverageWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMaxWidth(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMissingWidth(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setXStep(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setYStep(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setVolume(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineLength(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineExtensionLength(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineOffsetLength(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setConstantOpacity(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setV(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int findPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:void access$300(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:org.apache.pdfbox.pdmodel.PDPage next()"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void setFloatArray(float[])",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void clear()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream$1:void close()",
            "org.apache.pdfbox.cos.COSOutputStream:void close()",
            "org.apache.pdfbox.cos.COSStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:void close()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void close()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification createFS(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getEmbeddedFDFs()",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFileSpecification()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initCallout(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void initVertices(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void initVertices(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setDecodeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setDecodeValues(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineWidth(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setMiterLimit(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setOverprintMode(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFlatnessTolerance(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setSmoothnessTolerance(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingAlphaConstant(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingAlphaConstant(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationPopup getPopup()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSName:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSArray:void setName(int,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String[])",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDictionary:void setName(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setName(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:void setString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedString(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void setInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setLong(java.lang.String,long)",
            "org.apache.pdfbox.cos.COSDictionary:void setEmbeddedInt(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:void setFloat(java.lang.String,float)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,java.lang.String,java.util.Calendar)",
            "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:long getLong(java.lang.String,long)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:float getFloat(java.lang.String,float)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSBase getItem(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:boolean containsKey(java.lang.String)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(java.lang.String)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:boolean isEncrypted()",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSDictionary getEncryptionDictionary()",
            "org.apache.pdfbox.cos.COSDocument:void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSArray getDocumentID()",
            "org.apache.pdfbox.cos.COSDocument:void setDocumentID(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getCatalog()",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSName:org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)",
            "org.apache.pdfbox.cos.COSName:void <init>(java.lang.String,boolean)",
            "org.apache.pdfbox.cos.COSName:void clearResources()",
            "org.apache.pdfbox.cos.COSName:void <clinit>()",
            "org.apache.pdfbox.cos.COSStream$1:void close()",
            "org.apache.pdfbox.cos.COSStream$2:void close()",
            "org.apache.pdfbox.cos.COSStream:void <init>(org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.cos.COSStream:java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSStream:long getLength()",
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSBase getFilters()",
            "org.apache.pdfbox.cos.COSStream:void setFilters(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CryptFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CryptFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.FilterFactory:void <init>()",
            "org.apache.pdfbox.filter.FilterFactory:org.apache.pdfbox.filter.Filter getFilter(java.lang.String)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",
            "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.Predictor:java.io.OutputStream wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupFieldCOSDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void cleanupWidgetCOSDictionary(org.apache.pdfbox.cos.COSDictionary,boolean)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void checkPages(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfparser.FDFParser:boolean isCatalog(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,boolean)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination convertCOSToPD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()",
            "org.apache.pdfbox.pdmodel.PDDocument:void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDPageTree getPages()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences getViewerPreferences()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getThreads()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setThreads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageMode getPageMode()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageMode(org.apache.pdfbox.pdmodel.PageMode)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageLayout getPageLayout()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLayout(org.apache.pdfbox.pdmodel.PageLayout)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary getURI()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setLanguage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.lang.String getVersion()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setVersion(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.common.PDPageLabels getPageLabels()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels)",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties getOCProperties()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getAuthor()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setAuthor(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getKeywords()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setKeywords(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getCreator()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getProducer()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setProducer(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Calendar getModificationDate()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setModificationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.lang.String getTrapped()",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setTrapped(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void <init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode getDests()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode getEmbeddedFiles()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode getJavaScript()",
            "org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:void setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode)",
            "org.apache.pdfbox.pdmodel.PDPage:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.Iterator getContentStreams()",
            "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.PDPage:boolean hasContents()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.PDPage:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.PDPage:int getStructParents()",
            "org.apache.pdfbox.pdmodel.PDPage:void setStructParents(int)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()",
            "org.apache.pdfbox.pdmodel.PDPage:void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:void setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:void setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()",
            "org.apache.pdfbox.pdmodel.PDPage:void setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.PDPage:int getRotation()",
            "org.apache.pdfbox.pdmodel.PDPage:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getThreadBeads()",
            "org.apache.pdfbox.pdmodel.PDPage:void setThreadBeads(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.PDPage:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.PDPage:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition getTransition()",
            "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition)",
            "org.apache.pdfbox.pdmodel.PDPage:void setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getAnnotations(org.apache.pdfbox.pdmodel.interactive.'annotation'.AnnotationFilter)",
            "org.apache.pdfbox.pdmodel.PDPage:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:java.util.List getViewports()",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:float getUserUnit()",
            "org.apache.pdfbox.pdmodel.PDPage:void setUserUnit(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>()",
            "org.apache.pdfbox.pdmodel.PDPageTree:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageTree:java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void sanitizeType(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:int getCount()",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void increaseParents(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean hasColorSpace(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtGState(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getProperties(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean isImageXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDResources:boolean isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getColorSpaceNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getXObjectNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getFontNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPropertiesNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getShadingNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getPatternNames()",
            "org.apache.pdfbox.pdmodel.PDResources:java.lang.Iterable getExtGStateNames()",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDResources:void put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void calculateLimits()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getUpperLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setUpperLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getLowerLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setLowerLimit(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.util.Map getNumbers()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getUpperLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:java.lang.Integer getLowerLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream createStream(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getNumberOfObjects()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setNumberOfObjects(int)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getFirstByteOffset()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setFirstByteOffset(int)",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:org.apache.pdfbox.pdmodel.common.PDObjectStream getExtends()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:void setExtends(org.apache.pdfbox.pdmodel.common.PDObjectStream)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void <clinit>()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:int getLength()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFilters()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getDecodeParms()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodeParms(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileFilters()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setFileFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.util.List getFileDecodeParams()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.common.PDStream:int getDecodedStreamLength()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void setDecodedStreamLength(int)",
            "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.cos.COSDictionary getEFDictionary()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnicode()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFile()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFile(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDos()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDos(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileMac()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileMac(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileUnix()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileUnix(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setVolatile(boolean)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:boolean isVolatile()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFile()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileDos()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileDos(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileMac()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileMac(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnix()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnix(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile getEmbeddedFileUnicode()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:void setFileDescription(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFileDescription()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacSubtype()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacCreator()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacCreator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:java.lang.String getMacResFork()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void setMacResFork(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setRangeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:void setDomainValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getRangeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray getDomainValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getSize()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getBitsPerSample()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getOrder()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setBitsPerSample(int)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getEncodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:org.apache.pdfbox.cos.COSArray getDecodeValues()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setEncodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:void setDecodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getFunctions()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getBounds()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:org.apache.pdfbox.cos.COSArray getEncode()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:java.lang.String getOwner()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:void setOwner(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:void setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:int getMCID()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:void setMCID(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void <init>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:void setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getStructureType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setStructureType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode getParent()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getElementIdentifier()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setElementIdentifier(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void removeClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:int getRevisionNumber()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setRevisionNumber(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setLanguage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getAlternateDescription()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setAlternateDescription(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getExpandedForm()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setExpandedForm(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:java.lang.String getActualText()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void setActualText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:org.apache.pdfbox.pdmodel.common.COSObjectable createObjectFromDic(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSArray getKArray()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.cos.COSBase getK()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setK(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNameTreeNode getIDTree()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:org.apache.pdfbox.pdmodel.common.PDNumberTreeNode getParentTree()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:int getParentTreeNextKey()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setParentTreeNextKey(int)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:java.util.Map getRoleMap()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.util.List getOwnerUserProperties()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:org.apache.pdfbox.cos.COSBase getValue()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String getFormattedValue()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:int getMCID()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getLanguage()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getActualText()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getAlternateDescription()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:java.lang.String getExpandedForm()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:float getGuidelineWidth()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineWidth(float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:java.lang.String getGuidelineStyle()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuidelineStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setLineDashPattern(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:boolean isAttached(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:void setArrayOfName(java.lang.String,java.lang.String[])",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setLength(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:int getLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:void setCryptFilterMethod(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:org.apache.pdfbox.cos.COSName getCryptFilterMethod()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:java.lang.String getSubFilter()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setSubFilter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setVersion(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getVersion()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setLength(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRevision(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRevision()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getOwnerEncryptionKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getUserEncryptionKey()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPermissions(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getPermissions()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:boolean isEncryptMetaData()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRecipients(byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRecipientsLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSString getRecipientStringAt(int)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getStdCryptFilterDictionary()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getDefaultCryptFilterDictionary()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary getCryptFilterDictionary(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStreamFilterName()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStreamFilterName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.cos.COSName getStringFilterName()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setStringFilterName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPerms(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:byte[] getPerms()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void removeV45filters()",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptString(org.apache.pdfbox.cos.COSString,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.fdf.FDFAnnotation create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.Integer getPage()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPage(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.awt.Color getColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getDate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isInvisible()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setInvisible(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isPrinted()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPrinted(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoZoom()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoZoom(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoRotate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoRotate(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoView()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoView(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLocked()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLocked(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isToggleNoView()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setToggleNoView(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLockedContents()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLockedContents(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getContents()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setOpacity(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:float getOpacity()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setIntent(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getIntent()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void setSymbol(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:java.lang.String getSymbol()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:float[] getCallout()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setJustification(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getJustification()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getRotation()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setDefaultStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getDefaultStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setLineEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getLineEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float[] getLine()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaption(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:boolean getCaption()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderLength()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderLength(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderExtend()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderExtend(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderOffset()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLeaderOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:java.lang.String getCaptionStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionHorizontalOffset()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getCaptionVerticalOffset()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:java.awt.Color getInteriorColor()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSArray parseArrayElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseDictElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setIcon(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getIcon()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getState()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getStateModel()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:void setStateModel(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void setCoords(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:float[] getCoords()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:java.lang.String getVersion()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setVersion(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.fdf.FDFDictionary getFDF()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()",
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSArray getID()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setID(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getStatus()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setStatus(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getPages()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setPages(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getEncoding()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEncoding(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getAnnotations()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setAnnotations(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.cos.COSStream getDifferences()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setDifferences(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.lang.String getTarget()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setTarget(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:java.util.List getEmbeddedFDFs()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setEmbeddedFDFs(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:org.apache.pdfbox.pdmodel.fdf.FDFJavaScript getJavaScript()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFCatalog getCatalog()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getPartialFieldName()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setPartialFieldName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.cos.COSBase getCOSValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getSetWidgetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setSetWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Integer getClearWidgetFieldFlags()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setClearWidgetFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearanceDictionary()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getAppearanceStreamReference()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.fdf.FDFIconFit getIconFit()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions getAdditionalActions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSString)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setRichText(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleOption()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:java.lang.String getScaleType()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange)",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:boolean shouldScaleToFitAnnotation()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:void setScaleToFitAnnotation(boolean)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setBefore(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setAfter(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.util.Map getDoc()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFileSpecification()",
            "org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:void setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:java.util.List getTemplates()",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setTemplates(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:org.apache.pdfbox.pdmodel.fdf.FDFPageInfo getPageInfo()",
            "org.apache.pdfbox.pdmodel.fdf.FDFPage:void setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference getTemplateReference()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:boolean shouldRename()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:void setRename(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readWidths()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:void readVerticalDisplacements()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getDefaultWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo getCIDSystemInfo()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary toCIDSystemInfo(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSDictionary createCIDFont()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void addNameTag(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:boolean buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:void <init>(java.lang.String,java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getRegistry()",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String getOrdering()",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:int getSupplement()",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.pdmodel.font.PDFontDescriptor loadFontDescriptor()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String getSubType()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.util.List getWidths()",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void <init>()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontName()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontFamily()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFamily(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getFontWeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontWeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontStretch()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontStretch(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:int getFlags()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getItalicAngle()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setItalicAngle(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAscent()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAscent(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getDescent()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setDescent(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getLeading()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getCapHeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCapHeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getXHeight()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setXHeight(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemV()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemV(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getStemH()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setStemH(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getAverageWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAverageWidth(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMaxWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMaxWidth(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasWidths()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean hasMissingWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:float getMissingWidth()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setMissingWidth(float)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getCharSet()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCharacterSet(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile2()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getFontFile3()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDStream getCIDSet()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.font.PDPanose getPanose()",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getBaseFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:boolean hasGlyph(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Matrix getFontMatrix()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.cos.COSDictionary getCharProcs()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.font.PDType3CharProc getCharProc(int)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void applyDifferences()",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeMap()",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeNamesMap()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getWhitepoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus getBlackPoint()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:void setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:float getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void setGamma(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getGamma()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:float[] getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void setMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess getProcess()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:boolean isNChannel()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:void setColorants(java.util.Map)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:int getNumberOfComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.common.PDRange getRangeForComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.cos.COSStream getMetadata()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setNumberOfComponents(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setAlternateColorSpaces(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void setMetadata(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getARange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getBRange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.cos.COSStream getDestOutputIntent()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getInfo()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setInfo(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputCondition()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputCondition(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getOutputConditionIdentifier()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setOutputConditionIdentifier(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:java.lang.String getRegistryName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void setRegistryName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void setColorantName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getFormType()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setFormType(int)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes getGroup()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getStructParents()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setStructParents(int)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isIsolated()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isKnockout()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getStructParent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStructParent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getColorKeyMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getHeight()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setHeight(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getWidth()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setWidth(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean getInterpolate()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setInterpolate(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setDecode(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSArray getDecode()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean isStencil()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setStencil(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.lang.String getSuffix()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSBase toLongName(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getHeight()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setHeight(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getWidth()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setWidth(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean getInterpolate()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setInterpolate(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.util.List getFilters()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setFilters(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setDecode(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getDecode()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean isStencil()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void setStencil(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSArray getColorKeyMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.lang.String getSuffix()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSDictionary buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSName mapPNGRenderIntent(int)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:java.util.List getOCGs()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:org.apache.pdfbox.cos.COSName getVisibilityPolicy()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setVisibilityPolicy(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSArray getOCGs()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.cos.COSDictionary getD()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:void setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.lang.String[] getGroupNames()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPaintType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setPatternType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState getExtendedGraphicsState()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:void setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setPaintType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getPaintType()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setTilingType(int)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getTilingType()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setXStep(float)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getXStep()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setYStep(float)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:float getYStep()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.PDResources getResources()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setShadingType(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBackground(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.cos.COSArray getBackground()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setAntiAlias(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:boolean getAntiAlias()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.shading.PDShading create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:void setFunction(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.util.Matrix getMatrix()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:org.apache.pdfbox.cos.COSArray getDomain()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:void setDomain(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getExtend()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setExtend(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getDomain()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setDomain(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:org.apache.pdfbox.cos.COSArray getCoords()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:void setCoords(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerFlag()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerFlag(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getVerticesPerRow()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setVerticesPerRow(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerCoordinate()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setBitsPerCoordinate(int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:org.apache.pdfbox.cos.COSArray getDecodeValues()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:void setDecodeValues(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getLineWidth()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineWidth(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineCapStyle()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineJoinStyle()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getMiterLimit()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setMiterLimit(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getLineDashPattern()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getStrokingOverprintControl()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingOverprintControl(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getNonStrokingOverprintControl()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingOverprintControl(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getOverprintMode()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setOverprintMode(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.PDFontSetting getFontSetting()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getFlatnessTolerance()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setFlatnessTolerance(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getSmoothnessTolerance()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setSmoothnessTolerance(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAutomaticStrokeAdjustment()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAutomaticStrokeAdjustment(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getStrokingAlphaConstant()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setStrokingAlphaConstant(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:java.lang.Float getNonStrokingAlphaConstant()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setNonStrokingAlphaConstant(java.lang.Float)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAlphaSourceFlag()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setAlphaSourceFlag(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getTextKnockoutFlag()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTextKnockoutFlag(boolean)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.cos.COSBase getTransfer2()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setTransfer2(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSName getSubType()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.cos.COSArray getBackdropColor()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.lang.String getSubType()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setSubType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:java.util.List getNext()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void setNext(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:org.apache.pdfbox.pdmodel.interactive.action.PDAction createAction(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:org.apache.pdfbox.cos.COSBase getT()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setT(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:boolean getH()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void setH(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void setAction(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setD(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setO(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:java.lang.String getP()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setP(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:boolean shouldOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.cos.COSBase getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:boolean shouldOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:org.apache.pdfbox.pdmodel.interactive.action.OpenMode getOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:org.apache.pdfbox.cos.COSArray getFields()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFields(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:int getFlags()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSound(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:org.apache.pdfbox.cos.COSStream getSound()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setVolume(float)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:float getVolume()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setSynchronous(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getSynchronous()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setRepeat(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getRepeat()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void setMix(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:boolean getMix()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:org.apache.pdfbox.cos.COSArray getFields()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFields(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:int getFlags()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void setFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setD(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:org.apache.pdfbox.cos.COSBase getB()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void setB(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getS()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:java.lang.String getURI()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void setURI(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getD()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:void setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getK()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getF()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getV()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getC()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:void setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:org.apache.pdfbox.pdmodel.interactive.action.PDAction getO()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:void setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.cos.COSName getRelationship()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setRelationship(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getFilename()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setFilename(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory getTargetDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setPageNumber(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination getNamedDestination()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:int getAnnotationIndex()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationIndex(int)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getAnnotationName()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:void setAnnotationName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getFilename()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setFilename(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getDirectory()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setDirectory(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getOperation()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setOperation(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getExecuteParam()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:void setExecuteParam(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getAnnotationFlags()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSName getAppearanceState()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearanceState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isInvisible()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setInvisible(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isPrinted()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPrinted(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoZoom()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoZoom(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoRotate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoRotate(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoView()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoView(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLocked()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLocked(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isToggleNoView()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setToggleNoView(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLockedContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLockedContents(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getModifiedDate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getAnnotationName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setAnnotationName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getStructParent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setStructParent(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList getOptionalContent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.cos.COSArray getBorder()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setBorder(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.PDPage getPage()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:java.lang.String getAttachmentName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachementName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void setAttachmentName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float[] getLine()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaption(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:boolean getCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineExtensionLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineExtensionLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getLeaderLineOffsetLength()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLeaderLineOffsetLength(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:java.lang.String getCaptionPositioning()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionPositioning(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionHorizontalOffset()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:float getCaptionVerticalOffset()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:java.lang.String getHighlightMode()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setHighlightMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:float[] getQuadPoints()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getTitlePopup()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setTitlePopup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float getConstantOpacity()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setConstantOpacity(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRichContents(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.util.Calendar getCreationDate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCreationDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getSubject()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setSubject(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getIntent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setIntent(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setLineEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getLineEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getInkList()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getDefaultStyleString()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setQ(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getRectDifferences()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getCallout()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setStartPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getStartPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setEndPointEndingStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getEndPointEndingStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[] getVertices()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:float[][] getPath()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:void setParent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup getParent()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderEffect(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderEffectDictionary getBorderEffect()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setRectDifferences(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:float[] getRectDifferences()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setOpen(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:boolean getOpen()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getState()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setState(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getStateModel()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void setStateModel(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:float[] getQuadPoints()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:java.lang.String getHighlightingMode()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setHighlightingMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary getAppearanceCharacteristics()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setBorderStyle(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:void setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:int getRotation()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRotation(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBorderColour()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getBackground()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getNormalCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setNormalCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getRolloverCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setRolloverCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:java.lang.String getAlternateCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setAlternateCaption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getNormalIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getRolloverIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getAlternateIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:void setDownAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setWidth(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:void setDashStyle(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern getDashStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getType()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getPubSec()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict getApp()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:void setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getDate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setDate(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getRevision()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setRevision(long)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getMinimumRevision()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setMinimumRevision(long)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getPreRelease()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setPreRelease(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:java.lang.String getOS()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setOS(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getNonEFontNoWarn()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setNonEFontNoWarn(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getTrustedMode()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:void setTrustedMode(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isFilterRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilterRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isSubFilterRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilterRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isDigestMethodRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethodRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isVRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setVRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isReasonRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasonRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isLegalAttestationRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestationRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isAddRevInfoRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setAddRevInfoRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getSubFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilter(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getDigestMethod()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:float getV()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setV(float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getReasons()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasons(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP getMDP()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate getSeedValueCertificate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp getTimeStamp()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getLegalAttestation()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestation(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isIssuerRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuerRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isOIDRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOIDRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectDNRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDNRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isKeyUsageRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsageRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isURLRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubject()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsage(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeKeyUsage(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getIssuer()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getOID()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURL()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURL(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.lang.String getURLType()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLType(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:int getP()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:void setP(int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:java.lang.String getURL()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setURL(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:boolean isTimestampRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:void setTimestampRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSubFilter(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setLocation(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setReason(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContactInfo(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSignDate(java.util.Calendar)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getSubFilter()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getLocation()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getReason()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.lang.String getContactInfo()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:java.util.Calendar getSignDate()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setByteRange(int[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:int[] getByteRange()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContents(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild getPropBuild()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createProcSetArray()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int findPageNumber()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:int indexOfPageTree(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getPreviousSibling()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getNextSibling()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:java.lang.String getTitle()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTitle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination getDestination()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.interactive.action.PDAction getAction()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement getStructureElement()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isItalic()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setItalic(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isBold()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setBold(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode getParent()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getFirstChild()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getLastChild()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:int getOpenCount()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void setOpenCount(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.List getFields()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean getNeedAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setNeedAppearances(java.lang.Boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.PDResources getDefaultResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setDefaultResources(org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean hasXFA()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource getXFA()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setQ(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isSignaturesExist()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setSignaturesExist(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isAppendOnly()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setAppendOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isPushButton()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setPushButton(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isRadioButton()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setRadioButton(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.List getExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setExportValues(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void checkValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByOption(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void unCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getOptionsDisplayValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getSelectedOptionsIndex()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isSort()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSort(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isMultiSelect()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setMultiSelect(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isDoNotSpellCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDoNotSpellCheck(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCommitOnSelChange()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCommitOnSelChange(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCombo()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCombo(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:boolean isEdit()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void setEdit(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setReadOnly(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setRequired(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isRequired()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setNoExport(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isNoExport()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setFieldFlags(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions getActions()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:org.apache.pdfbox.pdmodel.interactive.form.PDField findKid(java.lang.String[],int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getPartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setPartialName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getAlternateFieldName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setAlternateFieldName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getMappingName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setMappingName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:int getTopIndex()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void setTopIndex(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:int getFieldFlags()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.util.List getChildren()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setChildren(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getFieldType()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.cos.COSBase getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void setDefaultValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void setRadiosInUnison(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:boolean isRadiosInUnison()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue getSeedValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:int getFieldFlags()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.lang.String getFieldType()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:java.util.List getWidgets()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isMultiline()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMultiline(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isPassword()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setPassword(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isFileSelect()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setFileSelect(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotSpellCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotSpellCheck(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotScroll()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotScroll(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isComb()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setComb(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isRichText()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setRichText(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:int getMaxLen()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMaxLen(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDefaultValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultAppearance(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultStyleString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setDefaultStyleString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setQ(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:void setRichTextValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:java.lang.String getSubtype()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:void setSubtype(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:java.lang.String getScaleRatio()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setScaleRatio(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[] getAreas()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:java.lang.String getName()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary getMeasure()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:void setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void <init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getDimension()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getMotion()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:org.apache.pdfbox.cos.COSBase getDirection()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getDuration()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDuration(float)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:float getFlyScale()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyScale(float)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:boolean isFlyAreaOpaque()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setFlyAreaOpaque(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection$1:org.apache.pdfbox.cos.COSBase getCOSBase()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideToolbar()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideToolbar(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideMenubar()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideMenubar(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideWindowUI()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setHideWindowUI(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean fitWindow()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setFitWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean centerWindow()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setCenterWindow(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean displayDocTitle()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDisplayDocTitle(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getNonFullScreenPageMode()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setNonFullScreenPageMode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getReadingDirection()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setReadingDirection(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewArea()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewClip()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setViewClip(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintArea()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintClip()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getDuplex()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX)",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintScaling()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:void setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:java.lang.String getString(int,java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getString(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.cos.COSString:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.cos.COSString:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List convertCOSStringCOSArrayToList(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:java.lang.String getFile()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.util.List getOptions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:java.lang.String getOption()",
            "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:java.lang.String getDefaultAppearanceString()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getFontFamily()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:java.lang.String getCharSet()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:java.lang.String getAnnotationName()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:java.lang.String getNamedDestination()",
            "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.List getExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValueFor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getDefaultStyleString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.util.DateConverter:java.util.Calendar toCalendar(org.apache.pdfbox.cos.COSString)"
        ]
    },
    "org.apache.pdfbox.cos.PDFDocEncoding:java.lang.String toString(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:java.lang.String getString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.StrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.cos.COSString:org.apache.pdfbox.cos.COSString parseHex(java.lang.String)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setOwnerEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setUserEncryptionKey(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setRecipients(byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:void setPerms(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeSubject(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeIssuer(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void addOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void removeOID(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setContents(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptString(org.apache.pdfbox.cos.COSString,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptString(org.apache.pdfbox.cos.COSString,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay$1:void <clinit>()",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PageLayout:org.apache.pdfbox.pdmodel.PageLayout fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageLayout getPageLayout()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PageMode:org.apache.pdfbox.pdmodel.PageMode fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.PageMode getPageMode()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void tokenize()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$2:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$2:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getWidths(int[])",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getVerticalMetrics(int[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:float[] getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.BasicStroke getStroke()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(java.awt.Color)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(java.awt.Color)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][] getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.util.List getTriangles()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][] getPatchCoordinatesColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:java.util.List getTriangles()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.util.List getTriangles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:void <init>(java.awt.geom.Point2D[],float[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:void <init>(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch generatePatch(java.awt.geom.Point2D[],float[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:void <init>(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch generatePatch(java.awt.geom.Point2D[],float[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Patch:java.util.List getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:java.util.List getTriangles()",
            "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:java.util.List getTriangles()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent getRenderingIntent()"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDTextState:void <init>()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:org.apache.pdfbox.pdmodel.graphics.state.RenderingMode[] values()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:org.apache.pdfbox.pdmodel.graphics.state.RenderingMode fromInt(int)",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isFill()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isStroke()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isClip()",
            "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:void <clinit>()",
            "org.apache.pdfbox.rendering.PageDrawer:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$TextAlign valueOf(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$Builder:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$Builder textAlign(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$1:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$TextAlign valueOf(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$Builder:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$Builder textAlign(int)"
        ]
    },
    "org.apache.pdfbox.printing.PDFPageable$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPageable$1:void <clinit>()",
            "org.apache.pdfbox.printing.PDFPageable:java.awt.print.PageFormat getPageFormat(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.printing.PDFPageable:java.awt.print.PageFormat getPageFormat(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFontColor(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setDestination(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void <init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void growToSize(int,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void growToSize(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void setFloatArray(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void setInteriorColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:void setCoords(float[])",
            "org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:org.apache.pdfbox.cos.COSArray toCOSArray()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setLine(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionHorizontalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setCaptionVerticalOffset(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInkList(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCallout(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setVertices(float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void setQuadPoints(float[])",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void setCoordSystemOrigin(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRange:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.common.PDRange getRangeForComponent(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>()",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(float,float)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(org.apache.fontbox.util.BoundingBox)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBBox()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:java.lang.Object getColorOrFourColors(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getWidths(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.cos.COSArray getVerticalMetrics(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:org.apache.pdfbox.cos.COSArray toCOSArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:void setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:void setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.cos.COSArray getDefaultRangeArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getARange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:org.apache.pdfbox.pdmodel.common.PDRange getBRange()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:void <init>(org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void <init>(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.Matrix:org.apache.pdfbox.cos.COSArray toCOSArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void <init>(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.cos.COSStream createCOSStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getDownAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getRolloverAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSOutputStream:void write(int)",
            "org.apache.pdfbox.io.RandomAccessOutputStream:void write(int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(java.io.InputStream)",
            "org.apache.pdfbox.io.RandomAccessBuffer:void write(byte[])",
            "org.apache.pdfbox.io.RandomAccessOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void addSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.CharSequence)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:void setInt(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setUpperLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setLowerLimit(java.lang.Integer)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setBottom(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setRight(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setTop(int)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRange:void setMin(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRange:void setMax(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:org.apache.pdfbox.pdmodel.common.PDRange getFractionalSpaceToAllocate()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void setLowerLeftX(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void setLowerLeftY(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void setUpperRightX(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void setUpperRightY(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:void setFontSize(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setR(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setG(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDGamma:void setB(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setX(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setY(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:void setZ(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setLeft(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setLeft(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setBottom(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setRight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setTop(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setTop(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setLeft(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setTop(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setZoom(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void setHighValue(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:void setPageNumber(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.QuickSort:int partition(java.util.List,java.util.Comparator,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.QuickSort:void quicksort(java.util.List,java.util.Comparator)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Iterator getFieldIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:org.apache.pdfbox.text.PDFTextStripper$PositionWrapper handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:boolean isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getAdobeGlyphList()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getZapfDingbats()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getEmbeddedDate(java.lang.String,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String[] getHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String[] getHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getTBorderStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getLineHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderThickness()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getPadding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getTPadding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getColumnGap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getColumnWidths()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getBackgroundColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.graphics.color.PDGamma getTextDecorationColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.Object getBorderColors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:void appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:boolean getBoolean(java.lang.String,boolean)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.JPXFilter:java.awt.image.BufferedImage readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:boolean isVolatile()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:boolean getCaption()",
            "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:boolean shouldScaleToFitAnnotation()",
            "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:boolean shouldRename()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isIsolated()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isKnockout()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean getInterpolate()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean isStencil()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:boolean getAntiAlias()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getStrokingOverprintControl()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getNonStrokingOverprintControl()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAutomaticStrokeAdjustment()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAlphaSourceFlag()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getTextKnockoutFlag()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:boolean getH()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:boolean shouldOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:boolean shouldOpenInNewWindow()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:boolean getCaption()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:boolean getOpen()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getPreRelease()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getNonEFontNoWarn()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getTrustedMode()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean getNeedAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:boolean isFlyAreaOpaque()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideToolbar()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideMenubar()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideWindowUI()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean fitWindow()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean centerWindow()",
            "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean displayDocTitle()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean getInterpolate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:boolean isStencil()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",
            "org.apache.pdfbox.cos.COSDictionary:int getEmbeddedInt(java.lang.String,org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDictionary:int getInt(java.lang.String,int)",
            "org.apache.pdfbox.cos.COSDictionary:boolean getFlag(org.apache.pdfbox.cos.COSName,int)",
            "org.apache.pdfbox.cos.COSStream:long getLength()",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.Predictor:java.io.OutputStream wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:int getCount()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getNumberOfObjects()",
            "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getFirstByteOffset()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:int getStart()",
            "org.apache.pdfbox.pdmodel.common.PDStream:int getLength()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getOrder()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:int getRevisionNumber()",
            "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:int getLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getVersion()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getLength()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRevision()",
            "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getPermissions()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getJustification()",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:int getFlags()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean hasExplicitWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getFormType()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getPaintType()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getTilingType()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.shading.PDShading create(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerFlag()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getVerticesPerRow()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerCoordinate()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:int getFlags()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:int getFlags()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getAnnotationFlags()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:int getQ()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:int getRotation()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:boolean isTimestampRequired()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:int getOpenCount()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:int getTopIndex()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getBitsPerComponent()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getBitsPerComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.Rectangle clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:int getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:int getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.Rectangle clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:int getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.lang.String getSuffix()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:java.util.List access$200(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:java.lang.String getGuidelineStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:java.lang.String getIcon()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:java.lang.String getAttachmentName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:java.lang.String getHighlightMode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getLineEndingStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:java.lang.String getHighlightingMode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.AnnotationBorder getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:java.lang.String getSubtype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getDimension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:java.lang.String getMotion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getNonFullScreenPageMode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getReadingDirection()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewArea()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getViewClip()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintArea()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintClip()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:java.lang.String getPrintScaling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.String next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.Object next()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.lang.Object createObject(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.rendering.CIDType0Glyph2D:void <init>(org.apache.pdfbox.pdmodel.font.PDCIDFontType0)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap loadUnicodeCmap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength1(byte[],int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength2(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.rendering.PageDrawer:org.apache.pdfbox.rendering.Glyph2D createGlyph2D(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)",
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:boolean isNChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:java.lang.String getOperation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.lang.String getDefaultAppearance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void extractFontDetails(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:java.lang.String getFilename()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getFullyQualifiedName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void checkValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String getFullyQualifiedName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getRevision()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:long getMinimumRevision()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderExtend()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:float getLeaderOffset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:float getV()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.lang.String getSuffix()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PageExtractor:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PageExtractor:void <init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels$2:void newLabel(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)"
        ]
    },
    "org.apache.pdfbox.printing.PDFPageable:int getNumberOfPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPageable:java.awt.print.Printable getPrintable(int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:java.awt.geom.AffineTransform calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()"
        ]
    },
    "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPageable:java.awt.print.PageFormat getPageFormat(int)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void initPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPageable:java.awt.print.PageFormat getPageFormat(int)",
            "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void transform(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.PDPage,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:void <init>(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0,float[],int[],int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:java.lang.String getGlyphName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:boolean hasGlyph(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:int codeToGID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:boolean hasGlyph(int)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:int codeToGID(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] getDefaultDecode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] getDefaultDecode(int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCountForAddedChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void switchNodeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void openNode()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void closeNode()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode$1:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsScaling(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,int)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:boolean hasChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:void <init>(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getNormalIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getRolloverIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject getAlternateIcon()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDAction:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getScope()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getRole()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String getScope()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getListNumbering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getPlacement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getWritingMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getTextAlign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getBlockAlign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getInlineAlign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getTextDecorationType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getRubyAlign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getRubyPosition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String getGlyphOrientationVertical()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String getListNumbering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getCheckedState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String getSummary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String getAlternateName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String getSummary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:int getRowSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:int getColSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:int getColumnCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:int getRowSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:int getColSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getTextDecorationThickness()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getSpaceBefore()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getSpaceAfter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getStartIndent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getEndIndent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getTextIndent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:float getBaselineShift()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85InputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decode2D()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType4()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType6()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType4()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRow()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decode1D()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decode2D()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:boolean isEOF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessInputStream:int read()",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:boolean isEOF()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int peek()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()",
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.BaseParser:boolean isClosing()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readLine()",
            "org.apache.pdfbox.pdfparser.BaseParser:boolean isEOL()",
            "org.apache.pdfbox.pdfparser.BaseParser:boolean isWhitespace()",
            "org.apache.pdfbox.pdfparser.BaseParser:boolean isSpace()",
            "org.apache.pdfbox.pdfparser.BaseParser:boolean isDigit()",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.String readOperator()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNextSpaceOrReturn()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean readUntilEndOfCOSDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void skipWhiteSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSHexString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:long parseStartXref()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedString(char[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedString(java.lang.String)",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkObjectKey(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedChar(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSName parseCOSName()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseHeader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void skipSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()",
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString()",
            "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedString(char[],boolean)",
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readString(int)",
            "org.apache.pdfbox.pdfparser.BaseParser:int readInt()",
            "org.apache.pdfbox.pdfparser.BaseParser:long readLong()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)",
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:long parseStartXref()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.String readOperator()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:java.lang.StringBuilder readStringNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:int readInt()",
            "org.apache.pdfbox.pdfparser.BaseParser:long readLong()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.String readOperator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.IdentityFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.IdentityFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.io.IOUtils:byte[] toByteArray(java.io.InputStream)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:java.io.File createTmpFile(java.io.InputStream)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteIncrement()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeExternalSignature(byte[])",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.PDStream:byte[] toByteArray()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.io.ScratchFile:org.apache.pdfbox.io.RandomAccess createBuffer(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getConvertedContents(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getContents(byte[])"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:int readInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:int readGenerationNumber()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:long readLong()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:long readObjectNumber()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:long parseStartXref()",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long calculateXRefFixedOffset(long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSString:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void showTextWithPositioning(java.lang.Object[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void showText(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:org.apache.pdfbox.rendering.PageDrawer createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setCreationDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocumentInformation:void setModificationDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setCreationDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setModifiedDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void setCreationDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:void setSignDate(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setInvisible(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setHidden(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setPrinted(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoZoom(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoRotate(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setNoView(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLocked(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setToggleNoView(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void setLockedContents(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setInvisible(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setHidden(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setPrinted(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoZoom(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoRotate(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setNoView(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLocked(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setToggleNoView(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:void setLockedContents(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setFilterRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setSubFilterRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethodRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setVRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setReasonRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setLegalAttestationRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setAddRevInfoRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuerRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOIDRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDNRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setKeyUsageRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setURLRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setItalic(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:void setBold(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setSignaturesExist(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setAppendOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setPushButton(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setRadioButton(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSort(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setMultiSelect(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setDoNotSpellCheck(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCommitOnSelChange(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setCombo(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void setEdit(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setRequired(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void setNoExport(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:void setRadiosInUnison(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setMultiline(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setPassword(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setFileSelect(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotSpellCheck(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setDoNotScroll(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setComb(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setRichText(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void <init>()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSDictionary parseStampAnnotationAppearanceXML(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.cos.COSStream createCOSStream()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void incrementRevisionNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlagBit(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFixedPitch(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSerif(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSymbolic(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setScript(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setNonSymbolic(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setItalic(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAllCap(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSmallCap(boolean)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setForceBold(boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerComponent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setBitsPerComponent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:void setBitsPerCoordinate(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:void setBitsPerCoordinate(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:org.apache.pdfbox.pdmodel.PDPage next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:java.lang.Object next()"
        ]
    },
    "org.apache.pdfbox.cos.COSInputStream$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSOutputStream:void close()",
            "org.apache.pdfbox.filter.CCITTFaxFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.font.Standard14Fonts:void addAFM(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.awt.color.ICC_Profile getICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getConvertedContents(java.io.InputStream)",
            "org.apache.pdfbox.text.PDFTextStripper:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.cos.COSName:void clearResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:long getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean isEmpty()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor:java.io.OutputStream wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.LZWFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:int getStructParents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageTree:int getCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:int getNumberOfPages()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getNumberOfObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDObjectStream:int getFirstByteOffset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getStyle()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStyle(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:int getStart()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setStart(int)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:java.lang.String getPrefix()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void setPrefix(java.lang.String)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:void <clinit>()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void <init>(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:int getDecodedStreamLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:boolean isVolatile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getBitsPerSample()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:int[][] getSamples()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getOrder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:int getMCID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:int getRevisionNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void addClassName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void incrementRevisionNumber()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:int getParentTreeNextKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isHidden()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:int getMCID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:int getLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getRevision()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.PDEncryption:int getPermissions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isInvisible()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isHidden()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isPrinted()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoZoom()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoRotate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoView()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLocked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isToggleNoView()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLockedContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:java.lang.String getJustification()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:boolean getCaption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFIconFit:boolean shouldScaleToFitAnnotation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFTemplate:boolean shouldRename()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:int getSupplement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void fetchCMapUCS2()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:int getFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isFlagBitOn(int)",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFlagBit(int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:org.apache.pdfbox.cos.COSBase getCOSObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:void add(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSArray:void set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.cos.COSDictionary:void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean add(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:void add(int,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void setValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeNamesMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:int getNumberOfComponents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:float[] getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] getDefaultDecode(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.common.PDRange getRangeForComponent(int)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:int getColorSpaceType()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void readColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSDictionary buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDLab:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getFormType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getStructParents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isIsolated()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:boolean isKnockout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getStructParent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getBitsPerComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getHeight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.Rectangle clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:int getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.Rectangle clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:int getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean getInterpolate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean isStencil()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.cos.COSBase toLongName(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.cos.COSName mapPNGRenderIntent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState[] values()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState valueOf(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState getRenderState(org.apache.pdfbox.rendering.RenderDestination)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState[] values()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern getPattern(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getPaintType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:int getTilingType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:boolean getAntiAlias()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.shading.PDShading create(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:org.apache.pdfbox.pdmodel.graphics.shading.PDShading getShading()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerFlag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getVerticesPerRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerComponent()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getBitsPerComponent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:int getBitsPerCoordinate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerCoordinate()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getBitsPerCoordinate()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineCapStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineJoinStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getStrokingOverprintControl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getNonStrokingOverprintControl()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getNonStrokingOverprintControl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAutomaticStrokeAdjustment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getAlphaSourceFlag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:boolean getTextKnockoutFlag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask create(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask getSoftMask()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:boolean getH()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:boolean shouldOpenInNewWindow()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:boolean shouldOpenInNewWindow()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:int getFlags()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:int getFlags()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getAnnotationFlags()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isInvisible()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isHidden()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isPrinted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoZoom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoRotate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoView()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void constructAppearances()",
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLocked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isToggleNoView()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLockedContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getStructParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:boolean getCaption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:int getQ()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:int getRotation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:int resolveRotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:void constructAppearances(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getPreRelease()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getNonEFontNoWarn()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:boolean getTrustedMode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isFilterRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isSubFilterRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isDigestMethodRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isVRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isReasonRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isLegalAttestationRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isAddRevInfoRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isIssuerRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isOIDRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectDNRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isKeyUsageRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isURLRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:int getP()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:boolean isTimestampRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isItalic()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isBold()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:int getOpenCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCountForAddedChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void switchNodeCount()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:boolean isNodeOpen()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean getNeedAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isSignaturesExist()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isAppendOnly()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isPushButton()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isRadioButton()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isSort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setOptions(java.util.List,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isMultiSelect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isDoNotSpellCheck()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCommitOnSelChange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCombo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:boolean isEdit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isRequired()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isNoExport()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:int getTopIndex()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:boolean isRadiosInUnison()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isMultiline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean isMultiLine()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean shallComb()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isPassword()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean shallComb()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isFileSelect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean shallComb()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotSpellCheck()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotScroll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isComb()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean shallComb()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isRichText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:int getMaxLen()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:boolean isFlyAreaOpaque()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection$1:org.apache.pdfbox.cos.COSBase getCOSBase()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:void setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideToolbar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideMenubar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean hideWindowUI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean fitWindow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean centerWindow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:boolean displayDocTitle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:java.lang.String getString(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:java.lang.String getString(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:boolean removeObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:int indexOf(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSArray:int indexOfObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:boolean isValueChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:void attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:void insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:boolean removeKid(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.util.SmallMap$SmallMapEntry:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findKey(java.lang.Object)",
            "org.apache.pdfbox.util.SmallMap:int findValue(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSString:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:java.lang.String getValueAsString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List convertCOSStringCOSArrayToList(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.List getExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:java.util.List getValueFor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:java.lang.String getFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:java.lang.String getOption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:java.lang.String getDefaultAppearanceString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:java.lang.String getNamedDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination)"
        ]
    },
    "org.apache.pdfbox.util.DateConverter:java.util.Calendar toCalendar(org.apache.pdfbox.cos.COSString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.util.Calendar getDate(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSString:org.apache.pdfbox.cos.COSString parseHex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSHexString()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getConvertedContents(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void tokenize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void access$100(org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.BasicStroke getStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void strokePath()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFontColor(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFontColor(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <clinit>()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:org.apache.pdfbox.pdmodel.graphics.color.PDColor getGuidelineColor()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:org.apache.pdfbox.pdmodel.graphics.color.PDColor extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:org.apache.pdfbox.pdmodel.graphics.color.PDColor getTextColor()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFontColor(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDPattern:org.apache.pdfbox.pdmodel.graphics.color.PDColor getInitialColor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:java.util.List getTriangles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:void <init>(java.awt.geom.Point2D[],float[][])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch generatePatch(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch generatePatch(java.awt.geom.Point2D[],float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDTextState:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:org.apache.pdfbox.pdmodel.graphics.state.RenderingMode fromInt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isFill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:boolean isClip()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter$Builder:org.apache.pdfbox.pdmodel.interactive.'annotation'.layout.PlainTextFormatter$Builder textAlign(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$Builder:org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter$Builder textAlign(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSArray:void growToSize(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setBottom(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setRight(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:void setFitBoundingBox(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void <init>()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setLeft(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setTop(int)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:void setZoom(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <init>(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle handleBorderBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.cos.COSOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)",
            "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)",
            "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSOutputStream:void write(byte[])",
            "org.apache.pdfbox.io.RandomAccessOutputStream:void write(byte[])"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:void token(java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void scanToken()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:void setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.util.QuickSort:void quicksort(java.util.List,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.util.QuickSort:void sort(java.util.List,java.util.Comparator)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getAdobeGlyphList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getZapfDingbats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:int getInt(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:java.io.OutputStream wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdmodel.PDPage:int getStructParents()",
            "org.apache.pdfbox.pdmodel.PDPageTree:void remove(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void add(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageTree:void increaseParents(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDStream:int getDecodedStreamLength()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int getBitsPerSample()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:int getMCID()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:int getParentTreeNextKey()",
            "org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:int getMCID()",
            "org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:int getSupplement()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:int getNumberOfComponents()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:int getStructParents()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getStructParent()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getHeight()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:int getWidth()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineCapStyle()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:int getLineJoinStyle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:int getStructParent()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:int getP()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:int getMaxLen()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:boolean getFlag(org.apache.pdfbox.cos.COSName,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isInvisible()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isPrinted()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoZoom()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoRotate()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isNoView()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLocked()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isToggleNoView()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:boolean isLockedContents()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isInvisible()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isHidden()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isPrinted()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoZoom()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoRotate()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isNoView()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLocked()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isToggleNoView()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:boolean isLockedContents()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isFilterRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isSubFilterRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isDigestMethodRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isVRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isReasonRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isLegalAttestationRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:boolean isAddRevInfoRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isIssuerRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isOIDRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isSubjectDNRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isKeyUsageRequired()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:boolean isURLRequired()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isItalic()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:boolean isBold()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isSignaturesExist()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean isAppendOnly()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isPushButton()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:boolean isRadioButton()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isSort()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isMultiSelect()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isDoNotSpellCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCommitOnSelChange()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:boolean isCombo()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:boolean isEdit()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isReadOnly()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isRequired()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:boolean isNoExport()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:boolean isRadiosInUnison()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isMultiline()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isPassword()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isFileSelect()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotSpellCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean doNotScroll()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isComb()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:boolean isRichText()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabelRange:int getStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.String next()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.Rectangle clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:int getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.contentstream.operator.OperatorProcessor:boolean checkArrayTypesClass(java.util.List,java.lang.Class)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObjectKey getKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:void print()",
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.filter.Filter:javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()",
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.COSParser:void addNewToList(java.util.Queue,java.util.Collection,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:int[] getWEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:java.util.List getIndexEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:java.util.Set getContainedObjectNumbers(int)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void reset()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Long[] getXRefRanges(java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Set getMetadataKeys()",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:byte[][] computeRecipientsField(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.lang.String toDebugString()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.Map createFontInfoByName(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void writeTo(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions retrieveDimensions(java.io.ByteArrayInputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:javax.imageio.ImageWriter getJPEGImageWriter()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:boolean checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.util.Map getNames()"
        ]
    },
    "org.apache.pdfbox.multipdf.PageExtractor:void <init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.printing.PDFPageable:java.awt.print.Printable getPrintable(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:java.awt.geom.GeneralPath getPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:boolean hasGlyph(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:boolean hasGlyph(int)",
            "org.apache.pdfbox.rendering.CIDType0Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:java.awt.geom.GeneralPath getPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:boolean hasGlyph(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:boolean hasGlyph(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:int codeToGID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:int getGIDForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void openNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void closeNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:void <init>(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType6()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRow()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void fetch()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decode1D()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType2()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType4()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:boolean isEOF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:java.lang.String readLine()",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean isClosing()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean isEOL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean isWhitespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefTables()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean isSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:boolean isDigit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForXRefStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseXrefTable(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNextSpaceOrReturn()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void readExpectedString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.IdentityFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CryptFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.IdentityFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CryptFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:byte[] toByteArray(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:byte[] toByteArray()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteIncrement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void writeExternalSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteSignature()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void setSignature(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] computeOwnerPassword(byte[],byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptString(org.apache.pdfbox.cos.COSString,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptString(org.apache.pdfbox.cos.COSString,long,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:int readGenerationNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkObjectKey(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:long readObjectNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkObjectKey(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjects()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForLastEOFMarker()",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.cos.COSString:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setFixedPitch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSerif(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSymbolic(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setScript(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setNonSymbolic(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setItalic(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setAllCap(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setSmallCap(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:void setForceBold(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.contentstream.operator.OperatorProcessor:boolean checkArrayTypesClass(java.util.List,java.lang.Class)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.cos.COSDictionary:void addAll(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:void mergeInto(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDictionary:java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObject getObjectByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:java.util.List getObjectsByType(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.cos.COSDocument:org.apache.pdfbox.cos.COSObjectKey getKey(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.cos.COSDocument:void print()",
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.cos.COSStream:boolean equals(java.lang.Object)",
            "org.apache.pdfbox.filter.Filter:javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)",
            "org.apache.pdfbox.io.RandomAccessBuffer:org.apache.pdfbox.io.RandomAccessBuffer clone()",
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlayDocuments(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:java.util.Map getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeFields(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDField,org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.multipdf.Splitter:void processPages()",
            "org.apache.pdfbox.multipdf.Splitter:void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.COSParser:void addNewToList(java.util.Queue,java.util.Collection,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateXrefOffsets(java.util.Map)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void addTrailerInfo(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:int[] getWEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:java.util.List getIndexEntry()",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void setStartxref(long)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:java.util.Set getContainedObjectNumbers(int)",
            "org.apache.pdfbox.pdfparser.XrefTrailerResolver:void reset()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void prepareIncrement(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Long[] getXRefRanges(java.util.List)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.util.List)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDDocument:boolean checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:java.util.List getOutputIntents()",
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:void setOutputIntents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDDocumentInformation:java.util.Set getMetadataKeys()",
            "org.apache.pdfbox.pdmodel.PDPage:void setContents(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPage:void setViewports(java.util.List)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:void enqueueKids(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDPageTree:org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.PDPageTree:boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:java.util.List toCOSObjectList(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean removeAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSArrayList:boolean retainAll(java.util.Collection)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.cos.COSDictionary convert(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.COSDictionaryMap:org.apache.pdfbox.pdmodel.common.COSDictionaryMap convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setKids(java.util.List)",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:void setNames(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:void setNumbers(java.util.Map)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:org.apache.pdfbox.cos.COSBase getCOSObject()",
            "org.apache.pdfbox.pdmodel.common.PDPageLabels:void computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.util.List getAttributeNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getAttributes()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions getClassNames()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:java.util.List getKids()",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:void setRoleMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:void setUserProperties(java.util.List)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:byte[][] computeRecipientsField(byte[])",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:void setInkList(java.util.List)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:java.util.List getInkList()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:void setDoc(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void scanFonts(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.lang.String toDebugString()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:void <init>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.Map createFontInfoByName(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.util.PriorityQueue getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:float getAverageFontWidth()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildWidths(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildVerticalMetrics(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isStandard14()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:void writeTo(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:void <init>(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding fromFontBox(org.apache.fontbox.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:void <init>(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.util.List getComponents()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions retrieveDimensions(java.io.ByteArrayInputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:javax.imageio.ImageWriter getJPEGImageWriter()",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:java.io.InputStream getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:boolean checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:void setOCGs(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:java.util.Collection getOptionalContentGroups()",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(java.lang.String)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(java.lang.String,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:boolean setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:java.util.Map getSubDictionary()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:void setDigestMethod(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubject(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getSubjectDN()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setSubjectDN(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getKeyUsage()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setIssuer(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:void setOID(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:java.util.List getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:java.util.List getPairableItems(org.apache.pdfbox.cos.COSBase,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void setCacheFields(boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:java.util.Map buildPagesWidgetsMap(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void removeFields(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.util.Set getOnValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:java.lang.String getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void updateByValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:java.lang.String getOnValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void updateSelectedOptionsIndex(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:void enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:org.apache.pdfbox.pdmodel.fdf.FDFField exportFDF()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:java.util.List getSelectedExportValues()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:java.lang.String generatePartialName()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void setWidgets(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText:void <init>(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void endTextClip()",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary)",
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripper:void fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.text.PDFTextStripper:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripper:java.util.List normalize(java.util.List)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void processTextPosition(org.apache.pdfbox.text.TextPosition)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void writePage()",
            "org.apache.pdfbox.util.SmallMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.awt.color.ICC_Profile getICCProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void init()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isFlagBitOn(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isFixedPitch()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSerif()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isScript()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isNonSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isItalic()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isAllCap()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSmallCap()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isForceBold()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:java.awt.Composite getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$13:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$14:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$15:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$16:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getInstance(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void getSaturationRGB(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void getLuminosityRGB(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeMap()",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:java.util.Map createBlendModeNamesMap()",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$000(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$100(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void <clinit>()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:org.apache.pdfbox.pdmodel.graphics.blend.BlendMode getBlendMode()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode)",
            "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.rendering.PDFRenderer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer:boolean hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:java.lang.String toString()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:int getColorSpaceType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState valueOf(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState getRenderState(org.apache.pdfbox.rendering.RenderDestination)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getBitsPerComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:int getBitsPerCoordinate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:int getBitsPerCoordinate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:boolean isNodeOpen()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCountForAddedChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void openNode()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void closeNode()",
            "org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:void updateParentOpenCount(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean isMultiLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean shallComb()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:java.lang.String getString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getUpperLimit()",
            "org.apache.pdfbox.pdmodel.common.PDNameTreeNode:java.lang.String getLowerLimit()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getReasons()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:java.util.List getLegalAttestation()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void access$100(org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser:void parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int,int,int,int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(double,double,double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(double)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void initPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdfparser.PDFParser:org.apache.pdfbox.pdmodel.PDDocument getPDDocument()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[])",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()",
            "org.apache.pdfbox.pdmodel.PDDocument:void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)",
            "org.apache.pdfbox.pdmodel.PDDocument:float getVersion()",
            "org.apache.pdfbox.pdmodel.PDDocument:void setVersion(float)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:org.apache.pdfbox.pdmodel.graphics.shading.Patch readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDRectangle:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDDocument:void assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.PDDocument:void prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",
            "org.apache.pdfbox.pdmodel.PDPage:void <init>()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getBleedBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getTrimBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle getArtBox()",
            "org.apache.pdfbox.pdmodel.PDPage:org.apache.pdfbox.pdmodel.common.PDRectangle clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:org.apache.pdfbox.pdmodel.common.PDRectangle createRetranslatedRectangle()",
            "org.apache.pdfbox.pdmodel.common.PDRectangle:void <clinit>()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:void <init>(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:void initFringe(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:org.apache.pdfbox.pdmodel.common.PDRectangle getFringe()",
            "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.type1.Type1Font)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor buildFontDescriptor(org.apache.fontbox.afm.FontMetrics)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.pdmodel.common.PDRectangle getFontBBox()",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:org.apache.pdfbox.pdmodel.font.PDFontDescriptor createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getRectDifference()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:org.apache.pdfbox.pdmodel.common.PDRectangle adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(byte[])",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createFormatterRectangle(int[])",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.common.PDRectangle applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",
            "org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()",
            "org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.printing.PDFPrintable:org.apache.pdfbox.pdmodel.common.PDRectangle getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendCOSName(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)",
            "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void close()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void flush()",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.IdentityFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.IdentityFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void writeRun(int,boolean)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encode2D()",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void writeEOL()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRow()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeStreamData(java.io.OutputStream,int[])"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)",
            "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void addComment(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeAffineTransform(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextRise(float)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginText()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void endText()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void newLine()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void transform(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void saveGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void restoreGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void stroke()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndStroke()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fill()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndFillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndFillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closePath()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void clip()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void clipEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void endMarkedContent()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextRise(float)",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawShape(float,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeAffineTransform(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextRise(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginText()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void endText()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void newLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void transform(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void saveGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void restoreGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void stroke()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fill()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndFillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndFillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void closePath()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void clipPath(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void clip()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void clipEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void endMarkedContent()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextRise(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte[],java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte[],int,int,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.util.Hex:void writeHexBytes(byte[],java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.cos.COSOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSBoolean:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSFloat:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSInteger:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSNull:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void decodeAndWriteRow()",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteIncrement()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeExternalSignature(byte[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.lang.Object[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(byte[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSBoolean:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSFloat:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSInteger:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSNull:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void decodeAndWriteRow()",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteIncrement()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeExternalSignature(byte[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.lang.Object[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(byte[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void scanToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:void tokenize()"
        ]
    },
    "org.apache.pdfbox.util.QuickSort:void sort(java.util.List,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void writePage()",
            "org.apache.pdfbox.util.QuickSort:void sort(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:java.awt.geom.GeneralPath getPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:boolean hasGlyph(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearanceStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getNormalAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:org.apache.pdfbox.pdmodel.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:boolean isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void fetch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int read()",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int read(byte[],int,int)",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:long skip(long)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRowType2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:void decodeRow()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:byte[] toByteArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:byte[] getSignedContent(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void setSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] computeOwnerPassword(byte[],byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareEncryptionDictRev2345(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isFixedPitch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.lang.String getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSerif()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.lang.String getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSymbolic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean getSymbolicFlag()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isScript()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isNonSymbolic()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isItalic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:java.lang.String getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isAllCap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isSmallCap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFontDescriptor:boolean isForceBold()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:java.awt.Composite getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:java.awt.Composite getStrokingJavaComposite()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:java.awt.Composite getNonStrokingJavaComposite()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$13:void blend(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$14:void blend(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$15:void blend(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$16:void blend(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void getSaturationRGB(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$000(float[],float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void getLuminosityRGB(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$100(float[],float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$000(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$13:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$14:void blend(float[],float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:void access$100(float[],float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$13:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$15:void blend(float[],float[],float[])",
            "org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$16:void blend(float[],float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.Parser:void parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence parse(java.lang.CharSequence)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:org.apache.pdfbox.pdmodel.PDDocument getPDDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(org.apache.pdfbox.io.RandomAccessBufferedFileInputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromName(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendCOSName(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.ASCII85OutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void flush()",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.IdentityFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.IdentityFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void writeRun(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encode2D()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encode2D()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRowType6()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void writeEOL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRow()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextInternal(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextInternal(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLeading(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLeading(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void newLineAtOffset(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void newLineAtOffset(float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void newLineAtOffset(float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void addRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void addRect(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo(float,float,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo(float,float,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo2(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo2(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo2(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void curveTo1(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo1(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo1(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void moveTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void moveTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void moveTo(float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void lineTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void lineTo(float,float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void lineTo(float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineWidth(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineWidth(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineDashPattern(float[],float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineDashPattern(float[],float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setMiterLimit(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setMiterLimit(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setMiterLimit(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeAffineTransform(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void transform(org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setCharacterSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setCharacterSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setCharacterSpacing(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setWordSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setWordSpacing(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setWordSpacing(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setHorizontalScaling(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setHorizontalScaling(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setHorizontalScaling(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextRise(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setTextRise(float)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setTextRise(float)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setTextRise(float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:boolean setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineJoinStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineJoinStyle(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineCapStyle(int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineCapStyle(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void beginText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginText()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginText()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginText()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void endText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void endText()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void endText()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void endText()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void newLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void newLine()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void newLine()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void newLine()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void transform(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void transform(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void transform(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void transform(org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void saveGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void saveGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void saveGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void saveGraphicsState()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void restoreGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void restoreGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void restoreGraphicsState()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void restoreGraphicsState()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void stroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void stroke()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void stroke()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void stroke()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndStroke()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndStroke()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fill()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void fill()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fill()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillEvenOdd()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillAndStroke()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void fillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillAndStrokeEvenOdd()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndFillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndFillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndFillAndStroke()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndFillAndStroke()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closeAndFillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndFillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndFillAndStrokeEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndFillAndStrokeEvenOdd()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void closePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closePath()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void closePath()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closePath()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void clip()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void clip()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void clip()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void clip()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void clipEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void clipEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void clipEvenOdd()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void clipEvenOdd()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void endMarkedContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void endMarkedContent()",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void endMarkedContent()",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void endMarkedContent()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawShape(float,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLeading(double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void newLineAtOffset(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void moveTextPositionByAmount(float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier312(float,float,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo2(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier32(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void curveTo1(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier31(float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void moveTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addLine(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawLine(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addPolygon(float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void lineTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addLine(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawLine(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addPolygon(float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineDashPattern(float[],float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setMiterLimit(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeAffineTransform(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void transform(org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setCharacterSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setWordSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setHorizontalScaling(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextRise(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void endText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void newLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(double,double,double,double,double,double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextScaling(double,double,double,double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextTranslation(double,double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextRotation(double,double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void transform(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void concatenate2CTM(double,double,double,double,double,double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void concatenate2CTM(java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void saveGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void restoreGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void stroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawLine(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawPolygon(float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillRect(float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillPolygon(float[],float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fill(int)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fill(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndFillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeAndFillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void closePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeSubPath()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void clipPath(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void clip()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void clipEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void endMarkedContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void endMarkedContentSequence()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataRC4(byte[],byte[],java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.util.Hex:void writeHexBytes(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.cos.COSBoolean:void writePDF(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromBoolean(org.apache.pdfbox.cos.COSBoolean)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSFloat:void writePDF(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromFloat(org.apache.pdfbox.cos.COSFloat)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSInteger:void writePDF(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromInt(org.apache.pdfbox.cos.COSInteger)",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.cos.COSNull:void writePDF(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromNull(org.apache.pdfbox.cos.COSNull)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void decodeAndWriteRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void flush()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeBytes(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLineDashPattern(float[],float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeBytes(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.util.QuickSort:void sort(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85InputStream:int read()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxDecoderStream:boolean readBit()",
            "org.apache.pdfbox.filter.LZWFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int readCode(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:int readCode(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxFilter:void readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxDecoderStream:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:float[] extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean getSymbolicFlag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:java.awt.Composite getStrokingJavaComposite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void strokePath()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:java.awt.Composite getNonStrokingJavaComposite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:void compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence parse(java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int,int,int,int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int,int,int,int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(int,int,int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(int,int,int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void setNonStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int,int,int)",
            "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int,int,int)",
            "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int,int,int)"
        ]
    },
    "org.apache.pdfbox.cos.COSName:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRowType6()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void encodeRow()"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSName:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void write(int)",
            "org.apache.pdfbox.filter.ASCII85OutputStream:void flush()",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void write(int,int)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void fill()",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:void writeNumber(java.io.OutputStream,long,int)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(int)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeString(byte[],boolean,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(int)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeLine()",
            "org.apache.pdfbox.pdmodel.encryption.RC4Cipher:void write(byte,java.io.OutputStream)",
            "org.apache.pdfbox.util.Hex:void writeHexByte(byte,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLeading(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void newLineAtOffset(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.layout.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void newLineAtOffset(float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void newLineAtOffset(float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void addRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyRectangleImpl(double,double,double,double,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void addRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void addRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void curveTo(double,double,double,double,double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo2(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo2(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo2(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void curveTo1(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void curveTo1(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void curveTo1(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void moveTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void moveTo(double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void moveTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void moveTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void lineTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void lineTo(double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void lineTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void lineTo(float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineWidthOnDemand(float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineWidth(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineDashPattern(float[],float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineDashPattern(float[],float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineDashPattern(float[],float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setMiterLimit(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setMiterLimit(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setMiterLimit(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setCharacterSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setCharacterSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setCharacterSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setWordSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setWordSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setWordSpacing(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setHorizontalScaling(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setHorizontalScaling(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setHorizontalScaling(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setTextRise(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setTextRise(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setTextRise(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void beginOutput(double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineJoinStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setLineCapStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void beginText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void beginText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void beginText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void endText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void endText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void endText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void newLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void newLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void newLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setTextMatrix(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void transform(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void transform(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void transform(org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void saveGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void saveGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void saveGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void restoreGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void restoreGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void restoreGraphicsState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void stroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawShape(float,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void stroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void stroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawShape(float,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fill()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void drawShape(float,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNote(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void fillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void fillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void fillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndFillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawInsert(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCross(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndFillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndFillAndStroke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closeAndFillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void closeAndFillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closeAndFillAndStrokeEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void closePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void finish()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawComment(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawKey(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void closePath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void closePath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void clip()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void clip()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void clip()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void clipEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void clipEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void clipEvenOdd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void endMarkedContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void endMarkedContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void endMarkedContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:void generateNormalAppearance()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setLeading(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void moveTextPositionByAmount(float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillRect(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier312(float,float,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier32(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addBezier31(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addLine(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawLine(float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void addPolygon(float[],float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawPolygon(float[],float[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillPolygon(float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContentSequence(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(double,double,double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextMatrix(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextScaling(double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextTranslation(double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setTextRotation(double,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void concatenate2CTM(double,double,double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void concatenate2CTM(java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawPolygon(float[],float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fillPolygon(float[],float[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void fill(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void closeSubPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addPolygon(float[],float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void endMarkedContentSequence()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataRC4(byte[],byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] getUserPassword(byte[],byte[],int,int)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromBoolean(org.apache.pdfbox.cos.COSBoolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSBoolean:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromFloat(org.apache.pdfbox.cos.COSFloat)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSFloat:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromInt(org.apache.pdfbox.cos.COSInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInteger:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromNull(org.apache.pdfbox.cos.COSNull)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSNull:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream$1:void write(byte[],int,int)",
            "org.apache.pdfbox.cos.COSStream$2:void write(byte[],int,int)",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void write(byte[])",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfwriter.COSStandardOutputStream:void write(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperand(float)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:void setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCII85Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.ASCIIHexFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void flush()",
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.IdentityFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.IdentityFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createCombinedContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxFilter:void readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setNonStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDFormContentStream:void setNonStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPatternContentStream:void setNonStrokingColor(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyRectangleImpl(double,double,double,double,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyEllipseImpl(double,double,double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void curveTo(double,double,double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCircles(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawHelp(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawStar(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCheck(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightPointer(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:void drawRightArrow(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void moveTo(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void moveTo(java.awt.geom.Point2D$Double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:void drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void lineTo(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void lineTo(java.awt.geom.Point2D$Double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setLineWidthOnDemand(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDAppearanceContentStream:void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void beginOutput(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void moveTo(double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void lineTo(double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyPolygon(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:byte[] getUserPassword(byte[],byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSBoolean:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSFloat:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSInteger:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSNull:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSBoolean:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSFloat:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSInteger:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.cos.COSNull:void writePDF(java.io.OutputStream)",
            "org.apache.pdfbox.filter.CCITTFaxFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.filter.DCTFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JPXFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.LZWFilter:void doLZWDecode(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.pdfbox.filter.Predictor$PredictorOutputStream:void decodeAndWriteRow()",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteIncrement()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void writeExternalSignature(byte[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeTokens(java.lang.Object[])",
            "org.apache.pdfbox.pdfwriter.ContentStreamWriter:void writeObject(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void write(byte[])",
            "org.apache.pdfbox.pdmodel.PDAbstractContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(byte[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(double)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void appendRawCommands(float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void addComment(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeOperator(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void write(java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void writeBytes(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:org.apache.pdfbox.cos.COSStream parseStreamElement(org.w3c.dom.Element)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:void prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",
            "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyEllipseImpl(double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void addCornerCurl(double,double,double,double,double,double,double,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void addFirstIntermediateCurl(double,double,double,double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:java.awt.geom.Point2D$Double[] getIntermediateCurlTemplate(double,double)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void addCornerCurl(double,double,double,double,double,double,double,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void drawBasicEllipse(double,double,double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void moveTo(java.awt.geom.Point2D$Double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void lineTo(java.awt.geom.Point2D$Double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyPolygon(float[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:void generateNormalAppearance()"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:boolean isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void createCloudyPolygon(float[][])",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyRectangleImpl(double,double,double,double,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void addCornerCurl(double,double,double,double,double,double,double,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyEllipseImpl(double,double,double,double)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void addFirstIntermediateCurl(double,double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:java.awt.geom.Point2D$Double[] getIntermediateCurlTemplate(double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void drawBasicEllipse(double,double,double,double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:void cloudyEllipseImpl(double,double,double,double)"
        ]
    }
}
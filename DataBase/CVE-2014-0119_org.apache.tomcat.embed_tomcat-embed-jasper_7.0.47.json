{
    "org.apache.jasper.xmlparser.ParserUtils:org.apache.jasper.xmlparser.TreeNode parseXMLDocument(java.lang.String,org.xml.sax.InputSource)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.jasper.compiler.JspConfig:void processWebDotXml()",
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanWebXml()",
            "org.apache.jasper.xmlparser.ParserUtils:org.apache.jasper.xmlparser.TreeNode parseXMLDocument(java.lang.String,java.io.InputStream)"
        ]
    },
    "org.apache.jasper.compiler.JspConfig:void processWebDotXml()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspConfig:void init()"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void tldScanWebXml()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:void init()"
        ]
    },
    "org.apache.jasper.xmlparser.ParserUtils:org.apache.jasper.xmlparser.TreeNode parseXMLDocument(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ImplicitTagLibraryInfo:void <init>(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.PageInfo,java.lang.String,java.lang.String,org.apache.jasper.compiler.ErrorDispatcher)",
            "org.apache.jasper.compiler.TagLibraryInfoImpl:void parseTLD(java.lang.String,java.io.InputStream,org.apache.jasper.compiler.JarResource)",
            "org.apache.jasper.compiler.TagPluginManager:void loadTagPlugins(org.apache.jasper.compiler.ErrorDispatcher,java.io.InputStream)",
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanStream(java.lang.String,java.lang.String,java.io.InputStream)"
        ]
    },
    "org.apache.jasper.compiler.JspConfig:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspConfig:org.apache.jasper.compiler.JspConfig$JspProperty findJspProperty(java.lang.String)",
            "org.apache.jasper.compiler.JspConfig:boolean isJspPage(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:org.apache.jasper.compiler.TldLocation getLocation(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.ImplicitTagLibraryInfo:void <init>(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.PageInfo,java.lang.String,java.lang.String,org.apache.jasper.compiler.ErrorDispatcher)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:javax.servlet.jsp.tagext.TagLibraryInfo getTaglibInfo(java.lang.String,java.lang.String)",
            "org.apache.jasper.compiler.Parser:void parseTaglibDirective(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.TagLibraryInfoImpl:void parseTLD(java.lang.String,java.io.InputStream,org.apache.jasper.compiler.JarResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagLibraryInfoImpl:void <init>(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.PageInfo,java.lang.String,java.lang.String,org.apache.jasper.compiler.TldLocation,org.apache.jasper.compiler.ErrorDispatcher,org.apache.jasper.compiler.Mark)"
        ]
    },
    "org.apache.jasper.compiler.TagPluginManager:void loadTagPlugins(org.apache.jasper.compiler.ErrorDispatcher,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagPluginManager:void init(org.apache.jasper.compiler.ErrorDispatcher)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void tldScanStream(java.lang.String,java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanResourcePaths(java.lang.String)",
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanDir(java.io.File)",
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanJar(java.net.JarURLConnection)"
        ]
    },
    "org.apache.jasper.compiler.JspConfig:org.apache.jasper.compiler.JspConfig$JspProperty findJspProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()",
            "org.apache.jasper.compiler.ParserController:java.lang.String getJspConfigPageEncoding(java.lang.String)",
            "org.apache.jasper.compiler.ParserController:void determineSyntaxAndEncoding(java.lang.String,java.util.jar.JarFile,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.JspConfig:boolean isJspPage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspC:void scanFiles(java.io.File)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:org.apache.jasper.compiler.TldLocation getLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspCompilationContext:org.apache.jasper.compiler.TldLocation getTldLocation(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:javax.servlet.jsp.tagext.TagLibraryInfo getTaglibInfo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseTaglibDirective(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseDirective(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.TagLibraryInfoImpl:void <init>(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.PageInfo,java.lang.String,java.lang.String,org.apache.jasper.compiler.TldLocation,org.apache.jasper.compiler.ErrorDispatcher,org.apache.jasper.compiler.Mark)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:javax.servlet.jsp.tagext.TagLibraryInfo getTaglibInfo(java.lang.String,java.lang.String)",
            "org.apache.jasper.compiler.Parser:void parseTaglibDirective(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.TagPluginManager:void init(org.apache.jasper.compiler.ErrorDispatcher)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagPluginManager:void apply(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.ErrorDispatcher,org.apache.jasper.compiler.PageInfo)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void tldScanResourcePaths(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:void init()",
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void tldScanDir(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:void tldScanDir(java.io.File)",
            "org.apache.jasper.compiler.TldLocationsCache:void access$200(org.apache.jasper.compiler.TldLocationsCache,java.io.File)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void tldScanJar(java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache:void access$100(org.apache.jasper.compiler.TldLocationsCache,java.net.JarURLConnection)"
        ]
    },
    "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:void compile(boolean,boolean)"
        ]
    },
    "org.apache.jasper.compiler.ParserController:java.lang.String getJspConfigPageEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes doParse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.compiler.ParserController:void determineSyntaxAndEncoding(java.lang.String,java.util.jar.JarFile,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes doParse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.JspC:void scanFiles(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspC:void execute()"
        ]
    },
    "org.apache.jasper.JspCompilationContext:org.apache.jasper.compiler.TldLocation getTldLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:javax.servlet.jsp.tagext.TagLibraryInfo getTaglibInfo(java.lang.String,java.lang.String)",
            "org.apache.jasper.compiler.Parser:void parseTaglibDirective(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class loadTagFile(org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Parser:void parseDirective(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsScriptless(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsTemplateText(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseFileDirectives(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.TagPluginManager:void apply(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.ErrorDispatcher,org.apache.jasper.compiler.PageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void access$200(org.apache.jasper.compiler.TldLocationsCache,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache$TldJarScannerCallback:void scan(java.io.File)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache:void access$100(org.apache.jasper.compiler.TldLocationsCache,java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TldLocationsCache$TldJarScannerCallback:void scan(java.net.JarURLConnection)"
        ]
    },
    "org.apache.jasper.compiler.Compiler:void compile(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:void compile(boolean)",
            "org.apache.jasper.JspC:void processFile(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes doParse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parse(java.lang.String)",
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parseDirectives(java.lang.String)",
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)",
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parseTagFileDirectives(java.lang.String,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.JspC:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspC:void main(java.lang.String[])"
        ]
    },
    "org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class loadTagFile(org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class access$000(org.apache.jasper.compiler.TagFileProcessor,org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.JspReader,org.apache.jasper.compiler.Node,boolean,boolean,org.apache.jasper.compiler.JarResource,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseElementsScriptless(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseElementsTemplateText(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseFileDirectives(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.JspReader,org.apache.jasper.compiler.Node,boolean,boolean,org.apache.jasper.compiler.JarResource,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.jasper.compiler.TldLocationsCache$TldJarScannerCallback:void scan(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.TldLocationsCache$TldJarScannerCallback:void scan(java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Compiler:void compile(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:void compile()"
        ]
    },
    "org.apache.jasper.JspC:void processFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspC:void execute()"
        ]
    },
    "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parseDirectives(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:void processIncludeDirective(java.lang.String,org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void processIncludeDirective(java.lang.String,org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes parseTagFileDirectives(java.lang.String,org.apache.jasper.compiler.JarResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagFileProcessor:javax.servlet.jsp.tagext.TagInfo parseTagFileDirectives(org.apache.jasper.compiler.ParserController,java.lang.String,java.lang.String,org.apache.jasper.compiler.JarResource,javax.servlet.jsp.tagext.TagLibraryInfo)"
        ]
    },
    "org.apache.jasper.JspC:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class access$000(org.apache.jasper.compiler.TagFileProcessor,org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)"
        ]
    },
    "org.apache.jasper.compiler.Parser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.JspReader,org.apache.jasper.compiler.Node,boolean,boolean,org.apache.jasper.compiler.JarResource,java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes doParse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseOptionalBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)",
            "org.apache.jasper.compiler.Parser:void parseJspBody(org.apache.jasper.compiler.Node,java.lang.String)",
            "org.apache.jasper.compiler.Parser:void parseNamedAttributes(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Compiler:void compile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.JspCompilationContext:void compile()"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:void processIncludeDirective(java.lang.String,org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:void addInclude(org.apache.jasper.compiler.Node,java.util.List)",
            "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node parseStandardAction(java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Attributes,org.xml.sax.Attributes,org.apache.jasper.compiler.Mark)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void processIncludeDirective(java.lang.String,org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseIncludeDirective(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void addInclude(org.apache.jasper.compiler.Node,java.util.List)"
        ]
    },
    "org.apache.jasper.compiler.TagFileProcessor:javax.servlet.jsp.tagext.TagInfo parseTagFileDirectives(org.apache.jasper.compiler.ParserController,java.lang.String,java.lang.String,org.apache.jasper.compiler.JarResource,javax.servlet.jsp.tagext.TagLibraryInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ImplicitTagLibraryInfo:javax.servlet.jsp.tagext.TagFileInfo getTagFile(java.lang.String)",
            "org.apache.jasper.compiler.TagLibraryInfoImpl:javax.servlet.jsp.tagext.TagFileInfo createTagFileInfo(org.apache.jasper.xmlparser.TreeNode,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Collector:void collect(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void dumpBody(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.ELFunctionMapper:void map(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail createJavacError(java.lang.String,org.apache.jasper.compiler.Node$Nodes,java.lang.StringBuilder,int,org.apache.jasper.JspCompilationContext)",
            "org.apache.jasper.compiler.Generator$1DeclarationVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$GenBuffer$1:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$GenBuffer:void adjustJavaLines(int)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void printParams(org.apache.jasper.compiler.Node,java.lang.String,boolean)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateTagPlugin(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator:void generateDeclarations(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Generator:void compileTagHandlerPoolList(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Generator:void declareTemporaryScriptingVars(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Node$NamedAttribute:java.lang.String getText()",
            "org.apache.jasper.compiler.Node$Visitor:void visitBody(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node,boolean)",
            "org.apache.jasper.compiler.PageDataImpl:void <init>(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.Compiler)",
            "org.apache.jasper.compiler.ScriptingVariabler:void set(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.ErrorDispatcher)",
            "org.apache.jasper.compiler.SmapUtil:java.lang.String[] generateSmap(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.SmapUtil:void evaluateNodes(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.SmapStratum,java.util.HashMap,boolean)",
            "org.apache.jasper.compiler.TagFileProcessor:javax.servlet.jsp.tagext.TagInfo parseTagFileDirectives(org.apache.jasper.compiler.ParserController,java.lang.String,java.lang.String,org.apache.jasper.compiler.JarResource,javax.servlet.jsp.tagext.TagLibraryInfo)",
            "org.apache.jasper.compiler.TagFileProcessor:void loadTagFiles(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.TagPluginManager:void apply(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.ErrorDispatcher,org.apache.jasper.compiler.PageInfo)",
            "org.apache.jasper.compiler.TextOptimizer:void concatenate(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void checkNamedAttributes(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Node$JspAttribute[],int,java.util.Hashtable)",
            "org.apache.jasper.compiler.Validator:void validateDirectives(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Validator:void validateExDirectives(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseOptionalBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseInclude(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseForward(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElement(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseGetProperty(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseSetProperty(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseUseBean(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseJspParams(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseFallBack(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parsePlugin(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:boolean parseCustomTag(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseJspBody(org.apache.jasper.compiler.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:boolean parseJspAttributeAndBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseNamedAttributes(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseEmptyBody(org.apache.jasper.compiler.Node,java.lang.String)",
            "org.apache.jasper.compiler.Parser:boolean parseJspAttributeAndBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.JspCompilationContext:void compile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspRuntimeContext:void checkCompile()",
            "org.apache.jasper.servlet.JspServletWrapper:java.lang.Class loadTagFile()",
            "org.apache.jasper.servlet.JspServletWrapper:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:void addInclude(org.apache.jasper.compiler.Node,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,java.lang.String,java.util.jar.JarFile,org.apache.jasper.compiler.Node,boolean,boolean,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node parseStandardAction(java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Attributes,org.xml.sax.Attributes,org.apache.jasper.compiler.Mark)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseIncludeDirective(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseDirective(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseXMLDirective(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void addInclude(org.apache.jasper.compiler.Node,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.JspReader,org.apache.jasper.compiler.Node,boolean,boolean,org.apache.jasper.compiler.JarResource,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.jasper.compiler.ImplicitTagLibraryInfo:javax.servlet.jsp.tagext.TagFileInfo getTagFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node parseCustomAction(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Attributes,org.xml.sax.Attributes,org.apache.jasper.compiler.Mark,org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:boolean parseCustomTag(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.TagLibraryInfoImpl:javax.servlet.jsp.tagext.TagFileInfo createTagFileInfo(org.apache.jasper.xmlparser.TreeNode,org.apache.jasper.compiler.JarResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagLibraryInfoImpl:void parseTLD(java.lang.String,java.io.InputStream,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.compiler.Collector:void collect(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void dumpBody(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)"
        ]
    },
    "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.ELFunctionMapper:void map(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail createJavacError(java.lang.String,org.apache.jasper.compiler.Node$Nodes,java.lang.StringBuilder,int,org.apache.jasper.JspCompilationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail createJavacError(java.lang.String,org.apache.jasper.compiler.Node$Nodes,java.lang.StringBuilder,int)",
            "org.apache.jasper.compiler.JDTCompiler$2:void acceptResult(org.eclipse.jdt.internal.compiler.CompilationResult)",
            "org.apache.jasper.servlet.JspServletWrapper:org.apache.jasper.JasperException handleJspException(java.lang.Exception)"
        ]
    },
    "org.apache.jasper.compiler.Generator$1DeclarationVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenBuffer$1:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenBuffer:void adjustJavaLines(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$FragmentHelperClass:void generatePostamble()",
            "org.apache.jasper.compiler.Generator$FragmentHelperClass:void adjustJavaLines(int)",
            "org.apache.jasper.compiler.Generator:void genCommonPostamble()"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void printParams(org.apache.jasper.compiler.Node,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateTagPlugin(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generateDeclarations(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generatePreamble(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Generator:void generateTagHandlerPreamble(org.apache.jasper.compiler.JasperTagInfo,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void compileTagHandlerPoolList(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void declareTemporaryScriptingVars(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generatePreamble(org.apache.jasper.compiler.Node$Nodes)",
            "org.apache.jasper.compiler.Generator:void generateTagHandlerPreamble(org.apache.jasper.compiler.JasperTagInfo,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.Node$NamedAttribute:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ScriptingElement:java.lang.String getText()",
            "org.apache.jasper.compiler.Node:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node,boolean)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void doSmapText(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void checkNamedAttributes(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Node$JspAttribute[],int,java.util.Hashtable)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visitBody(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void checkSeen(org.apache.jasper.compiler.Node$ChildInfo,org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$1DeclarationVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$1ScriptingVarVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$1TagHandlerPoolVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateTagPlugin(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomDoTag(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateJspFragment(org.apache.jasper.compiler.Node,java.lang.String)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String generateNamedAttributeValue(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)",
            "org.apache.jasper.compiler.PageDataImpl$FirstPassVisitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.PageDataImpl$FirstPassVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.ScriptingVariabler$CustomTagCounter:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.ScriptingVariabler$ScriptingVariableVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visitBody(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.TagPluginManager$NodeVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.TextOptimizer$TextCatVisitor:void visitBody(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Validator$DirectiveVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Validator$TagExtraInfoVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor$NamedAttributeVisitor:void doVisit(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl:void <init>(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.Compiler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Validator:void validateExDirectives(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.ScriptingVariabler:void set(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.ErrorDispatcher)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil:java.lang.String[] generateSmap(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil:void evaluateNodes(org.apache.jasper.compiler.Node$Nodes,org.apache.jasper.compiler.SmapStratum,java.util.HashMap,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.SmapUtil:java.lang.String[] generateSmap(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.TagFileProcessor:void loadTagFiles(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.TextOptimizer:void concatenate(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void checkNamedAttributes(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Node$JspAttribute[],int,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)"
        ]
    },
    "org.apache.jasper.compiler.Validator:void validateDirectives(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.Validator:void validateExDirectives(org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:java.lang.String[] generateJava()"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseInclude(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseForward(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseElement(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseGetProperty(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseSetProperty(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseUseBean(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseJspParams(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parsePluginTags(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseFallBack(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parsePluginTags(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parsePlugin(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:boolean parseCustomTag(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsScriptless(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsTemplateText(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:boolean parseJspAttributeAndBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseOptionalBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseEmptyBody(org.apache.jasper.compiler.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseParam(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseInvoke(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseDoBody(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.JspRuntimeContext:void checkCompile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServlet:void periodicEvent()"
        ]
    },
    "org.apache.jasper.servlet.JspServletWrapper:java.lang.Class loadTagFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class loadTagFile(org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)",
            "org.apache.jasper.servlet.JspServletWrapper:java.lang.Class loadTagFilePrototype()"
        ]
    },
    "org.apache.jasper.servlet.JspServletWrapper:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServlet:void serviceJspFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node$Nodes parse(org.apache.jasper.compiler.ParserController,java.lang.String,java.util.jar.JarFile,org.apache.jasper.compiler.Node,boolean,boolean,java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ParserController:org.apache.jasper.compiler.Node$Nodes doParse(java.lang.String,org.apache.jasper.compiler.Node,org.apache.jasper.compiler.JarResource)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Parser:void parseXMLDirective(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsScriptless(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsTemplateText(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseFileDirectives(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.JspDocumentParser:org.apache.jasper.compiler.Node parseCustomAction(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Attributes,org.xml.sax.Attributes,org.apache.jasper.compiler.Mark,org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.JspDocumentParser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamsAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail createJavacError(java.lang.String,org.apache.jasper.compiler.Node$Nodes,java.lang.StringBuilder,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail[] parseJavacMessage(java.lang.String,java.lang.String,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.JDTCompiler$2:void acceptResult(org.eclipse.jdt.internal.compiler.CompilationResult)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.servlet.JspServletWrapper:org.apache.jasper.JasperException handleJspException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServletWrapper:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.jasper.compiler.Generator$FragmentHelperClass:void generatePostamble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void genCommonPostamble()"
        ]
    },
    "org.apache.jasper.compiler.Generator$FragmentHelperClass:void adjustJavaLines(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void genCommonPostamble()"
        ]
    },
    "org.apache.jasper.compiler.Generator:void genCommonPostamble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generatePostamble()",
            "org.apache.jasper.compiler.Generator:void generateTagHandlerPostamble(javax.servlet.jsp.tagext.TagInfo)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generatePreamble(org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generateTagHandlerPreamble(org.apache.jasper.compiler.JasperTagInfo,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Node$ScriptingElement:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Expression)",
            "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)",
            "org.apache.jasper.compiler.Generator$1DeclarationVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$Expression)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)",
            "org.apache.jasper.compiler.Node$ScriptingElement:java.lang.String getText()",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node,boolean)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void doSmapText(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Node:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$AttributeDirective:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$AttributeGenerator:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$Comment:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$CustomTag:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$DoBodyAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$ELExpression:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$FallBackAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$ForwardAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$GetProperty:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$IncludeAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$IncludeDirective:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$InvokeAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$JspBody:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$JspElement:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$JspOutput:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$JspRoot:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$JspText:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$NamedAttribute:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$PageDirective:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$ParamAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$ParamsAction:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$PlugIn:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$Root:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$ScriptingElement:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$SetProperty:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$TagDirective:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$TaglibDirective:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$TemplateText:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$UninterpretedTag:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$UseBean:java.lang.String getTextAttribute(java.lang.String)",
            "org.apache.jasper.compiler.Node$VariableDirective:java.lang.String getTextAttribute(java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void doSmapText(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Expression)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void checkSeen(org.apache.jasper.compiler.Node$ChildInfo,org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ELFunctionMapper$ELFunctionVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$1ScriptingVarVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$1TagHandlerPoolVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomDoTag(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateJspFragment(org.apache.jasper.compiler.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomDoTag(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String generateNamedAttributeJspFragment(org.apache.jasper.compiler.Node$NamedAttribute,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String generateNamedAttributeValue(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void prepareParams(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String evaluateAttribute(org.apache.jasper.compiler.Generator$TagHandlerInfo,org.apache.jasper.compiler.Node$JspAttribute,org.apache.jasper.compiler.Node$CustomTag,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Root)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Root:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspRoot:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$GetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$GetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamsAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$FallBackAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspText:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$FirstPassVisitor:void visit(org.apache.jasper.compiler.Node$Root)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Root:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$FirstPassVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspRoot:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Root)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Root:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspRoot:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ScriptingVariabler$CustomTagCounter:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ScriptingVariabler$ScriptingVariableVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visitBody(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)"
        ]
    },
    "org.apache.jasper.compiler.TagPluginManager$NodeVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.TextOptimizer$TextCatVisitor:void visitBody(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)"
        ]
    },
    "org.apache.jasper.compiler.Validator$DirectiveVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$TagExtraInfoVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor$NamedAttributeVisitor:void doVisit(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspRoot)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PageDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TagDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TaglibDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$AttributeDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$VariableDirective)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Comment)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Declaration)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Expression)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ELExpression)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$CustomTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TemplateText)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspOutput)",
            "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$AttributeGenerator)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspRoot:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamsAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTag(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Root)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Expression)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspText)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$AttributeDirective)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$VariableDirective)",
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTagDirective(org.apache.jasper.compiler.Node$TagDirective)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseElements(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Parser:void parseElementsScriptless(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parsePluginTags(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseParam(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseBody(org.apache.jasper.compiler.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseInvoke(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.compiler.Parser:void parseDoBody(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Parser:void parseStandardAction(org.apache.jasper.compiler.Node)"
        ]
    },
    "org.apache.jasper.servlet.JspServlet:void periodicEvent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.servlet.JspServletWrapper:java.lang.Class loadTagFilePrototype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.TagFileProcessor:java.lang.Class loadTagFile(org.apache.jasper.compiler.Compiler,java.lang.String,javax.servlet.jsp.tagext.TagInfo,org.apache.jasper.compiler.PageInfo)"
        ]
    },
    "org.apache.jasper.servlet.JspServlet:void serviceJspFile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.jasper.servlet.JspServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.jasper.servlet.JspServlet:void access$100(org.apache.jasper.servlet.JspServlet,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)"
        ]
    },
    "org.apache.jasper.compiler.Node$IncludeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$ParamsAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail[] parseJavacMessage(java.lang.String,java.lang.String,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail[] parseJavacErrors(java.lang.String,java.lang.String,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generatePostamble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Generator:void generateTagHandlerPostamble(javax.servlet.jsp.tagext.TagInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator:void generate(org.apache.jasper.compiler.ServletWriter,org.apache.jasper.compiler.Compiler,org.apache.jasper.compiler.Node$Nodes)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Dumper$DumpVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$1DeclarationVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$AttributeDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$AttributeGenerator:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$Comment:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$CustomTag:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$DoBodyAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)"
        ]
    },
    "org.apache.jasper.compiler.Node$ELExpression:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$FallBackAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$ForwardAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$GetProperty:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)"
        ]
    },
    "org.apache.jasper.compiler.Node$IncludeAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)"
        ]
    },
    "org.apache.jasper.compiler.Node$IncludeDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$InvokeAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspBody:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$JspElement:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$JspOutput:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$JspRoot:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$JspRoot)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspText:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$NamedAttribute:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$PageDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$ParamAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor$1ParamVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor$2ParamVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)"
        ]
    },
    "org.apache.jasper.compiler.Node$ParamsAction:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$PlugIn:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)"
        ]
    },
    "org.apache.jasper.compiler.Node$Root:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$ScriptingElement:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$SetProperty:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)"
        ]
    },
    "org.apache.jasper.compiler.Node$TagDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$TaglibDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$TemplateText:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$UninterpretedTag:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.Node$UseBean:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)",
            "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)"
        ]
    },
    "org.apache.jasper.compiler.Node$VariableDirective:java.lang.String getTextAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Collector$CollectVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String generateNamedAttributeJspFragment(org.apache.jasper.compiler.Node$NamedAttribute,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String evaluateAttribute(org.apache.jasper.compiler.Generator$TagHandlerInfo,org.apache.jasper.compiler.Node$JspAttribute,org.apache.jasper.compiler.Node$CustomTag,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void prepareParams(org.apache.jasper.compiler.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:java.lang.String evaluateAttribute(org.apache.jasper.compiler.Generator$TagHandlerInfo,org.apache.jasper.compiler.Node$JspAttribute,org.apache.jasper.compiler.Node$CustomTag,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$AttributeGenerator)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateSetters(org.apache.jasper.compiler.Node$CustomTag,java.lang.String,org.apache.jasper.compiler.Generator$TagHandlerInfo,boolean)"
        ]
    },
    "org.apache.jasper.compiler.Node$Root:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspRoot:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$GetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$FallBackAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspText:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$GetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$CustomTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$UninterpretedTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UninterpretedTag:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspText:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.SmapUtil$SmapGenVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$PageDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PageDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TagDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$TagDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TaglibDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$TaglibDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$AttributeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$AttributeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$VariableDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$VariableDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Comment:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Declaration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$ELExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ELExpression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$TemplateText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$TemplateText:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$JspOutput)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspOutput:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Visitor:void visit(org.apache.jasper.compiler.Node$AttributeGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$AttributeGenerator:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Declaration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$Scriptlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspElement:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$IncludeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$IncludeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ForwardAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ForwardAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$GetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$SetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$SetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$ParamsAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamsAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$FallBackAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$FallBackAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$UseBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$UseBean:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$PlugIn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$PlugIn:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$NamedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$NamedAttribute:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspBody:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$JspText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$JspText:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$AttributeDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$AttributeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$VariableDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$VariableDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void appendTagDirective(org.apache.jasper.compiler.Node$TagDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$TagDirective)"
        ]
    },
    "org.apache.jasper.servlet.JspServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.servlet.JspServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.jasper.servlet.JspServlet:void access$100(org.apache.jasper.servlet.JspServlet,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServlet$1:java.lang.Object run()"
        ]
    },
    "org.apache.jasper.compiler.ErrorDispatcher:org.apache.jasper.compiler.JavacErrorDetail[] parseJavacErrors(java.lang.String,java.lang.String,org.apache.jasper.compiler.Node$Nodes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.AntCompiler:void generateClass(java.lang.String[])"
        ]
    },
    "org.apache.jasper.compiler.Node$Declaration:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Expression:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Scriptlet:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$DoBodyAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$DoBodyAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$GetProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$GetProperty:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Validator$ValidateVisitor:void visit(org.apache.jasper.compiler.Node$InvokeAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$InvokeAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor$1ParamVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor$2ParamVisitor:void visit(org.apache.jasper.compiler.Node$ParamAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$ParamAction:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$AttributeGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$AttributeGenerator:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateSetters(org.apache.jasper.compiler.Node$CustomTag,java.lang.String,org.apache.jasper.compiler.Generator$TagHandlerInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomStart(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomDoTag(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String)"
        ]
    },
    "org.apache.jasper.compiler.Node$PageDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$TagDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$TaglibDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$AttributeDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$VariableDirective:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$Comment:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$ELExpression:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$TemplateText:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$JspOutput:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.Node$AttributeGenerator:void accept(org.apache.jasper.compiler.Node$Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Dumper:void dump(org.apache.jasper.compiler.Node)",
            "org.apache.jasper.compiler.Node$Nodes:void visit(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.compiler.PageDataImpl$SecondPassVisitor:void visit(org.apache.jasper.compiler.Node$TagDirective)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Node$TagDirective:void accept(org.apache.jasper.compiler.Node$Visitor)"
        ]
    },
    "org.apache.jasper.servlet.JspServlet$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.servlet.JspServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.jasper.compiler.AntCompiler:void generateClass(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Compiler:void compile(boolean,boolean)"
        ]
    },
    "org.apache.jasper.compiler.Generator$GenerateVisitor:void generateCustomStart(org.apache.jasper.compiler.Node$CustomTag,org.apache.jasper.compiler.Generator$TagHandlerInfo,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.jasper.compiler.Generator$GenerateVisitor:void visit(org.apache.jasper.compiler.Node$CustomTag)"
        ]
    }
}
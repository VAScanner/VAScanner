{
    "org.keycloak.services.clientregistration.oidc.DescriptionConverter:org.keycloak.representations.idm.ClientRepresentation toInternal(org.keycloak.models.KeycloakSession,org.keycloak.representations.oidc.OIDCClientRepresentation)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response createOIDC(org.keycloak.representations.oidc.OIDCClientRepresentation)",
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response updateOIDC(java.lang.String,org.keycloak.representations.oidc.OIDCClientRepresentation)",
            "org.keycloak.protocol.oidc.OIDCClientDescriptionConverter:org.keycloak.representations.idm.ClientRepresentation convertToInternal(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.oidc.DescriptionConverter:org.keycloak.representations.oidc.OIDCClientRepresentation toExternalResponse(org.keycloak.models.KeycloakSession,org.keycloak.representations.idm.ClientRepresentation,java.net.URI)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response createOIDC(org.keycloak.representations.oidc.OIDCClientRepresentation)",
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)",
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response updateOIDC(java.lang.String,org.keycloak.representations.oidc.OIDCClientRepresentation)"
        ]
    },
    "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,java.lang.String,java.util.Set,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRealmRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String)",
            "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,org.keycloak.models.ClientModel,boolean)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.request.AuthorizationEndpointRequestParserProcessor:org.keycloak.protocol.oidc.endpoints.request.AuthorizationEndpointRequest parseRequest(org.keycloak.events.EventBuilder,org.keycloak.models.KeycloakSession,org.keycloak.models.ClientModel,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response createOIDC(org.keycloak.representations.oidc.OIDCClientRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response updateOIDC(java.lang.String,org.keycloak.representations.oidc.OIDCClientRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.OIDCClientDescriptionConverter:org.keycloak.representations.idm.ClientRepresentation convertToInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.RealmAdminResource:org.keycloak.representations.idm.ClientRepresentation convertClientDescription(java.lang.String)",
            "org.keycloak.protocol.saml.clientregistration.EntityDescriptorClientRegistrationProvider:javax.ws.rs.core.Response createSaml(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRealmRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,org.keycloak.models.ClientModel,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:void checkRedirectUri()",
            "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()"
        ]
    },
    "org.keycloak.services.resources.admin.RealmAdminResource:org.keycloak.representations.idm.ClientRepresentation convertClientDescription(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.clientregistration.EntityDescriptorClientRegistrationProvider:javax.ws.rs.core.Response createSaml(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:void checkRedirectUri()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.oidc.utils.RedirectUtils:java.lang.String verifyRedirectUri(org.keycloak.models.KeycloakSession,java.lang.String,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountFormService:java.lang.String[] getReferrer()",
            "org.keycloak.services.resources.account.AccountConsole:java.lang.String[] getReferrer()",
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response executeActionsEmail(java.lang.String,java.lang.String,java.lang.Integer,java.util.List)",
            "org.keycloak.services.resources.LoginActionsServiceChecks$IsRedirectValid:boolean test(org.keycloak.representations.JsonWebToken)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response clientInitiatedAccountLinking(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)",
            "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:boolean lambda$getVerifiers$0(org.keycloak.authentication.actiontoken.ActionTokenContext,org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionToken)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:java.lang.String[] getReferrer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountFormService:void setReferrerOnPage()"
        ]
    },
    "org.keycloak.services.resources.account.AccountConsole:java.lang.String[] getReferrer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountConsole:javax.ws.rs.core.Response getMainPage()"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response executeActionsEmail(java.lang.String,java.lang.String,java.lang.Integer,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response resetPasswordEmail(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response sendVerifyEmail(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsServiceChecks$IsRedirectValid:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response clientInitiatedAccountLinking(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:boolean lambda$getVerifiers$0(org.keycloak.authentication.actiontoken.ActionTokenContext,org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler$lambda_getVerifiers_0__306:boolean test(java.lang.Object)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:void setReferrerOnPage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response forwardToPage(java.lang.String,org.keycloak.forms.account.AccountPages)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processAccountUpdate(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processRevokeGrant(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processTotpUpdate(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processPasswordUpdate(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processFederatedIdentityUpdate(javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response shareResource(java.lang.String,java.lang.String[],java.lang.String[],javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.services.resources.account.AccountConsole:javax.ws.rs.core.Response getMainPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response resetPasswordEmail(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response sendVerifyEmail(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__82:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.execactions.ExecuteActionsActionTokenHandler$lambda_getVerifiers_0__306:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response forwardToPage(java.lang.String,org.keycloak.forms.account.AccountPages)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response accountPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response totpPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response passwordPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response federatedIdentityPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response logPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response sessionsPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response applicationsPage()",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourcesPage(java.lang.String)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPage(java.lang.String)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response grantPermission(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response shareResource(java.lang.String,java.lang.String[],java.lang.String[],javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processResourceActions(java.lang.String[],java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processAccountUpdate(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processRevokeGrant(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processTotpUpdate(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processPasswordUpdate(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processFederatedIdentityUpdate(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response shareResource(java.lang.String,java.lang.String[],java.lang.String[],javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__82:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(org.keycloak.models.UserModel,java.util.function.Predicate)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils$lambda_checkThat_1__81:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response accountPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response totpPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response passwordPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response federatedIdentityPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response logPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response sessionsPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response applicationsPage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourcesPage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPageAfterGrant(java.lang.String)",
            "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPageAfterShare(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response grantPermission(java.lang.String,java.lang.String,java.lang.String[],java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response processResourceActions(java.lang.String[],java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(org.keycloak.models.UserModel,java.util.function.Predicate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManageByGroup(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canViewByGroup(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils$lambda_checkThat_1__81:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPageAfterGrant(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.account.AccountFormService:javax.ws.rs.core.Response resourceDetailPageAfterShare(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManageByGroup(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManage(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canViewByGroup(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canView(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManage(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireManage(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canMapRoles(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManageGroupMembership(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canView(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireView(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.UsersResource:java.lang.Integer getUsersCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.admin.UsersResource:java.util.List toRepresentation(org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,java.lang.Boolean,java.util.List)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireManage(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response updateUser(org.keycloak.representations.idm.UserRepresentation)",
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response addFederatedIdentity(java.lang.String,org.keycloak.representations.idm.FederatedIdentityRepresentation)",
            "org.keycloak.services.resources.admin.UserResource:void removeFederatedIdentity(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void revokeConsent(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void logout()",
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response deleteUser()",
            "org.keycloak.services.resources.admin.UserResource:void disableCredentialType(java.util.List)",
            "org.keycloak.services.resources.admin.UserResource:void resetPassword(org.keycloak.representations.idm.CredentialRepresentation)",
            "org.keycloak.services.resources.admin.UserResource:java.util.List credentials()",
            "org.keycloak.services.resources.admin.UserResource:java.util.List getConfiguredUserStorageCredentialTypes()",
            "org.keycloak.services.resources.admin.UserResource:void removeCredential(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void setCredentialUserLabel(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void moveCredentialAfter(java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response executeActionsEmail(java.lang.String,java.lang.String,java.lang.Integer,java.util.List)",
            "org.keycloak.services.resources.admin.AttackDetectionResource:void clearBruteForceForUser(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:org.keycloak.representations.idm.UserRepresentation getUser()",
            "org.keycloak.services.resources.admin.UsersResource:java.util.List toRepresentation(org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,java.lang.Boolean,java.util.List)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canMapRoles(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireMapRoles(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canManageGroupMembership(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireManageGroupMembership(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireView(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:org.keycloak.representations.idm.UserRepresentation getUser()",
            "org.keycloak.services.resources.admin.UserResource:java.util.List getSessions()",
            "org.keycloak.services.resources.admin.UserResource:java.util.List getOfflineSessions(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:java.util.List getFederatedIdentity()",
            "org.keycloak.services.resources.admin.UserResource:java.util.List getConsents()",
            "org.keycloak.services.resources.admin.UserResource:java.util.List groupMembership(java.lang.String,java.lang.Integer,java.lang.Integer,boolean)",
            "org.keycloak.services.resources.admin.UserResource:java.util.Map getGroupMembershipCount(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void lambda$getRoleMappings$1()",
            "org.keycloak.services.resources.admin.AttackDetectionResource:java.util.Map bruteForceUserStatus(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.UsersResource:java.lang.Integer getUsersCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource:java.util.List toRepresentation(org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,java.lang.Boolean,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource:java.util.List getUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean)",
            "org.keycloak.services.resources.admin.UsersResource:java.util.List searchForUser(java.util.Map,org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response updateUser(org.keycloak.representations.idm.UserRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response addFederatedIdentity(java.lang.String,org.keycloak.representations.idm.FederatedIdentityRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void removeFederatedIdentity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void revokeConsent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void logout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:javax.ws.rs.core.Response deleteUser()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void disableCredentialType(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void resetPassword(org.keycloak.representations.idm.CredentialRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List credentials()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List getConfiguredUserStorageCredentialTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void removeCredential(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void setCredentialUserLabel(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void moveCredentialAfter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:void moveCredentialToFirst(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.AttackDetectionResource:void clearBruteForceForUser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:org.keycloak.representations.idm.UserRepresentation getUser()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireMapRoles(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:void lambda$getRoleMappings$0()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireManageGroupMembership(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:void removeMembership(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void joinGroup(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List getSessions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List getOfflineSessions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List getFederatedIdentity()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List getConsents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.List groupMembership(java.lang.String,java.lang.Integer,java.lang.Integer,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.Map getGroupMembershipCount(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void lambda$getRoleMappings$1()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource$lambda_getRoleMappings_1__263:void require()"
        ]
    },
    "org.keycloak.services.resources.admin.AttackDetectionResource:java.util.Map bruteForceUserStatus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource:java.util.List getUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource:java.util.List searchForUser(java.util.Map,org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource:java.util.List getUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Boolean)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:void moveCredentialToFirst(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void lambda$getRoleMappings$0()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource$lambda_getRoleMappings_0__262:void require()"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:void removeMembership(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void joinGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource$lambda_getRoleMappings_1__263:void require()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappersPerProtocol(java.lang.String)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:javax.ws.rs.core.Response createMapper(org.keycloak.representations.idm.ProtocolMapperRepresentation)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void createMapper(java.util.List)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappers()",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:org.keycloak.representations.idm.ProtocolMapperRepresentation getMapperById(java.lang.String)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void update(java.lang.String,org.keycloak.representations.idm.ProtocolMapperRepresentation)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void delete(java.lang.String)",
            "org.keycloak.services.resources.admin.ScopeMappedResource:org.keycloak.representations.idm.MappingsRepresentation getScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getAvailableRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getCompositeRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:void addRealmScopeMappings(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedResource:void deleteRealmScopeMappings(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getAvailableClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getCompositeClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:void addClientScopeMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:void deleteClientScopeMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getCompositeClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getAvailableClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void addClientRoleMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void deleteClientRoleMapping(java.util.List)",
            "org.keycloak.services.resources.admin.RoleMapperResource:org.keycloak.representations.idm.MappingsRepresentation getRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getCompositeRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getAvailableRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:void addRealmRoleMappings(java.util.List)",
            "org.keycloak.services.resources.admin.RoleMapperResource:void deleteRealmRoleMappings(java.util.List)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource$lambda_getRoleMappings_0__262:void require()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappersPerProtocol(java.lang.String)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:javax.ws.rs.core.Response createMapper(org.keycloak.representations.idm.ProtocolMapperRepresentation)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void createMapper(java.util.List)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappers()",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:org.keycloak.representations.idm.ProtocolMapperRepresentation getMapperById(java.lang.String)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void update(java.lang.String,org.keycloak.representations.idm.ProtocolMapperRepresentation)",
            "org.keycloak.services.resources.admin.ProtocolMappersResource:void delete(java.lang.String)",
            "org.keycloak.services.resources.admin.ScopeMappedResource:org.keycloak.representations.idm.MappingsRepresentation getScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getAvailableRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getCompositeRealmScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedResource:void addRealmScopeMappings(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedResource:void deleteRealmScopeMappings(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getAvailableClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getCompositeClientScopeMappings()",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:void addClientScopeMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ScopeMappedClientResource:void deleteClientScopeMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getCompositeClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getAvailableClientRoleMappings()",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void addClientRoleMapping(java.util.List)",
            "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void deleteClientRoleMapping(java.util.List)",
            "org.keycloak.services.resources.admin.RoleMapperResource:org.keycloak.representations.idm.MappingsRepresentation getRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getCompositeRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getAvailableRealmRoleMappings()",
            "org.keycloak.services.resources.admin.RoleMapperResource:void addRealmRoleMappings(java.util.List)",
            "org.keycloak.services.resources.admin.RoleMapperResource:void deleteRealmRoleMappings(java.util.List)"
        ]
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappersPerProtocol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:javax.ws.rs.core.Response createMapper(org.keycloak.representations.idm.ProtocolMapperRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:void createMapper(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:java.util.List getMappers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:org.keycloak.representations.idm.ProtocolMapperRepresentation getMapperById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:void update(java.lang.String,org.keycloak.representations.idm.ProtocolMapperRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ProtocolMappersResource:void delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:org.keycloak.representations.idm.MappingsRepresentation getScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getRealmScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getAvailableRealmScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:java.util.List getCompositeRealmScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:void addRealmScopeMappings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedResource:void deleteRealmScopeMappings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getClientScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getAvailableClientScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedClientResource:java.util.List getCompositeClientScopeMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedClientResource:void addClientScopeMapping(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ScopeMappedClientResource:void deleteClientScopeMapping(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getClientRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getCompositeClientRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ClientRoleMappingsResource:java.util.List getAvailableClientRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void addClientRoleMapping(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.ClientRoleMappingsResource:void deleteClientRoleMapping(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:org.keycloak.representations.idm.MappingsRepresentation getRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getRealmRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getCompositeRealmRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:java.util.List getAvailableRealmRoleMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:void addRealmRoleMappings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.RoleMapperResource:void deleteRealmRoleMappings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport:void repopulateField(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.Object getOverrideExpr(com.opensymphony.xwork2.ActionInvocation,java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterIntereptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ChainingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.I18nInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.LoggingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParametersInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.PrepareInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String invokeUnderTiming(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.mock.MockInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.DefaultActionProxy:java.lang.String execute()"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String)",
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String)",
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterIntereptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ChainingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.I18nInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.LoggingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParametersInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.PrepareInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String invokeUnderTiming(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.mock.MockInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionProxy:java.lang.String execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateArrayElements(java.lang.Object[],java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:void executeResult()"
        ]
    },
    "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateArrayElements(java.lang.Object[],java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionInvocation:void executeResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    }
}
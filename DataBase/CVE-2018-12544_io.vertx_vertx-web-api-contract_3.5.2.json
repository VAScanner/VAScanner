{
    "io.vertx.ext.web.api.validation.impl.XMLTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.XMLTypeValidator:void <init>(javax.xml.validation.Validator)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.XMLTypeValidator:void <init>(javax.xml.validation.Validator,io.vertx.ext.web.api.validation.impl.XMLTypeValidator$1)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.XMLTypeValidator$XMLTypeValidatorFactory:io.vertx.ext.web.api.validation.impl.XMLTypeValidator createXMLTypeValidator(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.HTTPRequestValidationHandlerImpl:io.vertx.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter validateSingleParam(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.lang.Object)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.lang.Object)"
        ]
    },
    "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.validation.impl.XMLTypeValidator:void <init>(javax.xml.validation.Validator,io.vertx.ext.web.api.validation.impl.XMLTypeValidator$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.XMLTypeValidator$XMLTypeValidatorFactory:io.vertx.ext.web.api.validation.impl.XMLTypeValidator createXMLTypeValidator(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.HTTPRequestValidationHandlerImpl:io.vertx.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)"
        ]
    },
    "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveInnerSchemaPrimitiveTypeValidator(io.swagger.v3.oas.models.media.Schema,boolean)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter validateSingleParam(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validatePathParams(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterValidationRule:io.vertx.rxjava.ext.web.api.RequestParameter validateSingleParam(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterValidationRule:io.vertx.reactivex.ext.web.api.RequestParameter validateSingleParam(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValidCollection(java.util.List)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:io.vertx.ext.web.api.RequestParameter validateEntireBody(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.EnumTypeValidator:void <init>(java.util.List,io.vertx.ext.web.api.validation.ParameterTypeValidator)",
            "io.vertx.ext.web.api.validation.impl.OneOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.AnyOfTypeValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ArrayTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.List)",
            "io.vertx.ext.web.api.validation.impl.ExpandedObjectFieldValidator:io.vertx.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.util.Map)",
            "io.vertx.ext.web.api.validation.ParameterTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValid(java.lang.String)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValid(java.lang.String)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter isValidCollection(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.util.List)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValidCollection(java.util.List)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValidCollection(java.util.List)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ObjectTypeValidator:io.vertx.ext.web.api.RequestParameter validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler addXMLBodySchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(io.vertx.rxjava.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(io.vertx.rxjava.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandlerImpl:void handle(io.vertx.rxjava.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:void handle(io.vertx.rxjava.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(io.vertx.reactivex.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(io.vertx.reactivex.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:void handle(io.vertx.reactivex.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandlerImpl:void handle(io.vertx.reactivex.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator createStringEnumTypeValidator(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveInnerSchemaPrimitiveTypeValidator(io.swagger.v3.oas.models.media.Schema,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveInnerSchemaPrimitiveTypeValidator(io.swagger.v3.oas.models.media.Schema,boolean)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void resolveObjectTypeFields(io.vertx.ext.web.api.validation.impl.ObjectTypeValidator,io.swagger.v3.oas.models.media.Schema)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveAnyOfOneOfTypeValidator(io.swagger.v3.oas.models.media.Schema,io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedMatrixArray(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedObject(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedStyleDeepObjectTypeObject(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveSchemaTypeValidatorFormEncoded(io.swagger.v3.oas.models.media.Schema)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator createEnumTypeValidatorWithInnerValidator(java.util.List,io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validatePathParams(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterValidationRule:io.vertx.rxjava.ext.web.api.RequestParameter validateSingleParam(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterValidationRule:io.vertx.reactivex.ext.web.api.RequestParameter validateSingleParam(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter callValidator(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter validateArrayParam(java.util.List)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterTypeValidator:io.vertx.rxjava.ext.web.api.RequestParameter isValidCollection(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterTypeValidator:io.vertx.reactivex.ext.web.api.RequestParameter isValidCollection(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(io.vertx.rxjava.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(io.vertx.rxjava.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ValidationHandlerImpl:void handle(io.vertx.rxjava.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandlerImpl:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:void handle(io.vertx.rxjava.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)",
            "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(io.vertx.reactivex.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(io.vertx.reactivex.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:void handle(io.vertx.reactivex.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.validation.ValidationHandlerImpl:void handle(io.vertx.reactivex.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)",
            "io.vertx.reactivex.ext.web.api.validation.ValidationHandlerImpl:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void resolveObjectTypeFields(io.vertx.ext.web.api.validation.impl.ObjectTypeValidator,io.swagger.v3.oas.models.media.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveAnyOfOneOfTypeValidator(io.swagger.v3.oas.models.media.Schema,io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedStyleSimpleTypeObject(io.swagger.v3.oas.models.parameters.Parameter)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveSchemaTypeValidatorFormEncoded(io.swagger.v3.oas.models.media.Schema)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveAnyOfOneOfTypeValidator(io.swagger.v3.oas.models.media.Schema,io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:java.util.List resolveTypeValidatorsForAnyOfOneOf(java.util.List,io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseParameter(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedMatrixArray(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:boolean checkSupportedAndNeedWorkaround(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedObject(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:boolean checkSupportedAndNeedWorkaround(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedStyleDeepObjectTypeObject(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:boolean checkSupportedAndNeedWorkaround(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveSchemaTypeValidatorFormEncoded(io.swagger.v3.oas.models.media.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void handleMultimapParameter(java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Schema,io.swagger.v3.oas.models.media.Schema)",
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseRequestBody(io.swagger.v3.oas.models.parameters.RequestBody)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.ParameterValidationRuleImpl:io.vertx.ext.web.api.RequestParameter validateArrayParam(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateCookieParams(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateQueryParams(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateHeaderParams(io.vertx.ext.web.RoutingContext)",
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateFormParams(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.validation.ParameterValidationRule:io.vertx.rxjava.ext.web.api.RequestParameter validateArrayParam(java.util.List)",
            "io.vertx.reactivex.ext.web.api.validation.ParameterValidationRule:io.vertx.reactivex.ext.web.api.RequestParameter validateArrayParam(java.util.List)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ValidationHandlerImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.HTTPRequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.validation.HTTPRequestValidationHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.reactivex.ext.web.api.validation.ValidationHandlerImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$9:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$6:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$10:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$5:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$3:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$7:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$8:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$1:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$4:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$2:void handle(io.vertx.ext.web.RoutingContext)",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl$3:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void magicParameterExplodedStyleSimpleTypeObject(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:boolean checkSupportedAndNeedWorkaround(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:java.util.List resolveTypeValidatorsForAnyOfOneOf(java.util.List,io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveAnyOfOneOfTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseParameter(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseOperationSpec()"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:boolean checkSupportedAndNeedWorkaround(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseParameter(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void handleMultimapParameter(java.lang.String,java.lang.String,io.swagger.v3.oas.models.media.Schema,io.swagger.v3.oas.models.media.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseRequestBody(io.swagger.v3.oas.models.parameters.RequestBody)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseRequestBody(io.swagger.v3.oas.models.parameters.RequestBody)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseOperationSpec()"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateCookieParams(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateQueryParams(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateHeaderParams(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:java.util.Map validateFormParams(io.vertx.ext.web.RoutingContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.validation.impl.BaseValidationHandler:void handle(io.vertx.ext.web.RoutingContext)"
        ]
    },
    "io.vertx.rxjava.ext.web.api.validation.ParameterValidationRule:io.vertx.rxjava.ext.web.api.RequestParameter validateArrayParam(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.validation.ParameterValidationRule:io.vertx.reactivex.ext.web.api.RequestParameter validateArrayParam(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveAnyOfOneOfTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:io.vertx.ext.web.api.validation.ParameterTypeValidator resolveTypeValidator(io.swagger.v3.oas.models.parameters.Parameter)"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void parseOperationSpec()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void <init>(io.swagger.v3.oas.models.Operation,java.util.List,io.swagger.v3.oas.models.OpenAPI,io.swagger.v3.parser.ResolverCache)",
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void parseOperationSpec()",
            "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void parseOperationSpec()",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void parseOperationSpec()",
            "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void parseOperationSpec()"
        ]
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RequestValidationHandlerImpl:void <init>(io.swagger.v3.oas.models.Operation,java.util.List,io.swagger.v3.oas.models.OpenAPI,io.swagger.v3.parser.ResolverCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RouterFactoryImpl:io.vertx.ext.web.Router getRouter()"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void parseOperationSpec()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void parseOperationSpec()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RequestValidationHandler:void parseOperationSpec()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.contract.HTTPOperationRequestValidationHandlerImpl:void parseOperationSpec()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.ext.web.api.contract.openapi3.impl.OpenAPI3RouterFactoryImpl:io.vertx.ext.web.Router getRouter()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory:io.vertx.rxjava.ext.web.Router getRouter()",
            "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl:io.vertx.rxjava.ext.web.Router getRouter()",
            "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory:io.vertx.reactivex.ext.web.Router getRouter()",
            "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl:io.vertx.reactivex.ext.web.Router getRouter()"
        ]
    },
    "io.vertx.rxjava.ext.web.api.contract.openapi3.OpenAPI3RouterFactory:io.vertx.rxjava.ext.web.Router getRouter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.rxjava.ext.web.api.contract.RouterFactoryImpl:io.vertx.rxjava.ext.web.Router getRouter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.contract.openapi3.OpenAPI3RouterFactory:io.vertx.reactivex.ext.web.Router getRouter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.reactivex.ext.web.api.contract.RouterFactoryImpl:io.vertx.reactivex.ext.web.Router getRouter()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.apache.activemq.apollo.filter.XalanXPathEvaluator:boolean evaluate(org.xml.sax.InputSource)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.XalanXPathEvaluator:boolean evaluate(java.lang.String)"
        ]
    },
    "org.apache.activemq.apollo.filter.XalanXPathEvaluator:boolean evaluate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.XPathExpression:void <clinit>()",
            "org.apache.activemq.apollo.filter.XalanXPathEvaluator:boolean evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.XPathExpression:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.UnaryExpression:org.apache.activemq.apollo.filter.BooleanExpression createXPath(java.lang.String)",
            "org.apache.activemq.apollo.filter.XPathExpression:void <init>(java.lang.String)",
            "org.apache.activemq.apollo.filter.XPathExpression:void <clinit>()"
        ]
    },
    "org.apache.activemq.apollo.filter.XalanXPathEvaluator:boolean evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.XPathExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.UnaryExpression:org.apache.activemq.apollo.filter.BooleanExpression createXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression unaryExpr()",
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression unaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.filter.XPathExpression:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.UnaryExpression:org.apache.activemq.apollo.filter.BooleanExpression createXPath(java.lang.String)"
        ]
    },
    "org.apache.activemq.apollo.filter.XPathExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.XPathExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression unaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression multExpr()",
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression unaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression unaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression multExpr()",
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression unaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$BooleanUnaryExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$BooleanUnaryExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.filter.ArithmeticExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.ComparisonExpression:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.LogicExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$1:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$2:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$3:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$4:java.lang.Object evaluate(org.apache.activemq.apollo.filter.Filterable)",
            "org.apache.activemq.apollo.filter.UnaryExpression$BooleanUnaryExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)"
        ]
    },
    "org.apache.activemq.apollo.filter.XPathExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression multExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression addExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression multExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression addExpression()"
        ]
    },
    "org.apache.activemq.apollo.filter.ComparisonExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.activemq.apollo.filter.ComparisonExpression$LikeExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.activemq.apollo.filter.LogicExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.activemq.apollo.filter.UnaryExpression$BooleanUnaryExpression:boolean matches(org.apache.activemq.apollo.filter.Filterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression addExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression comparisonExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression addExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression comparisonExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression comparisonExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression equalityExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression comparisonExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression equalityExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression equalityExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression andExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression equalityExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression andExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression andExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression orExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression andExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression orExpression()"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression orExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.BooleanExpression JmsSelector()",
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression primaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression orExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.BooleanExpression JmsSelector()",
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression primaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.BooleanExpression JmsSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.SelectorParser:org.apache.activemq.apollo.filter.BooleanExpression parse(java.lang.String)"
        ]
    },
    "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression primaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.hyphenated.HyphenatedParser:org.apache.activemq.apollo.filter.Expression unaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.BooleanExpression JmsSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.SelectorParser:org.apache.activemq.apollo.filter.BooleanExpression parse(java.lang.String)"
        ]
    },
    "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression primaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.activemq.apollo.selector.strict.StrictParser:org.apache.activemq.apollo.filter.Expression unaryExpr()"
        ]
    },
    "org.apache.activemq.apollo.selector.SelectorParser:org.apache.activemq.apollo.filter.BooleanExpression parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}